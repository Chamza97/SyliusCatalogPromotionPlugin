<?php

use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;

/**
 * appTestDebugProjectContainer.
 *
 * This class has been auto-generated
 * by the Symfony Dependency Injection Component.
 */
class appTestDebugProjectContainer extends PSS\SymfonyMockerContainer\DependencyInjection\MockerContainer
{
    private $parameters;
    private $targetDirs = array();

    /**
     * Constructor.
     */
    public function __construct()
    {
        $dir = __DIR__;
        for ($i = 1; $i <= 5; ++$i) {
            $this->targetDirs[$i] = $dir = dirname($dir);
        }
        $this->parameters = $this->getDefaultParameters();

        $this->services = array();
        $this->methodMap = array(
            'annotation_reader' => 'getAnnotationReaderService',
            'annotations.reader' => 'getAnnotations_ReaderService',
            'assets.context' => 'getAssets_ContextService',
            'assets.packages' => 'getAssets_PackagesService',
            'bazinga_hateoas.expression_language' => 'getBazingaHateoas_ExpressionLanguageService',
            'cache.annotations' => 'getCache_AnnotationsService',
            'cache.app' => 'getCache_AppService',
            'cache.default_clearer' => 'getCache_DefaultClearerService',
            'cache.system' => 'getCache_SystemService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'catalog-promotion.channel-pricing-promotion-applicator' => 'getCatalogpromotion_ChannelpricingpromotionapplicatorService',
            'catalog-promotion.eligibility-filter' => 'getCatalogpromotion_EligibilityfilterService',
            'catalog-promotion.has-taxon-rule-checker' => 'getCatalogpromotion_HastaxonrulecheckerService',
            'catalog-promotion.processor' => 'getCatalogpromotion_ProcessorService',
            'config_cache_factory' => 'getConfigCacheFactoryService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'data_collector.dump' => 'getDataCollector_DumpService',
            'debug.argument_resolver' => 'getDebug_ArgumentResolverService',
            'debug.controller_resolver' => 'getDebug_ControllerResolverService',
            'debug.debug_handlers_listener' => 'getDebug_DebugHandlersListenerService',
            'debug.dump_listener' => 'getDebug_DumpListenerService',
            'debug.event_dispatcher' => 'getDebug_EventDispatcherService',
            'debug.file_link_formatter' => 'getDebug_FileLinkFormatterService',
            'debug.security.access.decision_manager' => 'getDebug_Security_Access_DecisionManagerService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.orm.default_entity_listener_resolver' => 'getDoctrine_Orm_DefaultEntityListenerResolverService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'doctrine.orm.default_entity_manager.property_info_extractor' => 'getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService',
            'doctrine.orm.default_listeners.attach_entity_listeners' => 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService',
            'doctrine.orm.default_manager_configurator' => 'getDoctrine_Orm_DefaultManagerConfiguratorService',
            'doctrine.orm.validator.unique' => 'getDoctrine_Orm_Validator_UniqueService',
            'doctrine.orm.validator_initializer' => 'getDoctrine_Orm_ValidatorInitializerService',
            'doctrine_cache.providers.doctrine.orm.default_metadata_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultMetadataCacheService',
            'doctrine_cache.providers.doctrine.orm.default_query_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService',
            'doctrine_cache.providers.doctrine.orm.default_result_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService',
            'doctrine_cache.providers.sylius_rbac' => 'getDoctrineCache_Providers_SyliusRbacService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.extension' => 'getForm_ExtensionService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.entity' => 'getForm_Type_EntityService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.range' => 'getForm_Type_RangeService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_extension.upload.validator' => 'getForm_TypeExtension_Upload_ValidatorService',
            'form.type_guesser.doctrine' => 'getForm_TypeGuesser_DoctrineService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_rest.body_listener' => 'getFosRest_BodyListenerService',
            'fos_rest.decoder.json' => 'getFosRest_Decoder_JsonService',
            'fos_rest.decoder.jsontoform' => 'getFosRest_Decoder_JsontoformService',
            'fos_rest.decoder.xml' => 'getFosRest_Decoder_XmlService',
            'fos_rest.decoder_provider' => 'getFosRest_DecoderProviderService',
            'fos_rest.exception.codes_map' => 'getFosRest_Exception_CodesMapService',
            'fos_rest.exception.controller' => 'getFosRest_Exception_ControllerService',
            'fos_rest.exception.twig_controller' => 'getFosRest_Exception_TwigControllerService',
            'fos_rest.exception_listener' => 'getFosRest_ExceptionListenerService',
            'fos_rest.inflector' => 'getFosRest_InflectorService',
            'fos_rest.normalizer.camel_keys' => 'getFosRest_Normalizer_CamelKeysService',
            'fos_rest.normalizer.camel_keys_with_leading_underscore' => 'getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService',
            'fos_rest.request.param_fetcher' => 'getFosRest_Request_ParamFetcherService',
            'fos_rest.request.param_fetcher.reader' => 'getFosRest_Request_ParamFetcher_ReaderService',
            'fos_rest.serializer' => 'getFosRest_SerializerService',
            'fos_rest.serializer.exception_normalizer.jms' => 'getFosRest_Serializer_ExceptionNormalizer_JmsService',
            'fos_rest.serializer.jms_handler_registry' => 'getFosRest_Serializer_JmsHandlerRegistryService',
            'fos_rest.view_handler' => 'getFosRest_ViewHandlerService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'fragment.renderer.ssi' => 'getFragment_Renderer_SsiService',
            'gaufrette.sylius_image_filesystem' => 'getGaufrette_SyliusImageFilesystemService',
            'hateoas.configuration.provider.resolver' => 'getHateoas_Configuration_Provider_ResolverService',
            'hateoas.configuration.relations_repository' => 'getHateoas_Configuration_RelationsRepositoryService',
            'hateoas.embeds_factory' => 'getHateoas_EmbedsFactoryService',
            'hateoas.event_subscriber.json' => 'getHateoas_EventSubscriber_JsonService',
            'hateoas.event_subscriber.xml' => 'getHateoas_EventSubscriber_XmlService',
            'hateoas.expression.evaluator' => 'getHateoas_Expression_EvaluatorService',
            'hateoas.expression.link' => 'getHateoas_Expression_LinkService',
            'hateoas.generator.registry' => 'getHateoas_Generator_RegistryService',
            'hateoas.generator.symfony' => 'getHateoas_Generator_SymfonyService',
            'hateoas.helper.link' => 'getHateoas_Helper_LinkService',
            'hateoas.link_factory' => 'getHateoas_LinkFactoryService',
            'hateoas.links_factory' => 'getHateoas_LinksFactoryService',
            'hateoas.serializer.exclusion_manager' => 'getHateoas_Serializer_ExclusionManagerService',
            'hateoas.twig.link' => 'getHateoas_Twig_LinkService',
            'http_kernel' => 'getHttpKernelService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.accessor_strategy' => 'getJmsSerializer_AccessorStrategyService',
            'jms_serializer.array_collection_handler' => 'getJmsSerializer_ArrayCollectionHandlerService',
            'jms_serializer.constraint_violation_handler' => 'getJmsSerializer_ConstraintViolationHandlerService',
            'jms_serializer.datetime_handler' => 'getJmsSerializer_DatetimeHandlerService',
            'jms_serializer.deserialization_context_factory' => 'getJmsSerializer_DeserializationContextFactoryService',
            'jms_serializer.doctrine_proxy_subscriber' => 'getJmsSerializer_DoctrineProxySubscriberService',
            'jms_serializer.expression_evaluator' => 'getJmsSerializer_ExpressionEvaluatorService',
            'jms_serializer.form_error_handler' => 'getJmsSerializer_FormErrorHandlerService',
            'jms_serializer.handler_registry' => 'getJmsSerializer_HandlerRegistryService',
            'jms_serializer.json_deserialization_visitor' => 'getJmsSerializer_JsonDeserializationVisitorService',
            'jms_serializer.json_serialization_visitor' => 'getJmsSerializer_JsonSerializationVisitorService',
            'jms_serializer.metadata.file_locator' => 'getJmsSerializer_Metadata_FileLocatorService',
            'jms_serializer.metadata_driver' => 'getJmsSerializer_MetadataDriverService',
            'jms_serializer.metadata_factory' => 'getJmsSerializer_MetadataFactoryService',
            'jms_serializer.naming_strategy' => 'getJmsSerializer_NamingStrategyService',
            'jms_serializer.object_constructor' => 'getJmsSerializer_ObjectConstructorService',
            'jms_serializer.php_collection_handler' => 'getJmsSerializer_PhpCollectionHandlerService',
            'jms_serializer.serialization_context_factory' => 'getJmsSerializer_SerializationContextFactoryService',
            'jms_serializer.stopwatch_subscriber' => 'getJmsSerializer_StopwatchSubscriberService',
            'jms_serializer.templating.helper.serializer' => 'getJmsSerializer_Templating_Helper_SerializerService',
            'jms_serializer.twig_extension.serializer_runtime_helper' => 'getJmsSerializer_TwigExtension_SerializerRuntimeHelperService',
            'jms_serializer.unserialize_object_constructor' => 'getJmsSerializer_UnserializeObjectConstructorService',
            'jms_serializer.xml_deserialization_visitor' => 'getJmsSerializer_XmlDeserializationVisitorService',
            'jms_serializer.xml_serialization_visitor' => 'getJmsSerializer_XmlSerializationVisitorService',
            'jms_serializer.yaml_serialization_visitor' => 'getJmsSerializer_YamlSerializationVisitorService',
            'kernel' => 'getKernelService',
            'kernel.class_cache.cache_warmer' => 'getKernel_ClassCache_CacheWarmerService',
            'knp_gaufrette.filesystem_map' => 'getKnpGaufrette_FilesystemMapService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.listener.voters' => 'getKnpMenu_Listener_VotersService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'knp_menu.menu_provider' => 'getKnpMenu_MenuProviderService',
            'knp_menu.renderer.list' => 'getKnpMenu_Renderer_ListService',
            'knp_menu.renderer.twig' => 'getKnpMenu_Renderer_TwigService',
            'knp_menu.renderer_provider' => 'getKnpMenu_RendererProviderService',
            'knp_menu.voter.router' => 'getKnpMenu_Voter_RouterService',
            'liip_imagine' => 'getLiipImagineService',
            'liip_imagine.binary.loader.default' => 'getLiipImagine_Binary_Loader_DefaultService',
            'liip_imagine.binary.loader.prototype.filesystem' => 'getLiipImagine_Binary_Loader_Prototype_FilesystemService',
            'liip_imagine.binary.loader.prototype.stream' => 'getLiipImagine_Binary_Loader_Prototype_StreamService',
            'liip_imagine.binary.mime_type_guesser' => 'getLiipImagine_Binary_MimeTypeGuesserService',
            'liip_imagine.cache.manager' => 'getLiipImagine_Cache_ManagerService',
            'liip_imagine.cache.resolver.default' => 'getLiipImagine_Cache_Resolver_DefaultService',
            'liip_imagine.cache.resolver.no_cache_web_path' => 'getLiipImagine_Cache_Resolver_NoCacheWebPathService',
            'liip_imagine.cache.signer' => 'getLiipImagine_Cache_SignerService',
            'liip_imagine.controller' => 'getLiipImagine_ControllerService',
            'liip_imagine.data.manager' => 'getLiipImagine_Data_ManagerService',
            'liip_imagine.extension_guesser' => 'getLiipImagine_ExtensionGuesserService',
            'liip_imagine.filter.configuration' => 'getLiipImagine_Filter_ConfigurationService',
            'liip_imagine.filter.loader.auto_rotate' => 'getLiipImagine_Filter_Loader_AutoRotateService',
            'liip_imagine.filter.loader.background' => 'getLiipImagine_Filter_Loader_BackgroundService',
            'liip_imagine.filter.loader.crop' => 'getLiipImagine_Filter_Loader_CropService',
            'liip_imagine.filter.loader.downscale' => 'getLiipImagine_Filter_Loader_DownscaleService',
            'liip_imagine.filter.loader.flip' => 'getLiipImagine_Filter_Loader_FlipService',
            'liip_imagine.filter.loader.grayscale' => 'getLiipImagine_Filter_Loader_GrayscaleService',
            'liip_imagine.filter.loader.interlace' => 'getLiipImagine_Filter_Loader_InterlaceService',
            'liip_imagine.filter.loader.paste' => 'getLiipImagine_Filter_Loader_PasteService',
            'liip_imagine.filter.loader.relative_resize' => 'getLiipImagine_Filter_Loader_RelativeResizeService',
            'liip_imagine.filter.loader.resize' => 'getLiipImagine_Filter_Loader_ResizeService',
            'liip_imagine.filter.loader.rotate' => 'getLiipImagine_Filter_Loader_RotateService',
            'liip_imagine.filter.loader.scale' => 'getLiipImagine_Filter_Loader_ScaleService',
            'liip_imagine.filter.loader.strip' => 'getLiipImagine_Filter_Loader_StripService',
            'liip_imagine.filter.loader.thumbnail' => 'getLiipImagine_Filter_Loader_ThumbnailService',
            'liip_imagine.filter.loader.upscale' => 'getLiipImagine_Filter_Loader_UpscaleService',
            'liip_imagine.filter.loader.watermark' => 'getLiipImagine_Filter_Loader_WatermarkService',
            'liip_imagine.filter.manager' => 'getLiipImagine_Filter_ManagerService',
            'liip_imagine.filter.post_processor.jpegoptim' => 'getLiipImagine_Filter_PostProcessor_JpegoptimService',
            'liip_imagine.filter.post_processor.mozjpeg' => 'getLiipImagine_Filter_PostProcessor_MozjpegService',
            'liip_imagine.filter.post_processor.optipng' => 'getLiipImagine_Filter_PostProcessor_OptipngService',
            'liip_imagine.filter.post_processor.pngquant' => 'getLiipImagine_Filter_PostProcessor_PngquantService',
            'liip_imagine.form.type.image' => 'getLiipImagine_Form_Type_ImageService',
            'liip_imagine.mime_type_guesser' => 'getLiipImagine_MimeTypeGuesserService',
            'liip_imagine.templating.helper' => 'getLiipImagine_Templating_HelperService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'monolog.activation_strategy.not_found' => 'getMonolog_ActivationStrategy_NotFoundService',
            'monolog.handler.fingers_crossed.error_level_activation_strategy' => 'getMonolog_Handler_FingersCrossed_ErrorLevelActivationStrategyService',
            'monolog.handler.null_internal' => 'getMonolog_Handler_NullInternalService',
            'monolog.logger.cache' => 'getMonolog_Logger_CacheService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.event' => 'getMonolog_Logger_EventService',
            'monolog.logger.payum' => 'getMonolog_Logger_PayumService',
            'monolog.logger.php' => 'getMonolog_Logger_PhpService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'monolog.logger.templating' => 'getMonolog_Logger_TemplatingService',
            'monolog.logger.translation' => 'getMonolog_Logger_TranslationService',
            'pagerfanta.convert_not_valid_current_page_to_not_found_listener' => 'getPagerfanta_ConvertNotValidCurrentPageToNotFoundListenerService',
            'pagerfanta.convert_not_valid_max_per_page_to_not_found_listener' => 'getPagerfanta_ConvertNotValidMaxPerPageToNotFoundListenerService',
            'payum' => 'getPayumService',
            'payum.action.get_http_request' => 'getPayum_Action_GetHttpRequestService',
            'payum.action.obtain_credit_card_builder' => 'getPayum_Action_ObtainCreditCardBuilderService',
            'payum.builder' => 'getPayum_BuilderService',
            'payum.converter.reply_to_http_response' => 'getPayum_Converter_ReplyToHttpResponseService',
            'payum.dynamic_gateways.config_storage' => 'getPayum_DynamicGateways_ConfigStorageService',
            'payum.dynamic_registry' => 'getPayum_DynamicRegistryService',
            'payum.extension.log_executed_actions' => 'getPayum_Extension_LogExecutedActionsService',
            'payum.extension.logger' => 'getPayum_Extension_LoggerService',
            'payum.extension.storage.sylius_component_core_model_order' => 'getPayum_Extension_Storage_SyliusComponentCoreModelOrderService',
            'payum.extension.storage.sylius_component_core_model_payment' => 'getPayum_Extension_Storage_SyliusComponentCoreModelPaymentService',
            'payum.form.extension.gateway_factories_choice' => 'getPayum_Form_Extension_GatewayFactoriesChoiceService',
            'payum.form.type.credit_card' => 'getPayum_Form_Type_CreditCardService',
            'payum.form.type.credit_card_expiration_date' => 'getPayum_Form_Type_CreditCardExpirationDateService',
            'payum.form.type.gateway_config' => 'getPayum_Form_Type_GatewayConfigService',
            'payum.form.type.gateway_factories_choice' => 'getPayum_Form_Type_GatewayFactoriesChoiceService',
            'payum.listener.reply_to_http_response' => 'getPayum_Listener_ReplyToHttpResponseService',
            'payum.profiler.payum_collector' => 'getPayum_Profiler_PayumCollectorService',
            'payum.security.token_storage' => 'getPayum_Security_TokenStorageService',
            'payum.static_registry' => 'getPayum_StaticRegistryService',
            'payum.storage.sylius_bundle_payumbundle_model_gatewayconfig' => 'getPayum_Storage_SyliusBundlePayumbundleModelGatewayconfigService',
            'payum.storage.sylius_bundle_payumbundle_model_paymentsecuritytoken' => 'getPayum_Storage_SyliusBundlePayumbundleModelPaymentsecuritytokenService',
            'payum.storage.sylius_component_core_model_order' => 'getPayum_Storage_SyliusComponentCoreModelOrderService',
            'payum.storage.sylius_component_core_model_payment' => 'getPayum_Storage_SyliusComponentCoreModelPaymentService',
            'property_accessor' => 'getPropertyAccessorService',
            'request_stack' => 'getRequestStackService',
            'response_listener' => 'getResponseListenerService',
            'router' => 'getRouterService',
            'router.request_context' => 'getRouter_RequestContextService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.authentication.guard_handler' => 'getSecurity_Authentication_GuardHandlerService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.session_strategy' => 'getSecurity_Authentication_SessionStrategyService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map' => 'getSecurity_Firewall_MapService',
            'security.firewall.map.context.admin' => 'getSecurity_Firewall_Map_Context_AdminService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.shop' => 'getSecurity_Firewall_Map_Context_ShopService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'security.user_checker' => 'getSecurity_UserCheckerService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_distribution.security_checker' => 'getSensioDistribution_SecurityCheckerService',
            'sensio_distribution.security_checker.command' => 'getSensioDistribution_SecurityChecker_CommandService',
            'service_container' => 'getServiceContainerService',
            'session' => 'getSessionService',
            'session.save_listener' => 'getSession_SaveListenerService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'sm.callback.cascade_transition' => 'getSm_Callback_CascadeTransitionService',
            'sm.callback_factory' => 'getSm_CallbackFactoryService',
            'sm.factory' => 'getSm_FactoryService',
            'sonata.block.cache.handler.default' => 'getSonata_Block_Cache_Handler_DefaultService',
            'sonata.block.cache.handler.noop' => 'getSonata_Block_Cache_Handler_NoopService',
            'sonata.block.context_manager.default' => 'getSonata_Block_ContextManager_DefaultService',
            'sonata.block.exception.filter.debug_only' => 'getSonata_Block_Exception_Filter_DebugOnlyService',
            'sonata.block.exception.filter.ignore_block_exception' => 'getSonata_Block_Exception_Filter_IgnoreBlockExceptionService',
            'sonata.block.exception.filter.keep_all' => 'getSonata_Block_Exception_Filter_KeepAllService',
            'sonata.block.exception.filter.keep_none' => 'getSonata_Block_Exception_Filter_KeepNoneService',
            'sonata.block.exception.renderer.inline' => 'getSonata_Block_Exception_Renderer_InlineService',
            'sonata.block.exception.renderer.inline_debug' => 'getSonata_Block_Exception_Renderer_InlineDebugService',
            'sonata.block.exception.renderer.throw' => 'getSonata_Block_Exception_Renderer_ThrowService',
            'sonata.block.exception.strategy.manager' => 'getSonata_Block_Exception_Strategy_ManagerService',
            'sonata.block.form.type.block' => 'getSonata_Block_Form_Type_BlockService',
            'sonata.block.form.type.container_template' => 'getSonata_Block_Form_Type_ContainerTemplateService',
            'sonata.block.loader.chain' => 'getSonata_Block_Loader_ChainService',
            'sonata.block.loader.service' => 'getSonata_Block_Loader_ServiceService',
            'sonata.block.manager' => 'getSonata_Block_ManagerService',
            'sonata.block.menu.registry' => 'getSonata_Block_Menu_RegistryService',
            'sonata.block.renderer.default' => 'getSonata_Block_Renderer_DefaultService',
            'sonata.block.service.container' => 'getSonata_Block_Service_ContainerService',
            'sonata.block.service.empty' => 'getSonata_Block_Service_EmptyService',
            'sonata.block.service.menu' => 'getSonata_Block_Service_MenuService',
            'sonata.block.service.rss' => 'getSonata_Block_Service_RssService',
            'sonata.block.service.template' => 'getSonata_Block_Service_TemplateService',
            'sonata.block.service.text' => 'getSonata_Block_Service_TextService',
            'sonata.block.templating.helper' => 'getSonata_Block_Templating_HelperService',
            'sonata.block.twig.global' => 'getSonata_Block_Twig_GlobalService',
            'sonata.core.date.moment_format_converter' => 'getSonata_Core_Date_MomentFormatConverterService',
            'sonata.core.flashmessage.manager' => 'getSonata_Core_Flashmessage_ManagerService',
            'sonata.core.flashmessage.twig.extension' => 'getSonata_Core_Flashmessage_Twig_ExtensionService',
            'sonata.core.form.type.array' => 'getSonata_Core_Form_Type_ArrayService',
            'sonata.core.form.type.boolean' => 'getSonata_Core_Form_Type_BooleanService',
            'sonata.core.form.type.collection' => 'getSonata_Core_Form_Type_CollectionService',
            'sonata.core.form.type.color_selector' => 'getSonata_Core_Form_Type_ColorSelectorService',
            'sonata.core.form.type.date_picker' => 'getSonata_Core_Form_Type_DatePickerService',
            'sonata.core.form.type.date_range' => 'getSonata_Core_Form_Type_DateRangeService',
            'sonata.core.form.type.date_range_picker' => 'getSonata_Core_Form_Type_DateRangePickerService',
            'sonata.core.form.type.datetime_picker' => 'getSonata_Core_Form_Type_DatetimePickerService',
            'sonata.core.form.type.datetime_range' => 'getSonata_Core_Form_Type_DatetimeRangeService',
            'sonata.core.form.type.datetime_range_picker' => 'getSonata_Core_Form_Type_DatetimeRangePickerService',
            'sonata.core.form.type.equal' => 'getSonata_Core_Form_Type_EqualService',
            'sonata.core.form.type.translatable_choice' => 'getSonata_Core_Form_Type_TranslatableChoiceService',
            'sonata.core.model.adapter.chain' => 'getSonata_Core_Model_Adapter_ChainService',
            'sonata.core.slugify.cocur' => 'getSonata_Core_Slugify_CocurService',
            'sonata.core.slugify.native' => 'getSonata_Core_Slugify_NativeService',
            'sonata.core.twig.extension.text' => 'getSonata_Core_Twig_Extension_TextService',
            'sonata.core.twig.extension.wrapping' => 'getSonata_Core_Twig_Extension_WrappingService',
            'sonata.core.twig.status_extension' => 'getSonata_Core_Twig_StatusExtensionService',
            'sonata.core.twig.template_extension' => 'getSonata_Core_Twig_TemplateExtensionService',
            'sonata.core.validator.inline' => 'getSonata_Core_Validator_InlineService',
            'sonata.intl.locale_detector.request_stack' => 'getSonata_Intl_LocaleDetector_RequestStackService',
            'sonata.intl.templating.helper.datetime' => 'getSonata_Intl_Templating_Helper_DatetimeService',
            'sonata.intl.templating.helper.locale' => 'getSonata_Intl_Templating_Helper_LocaleService',
            'sonata.intl.templating.helper.number' => 'getSonata_Intl_Templating_Helper_NumberService',
            'sonata.intl.timezone_detector.chain' => 'getSonata_Intl_TimezoneDetector_ChainService',
            'sonata.intl.timezone_detector.locale' => 'getSonata_Intl_TimezoneDetector_LocaleService',
            'stof_doctrine_extensions.event_listener.logger' => 'getStofDoctrineExtensions_EventListener_LoggerService',
            'stof_doctrine_extensions.listener.loggable' => 'getStofDoctrineExtensions_Listener_LoggableService',
            'stof_doctrine_extensions.uploadable.manager' => 'getStofDoctrineExtensions_Uploadable_ManagerService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.plugin.messagelogger' => 'getSwiftmailer_Mailer_Default_Plugin_MessageloggerService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'sylius.active_promotions_provider' => 'getSylius_ActivePromotionsProviderService',
            'sylius.address_comparator' => 'getSylius_AddressComparatorService',
            'sylius.adjustments_aggregator' => 'getSylius_AdjustmentsAggregatorService',
            'sylius.admin.menu_builder.customer.show' => 'getSylius_Admin_MenuBuilder_Customer_ShowService',
            'sylius.admin.menu_builder.main' => 'getSylius_Admin_MenuBuilder_MainService',
            'sylius.admin.menu_builder.order.show' => 'getSylius_Admin_MenuBuilder_Order_ShowService',
            'sylius.admin.menu_builder.product_form' => 'getSylius_Admin_MenuBuilder_ProductFormService',
            'sylius.admin.menu_builder.product_variant_form' => 'getSylius_Admin_MenuBuilder_ProductVariantFormService',
            'sylius.admin_user.pin_generator.password_reset' => 'getSylius_AdminUser_PinGenerator_PasswordResetService',
            'sylius.admin_user.pin_uniqueness_checker.password_reset' => 'getSylius_AdminUser_PinUniquenessChecker_PasswordResetService',
            'sylius.admin_user.reloader' => 'getSylius_AdminUser_ReloaderService',
            'sylius.admin_user.token_generator.email_verification' => 'getSylius_AdminUser_TokenGenerator_EmailVerificationService',
            'sylius.admin_user.token_generator.password_reset' => 'getSylius_AdminUser_TokenGenerator_PasswordResetService',
            'sylius.admin_user.token_uniqueness_checker.email_verification' => 'getSylius_AdminUser_TokenUniquenessChecker_EmailVerificationService',
            'sylius.admin_user.token_uniqueness_checker.password_reset' => 'getSylius_AdminUser_TokenUniquenessChecker_PasswordResetService',
            'sylius.admin_user_provider.email_based' => 'getSylius_AdminUserProvider_EmailBasedService',
            'sylius.admin_user_provider.email_or_name_based' => 'getSylius_AdminUserProvider_EmailOrNameBasedService',
            'sylius.admin_user_provider.name_based' => 'getSylius_AdminUserProvider_NameBasedService',
            'sylius.attribute_type.checkbox' => 'getSylius_AttributeType_CheckboxService',
            'sylius.attribute_type.date' => 'getSylius_AttributeType_DateService',
            'sylius.attribute_type.datetime' => 'getSylius_AttributeType_DatetimeService',
            'sylius.attribute_type.integer' => 'getSylius_AttributeType_IntegerService',
            'sylius.attribute_type.percent' => 'getSylius_AttributeType_PercentService',
            'sylius.attribute_type.select' => 'getSylius_AttributeType_SelectService',
            'sylius.attribute_type.text' => 'getSylius_AttributeType_TextService',
            'sylius.attribute_type.textarea' => 'getSylius_AttributeType_TextareaService',
            'sylius.availability_checker.default' => 'getSylius_AvailabilityChecker_DefaultService',
            'sylius.average_rating_calculator' => 'getSylius_AverageRatingCalculatorService',
            'sylius.behat.email_checker' => 'getSylius_Behat_EmailCheckerService',
            'sylius.behat.factory.default_channel' => 'getSylius_Behat_Factory_DefaultChannelService',
            'sylius.behat.factory.default_united_states_channel' => 'getSylius_Behat_Factory_DefaultUnitedStatesChannelService',
            'sylius.calculator.product_variant_price' => 'getSylius_Calculator_ProductVariantPriceService',
            'sylius.canonicalizer' => 'getSylius_CanonicalizerService',
            'sylius.checker.order_payment_method_selection_requirement' => 'getSylius_Checker_OrderPaymentMethodSelectionRequirementService',
            'sylius.checker.order_shipping_method_selection_requirement' => 'getSylius_Checker_OrderShippingMethodSelectionRequirementService',
            'sylius.checker.product_variants_parity' => 'getSylius_Checker_ProductVariantsParityService',
            'sylius.commands_provider.database_setup' => 'getSylius_CommandsProvider_DatabaseSetupService',
            'sylius.console.command.resource_debug' => 'getSylius_Console_Command_ResourceDebugService',
            'sylius.context.cart' => 'getSylius_Context_CartService',
            'sylius.context.cart.customer_and_channel_based' => 'getSylius_Context_Cart_CustomerAndChannelBasedService',
            'sylius.context.cart.new' => 'getSylius_Context_Cart_NewService',
            'sylius.context.cart.session_and_channel_based' => 'getSylius_Context_Cart_SessionAndChannelBasedService',
            'sylius.context.channel' => 'getSylius_Context_ChannelService',
            'sylius.context.channel.fake_channel.code_provider' => 'getSylius_Context_Channel_FakeChannel_CodeProviderService',
            'sylius.context.channel.fake_channel.persister' => 'getSylius_Context_Channel_FakeChannel_PersisterService',
            'sylius.context.channel.request_based.resolver' => 'getSylius_Context_Channel_RequestBased_ResolverService',
            'sylius.context.currency.channel_aware' => 'getSylius_Context_Currency_ChannelAwareService',
            'sylius.context.currency.storage_based' => 'getSylius_Context_Currency_StorageBasedService',
            'sylius.context.customer' => 'getSylius_Context_CustomerService',
            'sylius.context.locale' => 'getSylius_Context_LocaleService',
            'sylius.context.locale.admin_based' => 'getSylius_Context_Locale_AdminBasedService',
            'sylius.context.locale.provider_based' => 'getSylius_Context_Locale_ProviderBasedService',
            'sylius.context.locale.request_based' => 'getSylius_Context_Locale_RequestBasedService',
            'sylius.context.shopper' => 'getSylius_Context_ShopperService',
            'sylius.context.theme' => 'getSylius_Context_ThemeService',
            'sylius.controller.address' => 'getSylius_Controller_AddressService',
            'sylius.controller.address_log_entry' => 'getSylius_Controller_AddressLogEntryService',
            'sylius.controller.adjustment' => 'getSylius_Controller_AdjustmentService',
            'sylius.controller.admin.dashboard' => 'getSylius_Controller_Admin_DashboardService',
            'sylius.controller.admin.notification' => 'getSylius_Controller_Admin_NotificationService',
            'sylius.controller.admin_user' => 'getSylius_Controller_AdminUserService',
            'sylius.controller.channel' => 'getSylius_Controller_ChannelService',
            'sylius.controller.channel_pricing' => 'getSylius_Controller_ChannelPricingService',
            'sylius.controller.country' => 'getSylius_Controller_CountryService',
            'sylius.controller.currency' => 'getSylius_Controller_CurrencyService',
            'sylius.controller.customer' => 'getSylius_Controller_CustomerService',
            'sylius.controller.customer_group' => 'getSylius_Controller_CustomerGroupService',
            'sylius.controller.customer_statistics' => 'getSylius_Controller_CustomerStatisticsService',
            'sylius.controller.exchange_rate' => 'getSylius_Controller_ExchangeRateService',
            'sylius.controller.gateway_config' => 'getSylius_Controller_GatewayConfigService',
            'sylius.controller.impersonate_user' => 'getSylius_Controller_ImpersonateUserService',
            'sylius.controller.inventory_unit' => 'getSylius_Controller_InventoryUnitService',
            'sylius.controller.locale' => 'getSylius_Controller_LocaleService',
            'sylius.controller.oauth_user' => 'getSylius_Controller_OauthUserService',
            'sylius.controller.order' => 'getSylius_Controller_OrderService',
            'sylius.controller.order_item' => 'getSylius_Controller_OrderItemService',
            'sylius.controller.order_item_unit' => 'getSylius_Controller_OrderItemUnitService',
            'sylius.controller.payment' => 'getSylius_Controller_PaymentService',
            'sylius.controller.payment_method' => 'getSylius_Controller_PaymentMethodService',
            'sylius.controller.payment_method_translation' => 'getSylius_Controller_PaymentMethodTranslationService',
            'sylius.controller.payment_security_token' => 'getSylius_Controller_PaymentSecurityTokenService',
            'sylius.controller.payum' => 'getSylius_Controller_PayumService',
            'sylius.controller.product' => 'getSylius_Controller_ProductService',
            'sylius.controller.product_association' => 'getSylius_Controller_ProductAssociationService',
            'sylius.controller.product_association_type' => 'getSylius_Controller_ProductAssociationTypeService',
            'sylius.controller.product_association_type_translation' => 'getSylius_Controller_ProductAssociationTypeTranslationService',
            'sylius.controller.product_attribute' => 'getSylius_Controller_ProductAttributeService',
            'sylius.controller.product_attribute_translation' => 'getSylius_Controller_ProductAttributeTranslationService',
            'sylius.controller.product_attribute_value' => 'getSylius_Controller_ProductAttributeValueService',
            'sylius.controller.product_image' => 'getSylius_Controller_ProductImageService',
            'sylius.controller.product_option' => 'getSylius_Controller_ProductOptionService',
            'sylius.controller.product_option_translation' => 'getSylius_Controller_ProductOptionTranslationService',
            'sylius.controller.product_option_value' => 'getSylius_Controller_ProductOptionValueService',
            'sylius.controller.product_option_value_translation' => 'getSylius_Controller_ProductOptionValueTranslationService',
            'sylius.controller.product_review' => 'getSylius_Controller_ProductReviewService',
            'sylius.controller.product_slug' => 'getSylius_Controller_ProductSlugService',
            'sylius.controller.product_taxon' => 'getSylius_Controller_ProductTaxonService',
            'sylius.controller.product_translation' => 'getSylius_Controller_ProductTranslationService',
            'sylius.controller.product_variant' => 'getSylius_Controller_ProductVariantService',
            'sylius.controller.product_variant_translation' => 'getSylius_Controller_ProductVariantTranslationService',
            'sylius.controller.promotion' => 'getSylius_Controller_PromotionService',
            'sylius.controller.promotion_action' => 'getSylius_Controller_PromotionActionService',
            'sylius.controller.promotion_coupon' => 'getSylius_Controller_PromotionCouponService',
            'sylius.controller.promotion_rule' => 'getSylius_Controller_PromotionRuleService',
            'sylius.controller.province' => 'getSylius_Controller_ProvinceService',
            'sylius.controller.security' => 'getSylius_Controller_SecurityService',
            'sylius.controller.shipment' => 'getSylius_Controller_ShipmentService',
            'sylius.controller.shipment_unit' => 'getSylius_Controller_ShipmentUnitService',
            'sylius.controller.shipping_category' => 'getSylius_Controller_ShippingCategoryService',
            'sylius.controller.shipping_method' => 'getSylius_Controller_ShippingMethodService',
            'sylius.controller.shipping_method_translation' => 'getSylius_Controller_ShippingMethodTranslationService',
            'sylius.controller.shop.contact' => 'getSylius_Controller_Shop_ContactService',
            'sylius.controller.shop.currency_switch' => 'getSylius_Controller_Shop_CurrencySwitchService',
            'sylius.controller.shop.homepage' => 'getSylius_Controller_Shop_HomepageService',
            'sylius.controller.shop.locale_switch' => 'getSylius_Controller_Shop_LocaleSwitchService',
            'sylius.controller.shop.security_widget' => 'getSylius_Controller_Shop_SecurityWidgetService',
            'sylius.controller.shop_user' => 'getSylius_Controller_ShopUserService',
            'sylius.controller.tax_category' => 'getSylius_Controller_TaxCategoryService',
            'sylius.controller.tax_rate' => 'getSylius_Controller_TaxRateService',
            'sylius.controller.taxon' => 'getSylius_Controller_TaxonService',
            'sylius.controller.taxon_image' => 'getSylius_Controller_TaxonImageService',
            'sylius.controller.taxon_slug' => 'getSylius_Controller_TaxonSlugService',
            'sylius.controller.taxon_translation' => 'getSylius_Controller_TaxonTranslationService',
            'sylius.controller.user_security' => 'getSylius_Controller_UserSecurityService',
            'sylius.controller.zone' => 'getSylius_Controller_ZoneService',
            'sylius.controller.zone_member' => 'getSylius_Controller_ZoneMemberService',
            'sylius.converter.country_name' => 'getSylius_Converter_CountryNameService',
            'sylius.currency_converter' => 'getSylius_CurrencyConverterService',
            'sylius.currency_name_converter' => 'getSylius_CurrencyNameConverterService',
            'sylius.custom_grid_renderer.twig' => 'getSylius_CustomGridRenderer_TwigService',
            'sylius.custom_resource_controller.resource_update_handler' => 'getSylius_CustomResourceController_ResourceUpdateHandlerService',
            'sylius.customer_ip_assigner' => 'getSylius_CustomerIpAssignerService',
            'sylius.customer_order_addresses_saver' => 'getSylius_CustomerOrderAddressesSaverService',
            'sylius.customer_statistics_provider' => 'getSylius_CustomerStatisticsProviderService',
            'sylius.customer_unique_address_adder' => 'getSylius_CustomerUniqueAddressAdderService',
            'sylius.dashboard.statistics_provider' => 'getSylius_Dashboard_StatisticsProviderService',
            'sylius.doctrine.orm.event_subscriber.load_metadata.attribute' => 'getSylius_Doctrine_Orm_EventSubscriber_LoadMetadata_AttributeService',
            'sylius.doctrine.orm.event_subscriber.load_metadata.review' => 'getSylius_Doctrine_Orm_EventSubscriber_LoadMetadata_ReviewService',
            'sylius.email_manager.contact' => 'getSylius_EmailManager_ContactService',
            'sylius.email_manager.order' => 'getSylius_EmailManager_OrderService',
            'sylius.email_manager.shipment' => 'getSylius_EmailManager_ShipmentService',
            'sylius.email_provider' => 'getSylius_EmailProviderService',
            'sylius.email_renderer.adapter.twig' => 'getSylius_EmailRenderer_Adapter_TwigService',
            'sylius.email_sender' => 'getSylius_EmailSenderService',
            'sylius.email_sender.adapter.swiftmailer' => 'getSylius_EmailSender_Adapter_SwiftmailerService',
            'sylius.event_subscriber.orm_mapped_super_class' => 'getSylius_EventSubscriber_OrmMappedSuperClassService',
            'sylius.event_subscriber.orm_repository_class' => 'getSylius_EventSubscriber_OrmRepositoryClassService',
            'sylius.event_subscriber.resource_delete' => 'getSylius_EventSubscriber_ResourceDeleteService',
            'sylius.expired_carts_remover' => 'getSylius_ExpiredCartsRemoverService',
            'sylius.expression_language' => 'getSylius_ExpressionLanguageService',
            'sylius.factory.add_to_cart_command' => 'getSylius_Factory_AddToCartCommandService',
            'sylius.factory.address' => 'getSylius_Factory_AddressService',
            'sylius.factory.address_log_entry' => 'getSylius_Factory_AddressLogEntryService',
            'sylius.factory.adjustment' => 'getSylius_Factory_AdjustmentService',
            'sylius.factory.admin_user' => 'getSylius_Factory_AdminUserService',
            'sylius.factory.cart_item' => 'getSylius_Factory_CartItemService',
            'sylius.factory.channel' => 'getSylius_Factory_ChannelService',
            'sylius.factory.channel_pricing' => 'getSylius_Factory_ChannelPricingService',
            'sylius.factory.country' => 'getSylius_Factory_CountryService',
            'sylius.factory.currency' => 'getSylius_Factory_CurrencyService',
            'sylius.factory.customer' => 'getSylius_Factory_CustomerService',
            'sylius.factory.customer_group' => 'getSylius_Factory_CustomerGroupService',
            'sylius.factory.email' => 'getSylius_Factory_EmailService',
            'sylius.factory.exchange_rate' => 'getSylius_Factory_ExchangeRateService',
            'sylius.factory.gateway_config' => 'getSylius_Factory_GatewayConfigService',
            'sylius.factory.inventory_unit' => 'getSylius_Factory_InventoryUnitService',
            'sylius.factory.locale' => 'getSylius_Factory_LocaleService',
            'sylius.factory.oauth_user' => 'getSylius_Factory_OauthUserService',
            'sylius.factory.order' => 'getSylius_Factory_OrderService',
            'sylius.factory.order_item_unit' => 'getSylius_Factory_OrderItemUnitService',
            'sylius.factory.order_sequence' => 'getSylius_Factory_OrderSequenceService',
            'sylius.factory.payment' => 'getSylius_Factory_PaymentService',
            'sylius.factory.payment_method' => 'getSylius_Factory_PaymentMethodService',
            'sylius.factory.payment_method_translation' => 'getSylius_Factory_PaymentMethodTranslationService',
            'sylius.factory.payment_security_token' => 'getSylius_Factory_PaymentSecurityTokenService',
            'sylius.factory.product' => 'getSylius_Factory_ProductService',
            'sylius.factory.product_association' => 'getSylius_Factory_ProductAssociationService',
            'sylius.factory.product_association_type' => 'getSylius_Factory_ProductAssociationTypeService',
            'sylius.factory.product_association_type_translation' => 'getSylius_Factory_ProductAssociationTypeTranslationService',
            'sylius.factory.product_attribute' => 'getSylius_Factory_ProductAttributeService',
            'sylius.factory.product_attribute_translation' => 'getSylius_Factory_ProductAttributeTranslationService',
            'sylius.factory.product_attribute_value' => 'getSylius_Factory_ProductAttributeValueService',
            'sylius.factory.product_image' => 'getSylius_Factory_ProductImageService',
            'sylius.factory.product_option' => 'getSylius_Factory_ProductOptionService',
            'sylius.factory.product_option_translation' => 'getSylius_Factory_ProductOptionTranslationService',
            'sylius.factory.product_option_value' => 'getSylius_Factory_ProductOptionValueService',
            'sylius.factory.product_option_value_translation' => 'getSylius_Factory_ProductOptionValueTranslationService',
            'sylius.factory.product_review' => 'getSylius_Factory_ProductReviewService',
            'sylius.factory.product_reviewer' => 'getSylius_Factory_ProductReviewerService',
            'sylius.factory.product_taxon' => 'getSylius_Factory_ProductTaxonService',
            'sylius.factory.product_translation' => 'getSylius_Factory_ProductTranslationService',
            'sylius.factory.product_variant' => 'getSylius_Factory_ProductVariantService',
            'sylius.factory.product_variant_translation' => 'getSylius_Factory_ProductVariantTranslationService',
            'sylius.factory.promotion' => 'getSylius_Factory_PromotionService',
            'sylius.factory.promotion_action' => 'getSylius_Factory_PromotionActionService',
            'sylius.factory.promotion_coupon' => 'getSylius_Factory_PromotionCouponService',
            'sylius.factory.promotion_rule' => 'getSylius_Factory_PromotionRuleService',
            'sylius.factory.province' => 'getSylius_Factory_ProvinceService',
            'sylius.factory.shipment' => 'getSylius_Factory_ShipmentService',
            'sylius.factory.shipment_unit' => 'getSylius_Factory_ShipmentUnitService',
            'sylius.factory.shipping_category' => 'getSylius_Factory_ShippingCategoryService',
            'sylius.factory.shipping_method' => 'getSylius_Factory_ShippingMethodService',
            'sylius.factory.shipping_method_translation' => 'getSylius_Factory_ShippingMethodTranslationService',
            'sylius.factory.shop_user' => 'getSylius_Factory_ShopUserService',
            'sylius.factory.tax_category' => 'getSylius_Factory_TaxCategoryService',
            'sylius.factory.tax_rate' => 'getSylius_Factory_TaxRateService',
            'sylius.factory.taxon' => 'getSylius_Factory_TaxonService',
            'sylius.factory.taxon_image' => 'getSylius_Factory_TaxonImageService',
            'sylius.factory.taxon_translation' => 'getSylius_Factory_TaxonTranslationService',
            'sylius.factory.theme' => 'getSylius_Factory_ThemeService',
            'sylius.factory.zone' => 'getSylius_Factory_ZoneService',
            'sylius.factory.zone_member' => 'getSylius_Factory_ZoneMemberService',
            'sylius.fixture.address' => 'getSylius_Fixture_AddressService',
            'sylius.fixture.admin_user' => 'getSylius_Fixture_AdminUserService',
            'sylius.fixture.book_product' => 'getSylius_Fixture_BookProductService',
            'sylius.fixture.channel' => 'getSylius_Fixture_ChannelService',
            'sylius.fixture.currency' => 'getSylius_Fixture_CurrencyService',
            'sylius.fixture.customer_group' => 'getSylius_Fixture_CustomerGroupService',
            'sylius.fixture.example_factory.address' => 'getSylius_Fixture_ExampleFactory_AddressService',
            'sylius.fixture.example_factory.admin_user' => 'getSylius_Fixture_ExampleFactory_AdminUserService',
            'sylius.fixture.example_factory.channel' => 'getSylius_Fixture_ExampleFactory_ChannelService',
            'sylius.fixture.example_factory.customer_group' => 'getSylius_Fixture_ExampleFactory_CustomerGroupService',
            'sylius.fixture.example_factory.payment_method' => 'getSylius_Fixture_ExampleFactory_PaymentMethodService',
            'sylius.fixture.example_factory.product' => 'getSylius_Fixture_ExampleFactory_ProductService',
            'sylius.fixture.example_factory.product_association' => 'getSylius_Fixture_ExampleFactory_ProductAssociationService',
            'sylius.fixture.example_factory.product_association_type' => 'getSylius_Fixture_ExampleFactory_ProductAssociationTypeService',
            'sylius.fixture.example_factory.product_attribute' => 'getSylius_Fixture_ExampleFactory_ProductAttributeService',
            'sylius.fixture.example_factory.product_option' => 'getSylius_Fixture_ExampleFactory_ProductOptionService',
            'sylius.fixture.example_factory.product_review' => 'getSylius_Fixture_ExampleFactory_ProductReviewService',
            'sylius.fixture.example_factory.promotion' => 'getSylius_Fixture_ExampleFactory_PromotionService',
            'sylius.fixture.example_factory.promotion_action' => 'getSylius_Fixture_ExampleFactory_PromotionActionService',
            'sylius.fixture.example_factory.promotion_rule' => 'getSylius_Fixture_ExampleFactory_PromotionRuleService',
            'sylius.fixture.example_factory.shipping_category' => 'getSylius_Fixture_ExampleFactory_ShippingCategoryService',
            'sylius.fixture.example_factory.shipping_method' => 'getSylius_Fixture_ExampleFactory_ShippingMethodService',
            'sylius.fixture.example_factory.shop_user' => 'getSylius_Fixture_ExampleFactory_ShopUserService',
            'sylius.fixture.example_factory.tax_category' => 'getSylius_Fixture_ExampleFactory_TaxCategoryService',
            'sylius.fixture.example_factory.tax_rate' => 'getSylius_Fixture_ExampleFactory_TaxRateService',
            'sylius.fixture.example_factory.taxon' => 'getSylius_Fixture_ExampleFactory_TaxonService',
            'sylius.fixture.geographical' => 'getSylius_Fixture_GeographicalService',
            'sylius.fixture.locale' => 'getSylius_Fixture_LocaleService',
            'sylius.fixture.mug_product' => 'getSylius_Fixture_MugProductService',
            'sylius.fixture.order' => 'getSylius_Fixture_OrderService',
            'sylius.fixture.payment_method' => 'getSylius_Fixture_PaymentMethodService',
            'sylius.fixture.product' => 'getSylius_Fixture_ProductService',
            'sylius.fixture.product_association' => 'getSylius_Fixture_ProductAssociationService',
            'sylius.fixture.product_association_type' => 'getSylius_Fixture_ProductAssociationTypeService',
            'sylius.fixture.product_attribute' => 'getSylius_Fixture_ProductAttributeService',
            'sylius.fixture.product_option' => 'getSylius_Fixture_ProductOptionService',
            'sylius.fixture.product_review' => 'getSylius_Fixture_ProductReviewService',
            'sylius.fixture.promotion' => 'getSylius_Fixture_PromotionService',
            'sylius.fixture.shipping_category' => 'getSylius_Fixture_ShippingCategoryService',
            'sylius.fixture.shipping_method' => 'getSylius_Fixture_ShippingMethodService',
            'sylius.fixture.shop_user' => 'getSylius_Fixture_ShopUserService',
            'sylius.fixture.similar_product_association' => 'getSylius_Fixture_SimilarProductAssociationService',
            'sylius.fixture.sticker_product' => 'getSylius_Fixture_StickerProductService',
            'sylius.fixture.tax_category' => 'getSylius_Fixture_TaxCategoryService',
            'sylius.fixture.tax_rate' => 'getSylius_Fixture_TaxRateService',
            'sylius.fixture.taxon' => 'getSylius_Fixture_TaxonService',
            'sylius.fixture.tshirt_product' => 'getSylius_Fixture_TshirtProductService',
            'sylius.form.data_mapper.order_item_quantity' => 'getSylius_Form_DataMapper_OrderItemQuantityService',
            'sylius.form.event_subscriber.build_promotion_action' => 'getSylius_Form_EventSubscriber_BuildPromotionActionService',
            'sylius.form.event_subscriber.build_promotion_rule' => 'getSylius_Form_EventSubscriber_BuildPromotionRuleService',
            'sylius.form.event_subscriber.product_variant_generator' => 'getSylius_Form_EventSubscriber_ProductVariantGeneratorService',
            'sylius.form.event_subscriber.set_customer' => 'getSylius_Form_EventSubscriber_SetCustomerService',
            'sylius.form.extension.type.cart' => 'getSylius_Form_Extension_Type_CartService',
            'sylius.form.extension.type.cart_item' => 'getSylius_Form_Extension_Type_CartItemService',
            'sylius.form.extension.type.channel' => 'getSylius_Form_Extension_Type_ChannelService',
            'sylius.form.extension.type.collection' => 'getSylius_Form_Extension_Type_CollectionService',
            'sylius.form.extension.type.country' => 'getSylius_Form_Extension_Type_CountryService',
            'sylius.form.extension.type.customer' => 'getSylius_Form_Extension_Type_CustomerService',
            'sylius.form.extension.type.gateway_config.crypted' => 'getSylius_Form_Extension_Type_GatewayConfig_CryptedService',
            'sylius.form.extension.type.locale' => 'getSylius_Form_Extension_Type_LocaleService',
            'sylius.form.extension.type.order' => 'getSylius_Form_Extension_Type_OrderService',
            'sylius.form.extension.type.payment_method' => 'getSylius_Form_Extension_Type_PaymentMethodService',
            'sylius.form.extension.type.product' => 'getSylius_Form_Extension_Type_ProductService',
            'sylius.form.extension.type.product_translation' => 'getSylius_Form_Extension_Type_ProductTranslationService',
            'sylius.form.extension.type.product_variant' => 'getSylius_Form_Extension_Type_ProductVariantService',
            'sylius.form.extension.type.product_variant_generation' => 'getSylius_Form_Extension_Type_ProductVariantGenerationService',
            'sylius.form.extension.type.promotion' => 'getSylius_Form_Extension_Type_PromotionService',
            'sylius.form.extension.type.promotion_coupon' => 'getSylius_Form_Extension_Type_PromotionCouponService',
            'sylius.form.extension.type.promotion_filter_collection' => 'getSylius_Form_Extension_Type_PromotionFilterCollectionService',
            'sylius.form.extension.type.shipping_method' => 'getSylius_Form_Extension_Type_ShippingMethodService',
            'sylius.form.extension.type.tax_rate' => 'getSylius_Form_Extension_Type_TaxRateService',
            'sylius.form.extension.type.taxon' => 'getSylius_Form_Extension_Type_TaxonService',
            'sylius.form.type.add_to_cart' => 'getSylius_Form_Type_AddToCartService',
            'sylius.form.type.address' => 'getSylius_Form_Type_AddressService',
            'sylius.form.type.address_choice' => 'getSylius_Form_Type_AddressChoiceService',
            'sylius.form.type.admin_user' => 'getSylius_Form_Type_AdminUserService',
            'sylius.form.type.attribute_type_choice' => 'getSylius_Form_Type_AttributeTypeChoiceService',
            'sylius.form.type.autocomplete_product_taxon_choice' => 'getSylius_Form_Type_AutocompleteProductTaxonChoiceService',
            'sylius.form.type.cart' => 'getSylius_Form_Type_CartService',
            'sylius.form.type.cart_item' => 'getSylius_Form_Type_CartItemService',
            'sylius.form.type.channel' => 'getSylius_Form_Type_ChannelService',
            'sylius.form.type.channel_based_shipping_calculator.flat_rate' => 'getSylius_Form_Type_ChannelBasedShippingCalculator_FlatRateService',
            'sylius.form.type.channel_based_shipping_calculator.per_unit_rate' => 'getSylius_Form_Type_ChannelBasedShippingCalculator_PerUnitRateService',
            'sylius.form.type.channel_choice' => 'getSylius_Form_Type_ChannelChoiceService',
            'sylius.form.type.channel_pricing' => 'getSylius_Form_Type_ChannelPricingService',
            'sylius.form.type.channels_collection' => 'getSylius_Form_Type_ChannelsCollectionService',
            'sylius.form.type.checkout_address' => 'getSylius_Form_Type_CheckoutAddressService',
            'sylius.form.type.checkout_complete' => 'getSylius_Form_Type_CheckoutCompleteService',
            'sylius.form.type.checkout_payment' => 'getSylius_Form_Type_CheckoutPaymentService',
            'sylius.form.type.checkout_select_payment' => 'getSylius_Form_Type_CheckoutSelectPaymentService',
            'sylius.form.type.checkout_select_shipping' => 'getSylius_Form_Type_CheckoutSelectShippingService',
            'sylius.form.type.checkout_shipment' => 'getSylius_Form_Type_CheckoutShipmentService',
            'sylius.form.type.country' => 'getSylius_Form_Type_CountryService',
            'sylius.form.type.country_choice' => 'getSylius_Form_Type_CountryChoiceService',
            'sylius.form.type.country_code_choice' => 'getSylius_Form_Type_CountryCodeChoiceService',
            'sylius.form.type.currency' => 'getSylius_Form_Type_CurrencyService',
            'sylius.form.type.currency_choice' => 'getSylius_Form_Type_CurrencyChoiceService',
            'sylius.form.type.customer' => 'getSylius_Form_Type_CustomerService',
            'sylius.form.type.customer_choice' => 'getSylius_Form_Type_CustomerChoiceService',
            'sylius.form.type.customer_group' => 'getSylius_Form_Type_CustomerGroupService',
            'sylius.form.type.customer_group_choice' => 'getSylius_Form_Type_CustomerGroupChoiceService',
            'sylius.form.type.customer_group_code_choice' => 'getSylius_Form_Type_CustomerGroupCodeChoiceService',
            'sylius.form.type.customer_guest' => 'getSylius_Form_Type_CustomerGuestService',
            'sylius.form.type.customer_profile' => 'getSylius_Form_Type_CustomerProfileService',
            'sylius.form.type.customer_registration' => 'getSylius_Form_Type_CustomerRegistrationService',
            'sylius.form.type.customer_simple_registration' => 'getSylius_Form_Type_CustomerSimpleRegistrationService',
            'sylius.form.type.data_transformer.product_variants_to_codes' => 'getSylius_Form_Type_DataTransformer_ProductVariantsToCodesService',
            'sylius.form.type.data_transformer.products_to_codes' => 'getSylius_Form_Type_DataTransformer_ProductsToCodesService',
            'sylius.form.type.data_transformer.products_to_product_associations' => 'getSylius_Form_Type_DataTransformer_ProductsToProductAssociationsService',
            'sylius.form.type.data_transformer.taxons_to_codes' => 'getSylius_Form_Type_DataTransformer_TaxonsToCodesService',
            'sylius.form.type.default' => 'getSylius_Form_Type_DefaultService',
            'sylius.form.type.exchange_rate' => 'getSylius_Form_Type_ExchangeRateService',
            'sylius.form.type.gateway_config' => 'getSylius_Form_Type_GatewayConfigService',
            'sylius.form.type.gateway_configuration.paypal' => 'getSylius_Form_Type_GatewayConfiguration_PaypalService',
            'sylius.form.type.gateway_configuration.stripe' => 'getSylius_Form_Type_GatewayConfiguration_StripeService',
            'sylius.form.type.grid_filter.boolean' => 'getSylius_Form_Type_GridFilter_BooleanService',
            'sylius.form.type.grid_filter.date' => 'getSylius_Form_Type_GridFilter_DateService',
            'sylius.form.type.grid_filter.entity' => 'getSylius_Form_Type_GridFilter_EntityService',
            'sylius.form.type.grid_filter.exists' => 'getSylius_Form_Type_GridFilter_ExistsService',
            'sylius.form.type.grid_filter.money' => 'getSylius_Form_Type_GridFilter_MoneyService',
            'sylius.form.type.grid_filter.string' => 'getSylius_Form_Type_GridFilter_StringService',
            'sylius.form.type.locale' => 'getSylius_Form_Type_LocaleService',
            'sylius.form.type.locale_choice' => 'getSylius_Form_Type_LocaleChoiceService',
            'sylius.form.type.money' => 'getSylius_Form_Type_MoneyService',
            'sylius.form.type.order' => 'getSylius_Form_Type_OrderService',
            'sylius.form.type.order_item' => 'getSylius_Form_Type_OrderItemService',
            'sylius.form.type.payment' => 'getSylius_Form_Type_PaymentService',
            'sylius.form.type.payment_gateway_choice' => 'getSylius_Form_Type_PaymentGatewayChoiceService',
            'sylius.form.type.payment_method' => 'getSylius_Form_Type_PaymentMethodService',
            'sylius.form.type.payment_method_choice' => 'getSylius_Form_Type_PaymentMethodChoiceService',
            'sylius.form.type.payment_method_translation' => 'getSylius_Form_Type_PaymentMethodTranslationService',
            'sylius.form.type.product' => 'getSylius_Form_Type_ProductService',
            'sylius.form.type.product_association' => 'getSylius_Form_Type_ProductAssociationService',
            'sylius.form.type.product_association_type' => 'getSylius_Form_Type_ProductAssociationTypeService',
            'sylius.form.type.product_association_type_choice' => 'getSylius_Form_Type_ProductAssociationTypeChoiceService',
            'sylius.form.type.product_association_type_translation' => 'getSylius_Form_Type_ProductAssociationTypeTranslationService',
            'sylius.form.type.product_attribute' => 'getSylius_Form_Type_ProductAttributeService',
            'sylius.form.type.product_attribute_choice' => 'getSylius_Form_Type_ProductAttributeChoiceService',
            'sylius.form.type.product_attribute_translation' => 'getSylius_Form_Type_ProductAttributeTranslationService',
            'sylius.form.type.product_attribute_value' => 'getSylius_Form_Type_ProductAttributeValueService',
            'sylius.form.type.product_choice' => 'getSylius_Form_Type_ProductChoiceService',
            'sylius.form.type.product_code_choice' => 'getSylius_Form_Type_ProductCodeChoiceService',
            'sylius.form.type.product_generate_variants' => 'getSylius_Form_Type_ProductGenerateVariantsService',
            'sylius.form.type.product_image' => 'getSylius_Form_Type_ProductImageService',
            'sylius.form.type.product_option' => 'getSylius_Form_Type_ProductOptionService',
            'sylius.form.type.product_option_choice' => 'getSylius_Form_Type_ProductOptionChoiceService',
            'sylius.form.type.product_option_translation' => 'getSylius_Form_Type_ProductOptionTranslationService',
            'sylius.form.type.product_option_value' => 'getSylius_Form_Type_ProductOptionValueService',
            'sylius.form.type.product_option_value_translation' => 'getSylius_Form_Type_ProductOptionValueTranslationService',
            'sylius.form.type.product_review' => 'getSylius_Form_Type_ProductReviewService',
            'sylius.form.type.product_translation' => 'getSylius_Form_Type_ProductTranslationService',
            'sylius.form.type.product_variant' => 'getSylius_Form_Type_ProductVariantService',
            'sylius.form.type.product_variant_generation' => 'getSylius_Form_Type_ProductVariantGenerationService',
            'sylius.form.type.product_variant_translation' => 'getSylius_Form_Type_ProductVariantTranslationService',
            'sylius.form.type.promotion' => 'getSylius_Form_Type_PromotionService',
            'sylius.form.type.promotion_action' => 'getSylius_Form_Type_PromotionActionService',
            'sylius.form.type.promotion_action.collection' => 'getSylius_Form_Type_PromotionAction_CollectionService',
            'sylius.form.type.promotion_action.filter.product' => 'getSylius_Form_Type_PromotionAction_Filter_ProductService',
            'sylius.form.type.promotion_action.filter.taxon' => 'getSylius_Form_Type_PromotionAction_Filter_TaxonService',
            'sylius.form.type.promotion_action_choice' => 'getSylius_Form_Type_PromotionActionChoiceService',
            'sylius.form.type.promotion_coupon' => 'getSylius_Form_Type_PromotionCouponService',
            'sylius.form.type.promotion_coupon_generator_instruction' => 'getSylius_Form_Type_PromotionCouponGeneratorInstructionService',
            'sylius.form.type.promotion_coupon_to_code' => 'getSylius_Form_Type_PromotionCouponToCodeService',
            'sylius.form.type.promotion_rule' => 'getSylius_Form_Type_PromotionRuleService',
            'sylius.form.type.promotion_rule.collection' => 'getSylius_Form_Type_PromotionRule_CollectionService',
            'sylius.form.type.promotion_rule.contains_product_configuration' => 'getSylius_Form_Type_PromotionRule_ContainsProductConfigurationService',
            'sylius.form.type.promotion_rule.customer_group_configuration' => 'getSylius_Form_Type_PromotionRule_CustomerGroupConfigurationService',
            'sylius.form.type.promotion_rule.has_taxon_configuration' => 'getSylius_Form_Type_PromotionRule_HasTaxonConfigurationService',
            'sylius.form.type.promotion_rule.total_of_items_from_taxon_configuration' => 'getSylius_Form_Type_PromotionRule_TotalOfItemsFromTaxonConfigurationService',
            'sylius.form.type.promotion_rule_choice' => 'getSylius_Form_Type_PromotionRuleChoiceService',
            'sylius.form.type.province' => 'getSylius_Form_Type_ProvinceService',
            'sylius.form.type.province_choice' => 'getSylius_Form_Type_ProvinceChoiceService',
            'sylius.form.type.province_code_choice' => 'getSylius_Form_Type_ProvinceCodeChoiceService',
            'sylius.form.type.resource_autocomplete_choice' => 'getSylius_Form_Type_ResourceAutocompleteChoiceService',
            'sylius.form.type.resource_translations' => 'getSylius_Form_Type_ResourceTranslationsService',
            'sylius.form.type.security_login' => 'getSylius_Form_Type_SecurityLoginService',
            'sylius.form.type.shipment' => 'getSylius_Form_Type_ShipmentService',
            'sylius.form.type.shipment_ship' => 'getSylius_Form_Type_ShipmentShipService',
            'sylius.form.type.shipping_calculator_choice' => 'getSylius_Form_Type_ShippingCalculatorChoiceService',
            'sylius.form.type.shipping_category' => 'getSylius_Form_Type_ShippingCategoryService',
            'sylius.form.type.shipping_category_choice' => 'getSylius_Form_Type_ShippingCategoryChoiceService',
            'sylius.form.type.shipping_method' => 'getSylius_Form_Type_ShippingMethodService',
            'sylius.form.type.shipping_method_choice' => 'getSylius_Form_Type_ShippingMethodChoiceService',
            'sylius.form.type.shipping_method_translation' => 'getSylius_Form_Type_ShippingMethodTranslationService',
            'sylius.form.type.shop_user' => 'getSylius_Form_Type_ShopUserService',
            'sylius.form.type.shop_user_registration' => 'getSylius_Form_Type_ShopUserRegistrationService',
            'sylius.form.type.sylius_product_associations' => 'getSylius_Form_Type_SyliusProductAssociationsService',
            'sylius.form.type.tax_calculation_strategy_choice' => 'getSylius_Form_Type_TaxCalculationStrategyChoiceService',
            'sylius.form.type.tax_calculator_choice' => 'getSylius_Form_Type_TaxCalculatorChoiceService',
            'sylius.form.type.tax_category' => 'getSylius_Form_Type_TaxCategoryService',
            'sylius.form.type.tax_category_choice' => 'getSylius_Form_Type_TaxCategoryChoiceService',
            'sylius.form.type.tax_rate' => 'getSylius_Form_Type_TaxRateService',
            'sylius.form.type.taxon' => 'getSylius_Form_Type_TaxonService',
            'sylius.form.type.taxon_image' => 'getSylius_Form_Type_TaxonImageService',
            'sylius.form.type.taxon_position' => 'getSylius_Form_Type_TaxonPositionService',
            'sylius.form.type.taxon_translation' => 'getSylius_Form_Type_TaxonTranslationService',
            'sylius.form.type.user_change_password' => 'getSylius_Form_Type_UserChangePasswordService',
            'sylius.form.type.user_login' => 'getSylius_Form_Type_UserLoginService',
            'sylius.form.type.user_request_password_reset' => 'getSylius_Form_Type_UserRequestPasswordResetService',
            'sylius.form.type.user_reset_password' => 'getSylius_Form_Type_UserResetPasswordService',
            'sylius.form.type.zone' => 'getSylius_Form_Type_ZoneService',
            'sylius.form.type.zone_choice' => 'getSylius_Form_Type_ZoneChoiceService',
            'sylius.form.type.zone_code_choice' => 'getSylius_Form_Type_ZoneCodeChoiceService',
            'sylius.form.type.zone_member' => 'getSylius_Form_Type_ZoneMemberService',
            'sylius.form_registry.attribute_type' => 'getSylius_FormRegistry_AttributeTypeService',
            'sylius.form_registry.payum_gateway_config' => 'getSylius_FormRegistry_PayumGatewayConfigService',
            'sylius.form_registry.promotion_action' => 'getSylius_FormRegistry_PromotionActionService',
            'sylius.form_registry.promotion_rule_checker' => 'getSylius_FormRegistry_PromotionRuleCheckerService',
            'sylius.form_registry.shipping_calculator' => 'getSylius_FormRegistry_ShippingCalculatorService',
            'sylius.generator.product_variant' => 'getSylius_Generator_ProductVariantService',
            'sylius.generator.slug' => 'getSylius_Generator_SlugService',
            'sylius.generator.taxon_slug' => 'getSylius_Generator_TaxonSlugService',
            'sylius.grid.array_to_definition_converter' => 'getSylius_Grid_ArrayToDefinitionConverterService',
            'sylius.grid.data_extractor.property_access' => 'getSylius_Grid_DataExtractor_PropertyAccessService',
            'sylius.grid.data_provider' => 'getSylius_Grid_DataProviderService',
            'sylius.grid.data_source_provider' => 'getSylius_Grid_DataSourceProviderService',
            'sylius.grid.filters_applicator' => 'getSylius_Grid_FiltersApplicatorService',
            'sylius.grid.filters_criteria_resolver' => 'getSylius_Grid_FiltersCriteriaResolverService',
            'sylius.grid.provider' => 'getSylius_Grid_ProviderService',
            'sylius.grid.resource_view_factory' => 'getSylius_Grid_ResourceViewFactoryService',
            'sylius.grid.sorter' => 'getSylius_Grid_SorterService',
            'sylius.grid.view_factory' => 'getSylius_Grid_ViewFactoryService',
            'sylius.grid_driver.doctrine.dbal' => 'getSylius_GridDriver_Doctrine_DbalService',
            'sylius.grid_driver.doctrine.orm' => 'getSylius_GridDriver_Doctrine_OrmService',
            'sylius.grid_field.datetime' => 'getSylius_GridField_DatetimeService',
            'sylius.grid_field.string' => 'getSylius_GridField_StringService',
            'sylius.grid_field.twig' => 'getSylius_GridField_TwigService',
            'sylius.grid_filter.boolean' => 'getSylius_GridFilter_BooleanService',
            'sylius.grid_filter.date' => 'getSylius_GridFilter_DateService',
            'sylius.grid_filter.entity' => 'getSylius_GridFilter_EntityService',
            'sylius.grid_filter.exists' => 'getSylius_GridFilter_ExistsService',
            'sylius.grid_filter.money' => 'getSylius_GridFilter_MoneyService',
            'sylius.grid_filter.string' => 'getSylius_GridFilter_StringService',
            'sylius.handler.shop_user_logout' => 'getSylius_Handler_ShopUserLogoutService',
            'sylius.image_uploader' => 'getSylius_ImageUploaderService',
            'sylius.installer.checker.command_directory' => 'getSylius_Installer_Checker_CommandDirectoryService',
            'sylius.installer.checker.sylius_requirements' => 'getSylius_Installer_Checker_SyliusRequirementsService',
            'sylius.integer_distributor' => 'getSylius_IntegerDistributorService',
            'sylius.inventory.order_inventory_operator' => 'getSylius_Inventory_OrderInventoryOperatorService',
            'sylius.invoice_number_generator' => 'getSylius_InvoiceNumberGeneratorService',
            'sylius.listener.admin_user.reloader' => 'getSylius_Listener_AdminUser_ReloaderService',
            'sylius.listener.admin_user_delete' => 'getSylius_Listener_AdminUserDeleteService',
            'sylius.listener.admin_user_last_login' => 'getSylius_Listener_AdminUserLastLoginService',
            'sylius.listener.canonicalizer' => 'getSylius_Listener_CanonicalizerService',
            'sylius.listener.cart_blamer' => 'getSylius_Listener_CartBlamerService',
            'sylius.listener.channel' => 'getSylius_Listener_ChannelService',
            'sylius.listener.checkout_redirect' => 'getSylius_Listener_CheckoutRedirectService',
            'sylius.listener.default_username' => 'getSylius_Listener_DefaultUsernameService',
            'sylius.listener.images_upload' => 'getSylius_Listener_ImagesUploadService',
            'sylius.listener.locking' => 'getSylius_Listener_LockingService',
            'sylius.listener.non_channel_request_locale' => 'getSylius_Listener_NonChannelRequestLocaleService',
            'sylius.listener.oauth_user.reloader' => 'getSylius_Listener_OauthUser_ReloaderService',
            'sylius.listener.oauth_user_delete' => 'getSylius_Listener_OauthUserDeleteService',
            'sylius.listener.oauth_user_last_login' => 'getSylius_Listener_OauthUserLastLoginService',
            'sylius.listener.order_complete' => 'getSylius_Listener_OrderCompleteService',
            'sylius.listener.order_customer_ip' => 'getSylius_Listener_OrderCustomerIpService',
            'sylius.listener.order_promotion_integrity_checker' => 'getSylius_Listener_OrderPromotionIntegrityCheckerService',
            'sylius.listener.order_recalculation' => 'getSylius_Listener_OrderRecalculationService',
            'sylius.listener.order_total_integrity_checker' => 'getSylius_Listener_OrderTotalIntegrityCheckerService',
            'sylius.listener.password_updater' => 'getSylius_Listener_PasswordUpdaterService',
            'sylius.listener.product_review_change' => 'getSylius_Listener_ProductReviewChangeService',
            'sylius.listener.request_locale_setter' => 'getSylius_Listener_RequestLocaleSetterService',
            'sylius.listener.review_create' => 'getSylius_Listener_ReviewCreateService',
            'sylius.listener.session_cart' => 'getSylius_Listener_SessionCartService',
            'sylius.listener.shipment_ship' => 'getSylius_Listener_ShipmentShipService',
            'sylius.listener.shop_user.reloader' => 'getSylius_Listener_ShopUser_ReloaderService',
            'sylius.listener.shop_user_delete' => 'getSylius_Listener_ShopUserDeleteService',
            'sylius.listener.shop_user_last_login' => 'getSylius_Listener_ShopUserLastLoginService',
            'sylius.listener.simple_product_locking' => 'getSylius_Listener_SimpleProductLockingService',
            'sylius.listener.user_cart_recalculation' => 'getSylius_Listener_UserCartRecalculationService',
            'sylius.listener.user_mailer_listener' => 'getSylius_Listener_UserMailerListenerService',
            'sylius.listener.user_registration' => 'getSylius_Listener_UserRegistrationService',
            'sylius.locale_converter' => 'getSylius_LocaleConverterService',
            'sylius.locale_provider.channel_based' => 'getSylius_LocaleProvider_ChannelBasedService',
            'sylius.mailer.default_settings_provider' => 'getSylius_Mailer_DefaultSettingsProviderService',
            'sylius.money_formatter' => 'getSylius_MoneyFormatterService',
            'sylius.oauth_user.pin_generator.password_reset' => 'getSylius_OauthUser_PinGenerator_PasswordResetService',
            'sylius.oauth_user.pin_uniqueness_checker.password_reset' => 'getSylius_OauthUser_PinUniquenessChecker_PasswordResetService',
            'sylius.oauth_user.reloader' => 'getSylius_OauthUser_ReloaderService',
            'sylius.oauth_user.token_generator.email_verification' => 'getSylius_OauthUser_TokenGenerator_EmailVerificationService',
            'sylius.oauth_user.token_generator.password_reset' => 'getSylius_OauthUser_TokenGenerator_PasswordResetService',
            'sylius.oauth_user.token_uniqueness_checker.email_verification' => 'getSylius_OauthUser_TokenUniquenessChecker_EmailVerificationService',
            'sylius.oauth_user.token_uniqueness_checker.password_reset' => 'getSylius_OauthUser_TokenUniquenessChecker_PasswordResetService',
            'sylius.oauth_user_provider.email_based' => 'getSylius_OauthUserProvider_EmailBasedService',
            'sylius.oauth_user_provider.email_or_name_based' => 'getSylius_OauthUserProvider_EmailOrNameBasedService',
            'sylius.oauth_user_provider.name_based' => 'getSylius_OauthUserProvider_NameBasedService',
            'sylius.order_item_quantity_modifier.limiting' => 'getSylius_OrderItemQuantityModifier_LimitingService',
            'sylius.order_locale_assigner' => 'getSylius_OrderLocaleAssignerService',
            'sylius.order_modifier' => 'getSylius_OrderModifierService',
            'sylius.order_number_assigner' => 'getSylius_OrderNumberAssignerService',
            'sylius.order_payment_provider' => 'getSylius_OrderPaymentProviderService',
            'sylius.order_processing.order_adjustments_clearer' => 'getSylius_OrderProcessing_OrderAdjustmentsClearerService',
            'sylius.order_processing.order_payment_processor.after_checkout' => 'getSylius_OrderProcessing_OrderPaymentProcessor_AfterCheckoutService',
            'sylius.order_processing.order_payment_processor.checkout' => 'getSylius_OrderProcessing_OrderPaymentProcessor_CheckoutService',
            'sylius.order_processing.order_prices_recalculator' => 'getSylius_OrderProcessing_OrderPricesRecalculatorService',
            'sylius.order_processing.order_processor' => 'getSylius_OrderProcessing_OrderProcessorService',
            'sylius.order_processing.order_promotion_processor' => 'getSylius_OrderProcessing_OrderPromotionProcessorService',
            'sylius.order_processing.order_shipment_processor' => 'getSylius_OrderProcessing_OrderShipmentProcessorService',
            'sylius.order_processing.order_taxes_processor' => 'getSylius_OrderProcessing_OrderTaxesProcessorService',
            'sylius.order_processing.shipping_charges_processor' => 'getSylius_OrderProcessing_ShippingChargesProcessorService',
            'sylius.payment_method_resolver.default' => 'getSylius_PaymentMethodResolver_DefaultService',
            'sylius.payment_methods_resolver' => 'getSylius_PaymentMethodsResolverService',
            'sylius.payment_methods_resolver.channel_based' => 'getSylius_PaymentMethodsResolver_ChannelBasedService',
            'sylius.payum.http_client' => 'getSylius_Payum_HttpClientService',
            'sylius.payum_action.capture_payment' => 'getSylius_PayumAction_CapturePaymentService',
            'sylius.payum_action.execute_same_request_with_payment_details' => 'getSylius_PayumAction_ExecuteSameRequestWithPaymentDetailsService',
            'sylius.payum_action.offline.convert_payment' => 'getSylius_PayumAction_Offline_ConvertPaymentService',
            'sylius.payum_action.offline.resolve_next_route' => 'getSylius_PayumAction_Offline_ResolveNextRouteService',
            'sylius.payum_action.paypal_express_checkout.convert_payment' => 'getSylius_PayumAction_PaypalExpressCheckout_ConvertPaymentService',
            'sylius.payum_action.resolve_next_route' => 'getSylius_PayumAction_ResolveNextRouteService',
            'sylius.payum_extension.update_payment_state' => 'getSylius_PayumExtension_UpdatePaymentStateService',
            'sylius.product_review.average_rating_updater' => 'getSylius_ProductReview_AverageRatingUpdaterService',
            'sylius.product_variant_resolver.default' => 'getSylius_ProductVariantResolver_DefaultService',
            'sylius.promotion.units_promotion_adjustments_applicator' => 'getSylius_Promotion_UnitsPromotionAdjustmentsApplicatorService',
            'sylius.promotion_action.fixed_discount' => 'getSylius_PromotionAction_FixedDiscountService',
            'sylius.promotion_action.percentage_discount' => 'getSylius_PromotionAction_PercentageDiscountService',
            'sylius.promotion_action.shipping_percentage_discount' => 'getSylius_PromotionAction_ShippingPercentageDiscountService',
            'sylius.promotion_action.unit_fixed_discount' => 'getSylius_PromotionAction_UnitFixedDiscountService',
            'sylius.promotion_action.unit_percentage_discount' => 'getSylius_PromotionAction_UnitPercentageDiscountService',
            'sylius.promotion_applicator' => 'getSylius_PromotionApplicatorService',
            'sylius.promotion_coupon_eligibility_checker' => 'getSylius_PromotionCouponEligibilityCheckerService',
            'sylius.promotion_coupon_generator' => 'getSylius_PromotionCouponGeneratorService',
            'sylius.promotion_coupon_generator.percentage_policy' => 'getSylius_PromotionCouponGenerator_PercentagePolicyService',
            'sylius.promotion_eligibility_checker' => 'getSylius_PromotionEligibilityCheckerService',
            'sylius.promotion_filter.price_range' => 'getSylius_PromotionFilter_PriceRangeService',
            'sylius.promotion_filter.product' => 'getSylius_PromotionFilter_ProductService',
            'sylius.promotion_filter.taxon' => 'getSylius_PromotionFilter_TaxonService',
            'sylius.promotion_processor' => 'getSylius_PromotionProcessorService',
            'sylius.promotion_rule_checker.cart_quantity' => 'getSylius_PromotionRuleChecker_CartQuantityService',
            'sylius.promotion_rule_checker.contains_product' => 'getSylius_PromotionRuleChecker_ContainsProductService',
            'sylius.promotion_rule_checker.has_taxon' => 'getSylius_PromotionRuleChecker_HasTaxonService',
            'sylius.promotion_rule_checker.item_total' => 'getSylius_PromotionRuleChecker_ItemTotalService',
            'sylius.promotion_rule_checker.nth_order' => 'getSylius_PromotionRuleChecker_NthOrderService',
            'sylius.promotion_rule_checker.shipping_country' => 'getSylius_PromotionRuleChecker_ShippingCountryService',
            'sylius.promotion_rule_checker.total_of_items_from_taxon' => 'getSylius_PromotionRuleChecker_TotalOfItemsFromTaxonService',
            'sylius.promotion_usage_modifier' => 'getSylius_PromotionUsageModifierService',
            'sylius.proportional_integer_distributor' => 'getSylius_ProportionalIntegerDistributorService',
            'sylius.provider.channel_based_default_zone_provider' => 'getSylius_Provider_ChannelBasedDefaultZoneProviderService',
            'sylius.provider.product_variants_prices' => 'getSylius_Provider_ProductVariantsPricesService',
            'sylius.province_naming_provider' => 'getSylius_ProvinceNamingProviderService',
            'sylius.random_generator' => 'getSylius_RandomGeneratorService',
            'sylius.registry.attribute_type' => 'getSylius_Registry_AttributeTypeService',
            'sylius.registry.grid_driver' => 'getSylius_Registry_GridDriverService',
            'sylius.registry.grid_field' => 'getSylius_Registry_GridFieldService',
            'sylius.registry.grid_filter' => 'getSylius_Registry_GridFilterService',
            'sylius.registry.payment_methods_resolver' => 'getSylius_Registry_PaymentMethodsResolverService',
            'sylius.registry.shipping_calculator' => 'getSylius_Registry_ShippingCalculatorService',
            'sylius.registry.shipping_methods_resolver' => 'getSylius_Registry_ShippingMethodsResolverService',
            'sylius.registry.shipping_rule_checker' => 'getSylius_Registry_ShippingRuleCheckerService',
            'sylius.registry.tax_calculation_strategy' => 'getSylius_Registry_TaxCalculationStrategyService',
            'sylius.registry.tax_calculator' => 'getSylius_Registry_TaxCalculatorService',
            'sylius.registry_promotion_action' => 'getSylius_RegistryPromotionActionService',
            'sylius.registry_promotion_rule_checker' => 'getSylius_RegistryPromotionRuleCheckerService',
            'sylius.repository.address' => 'getSylius_Repository_AddressService',
            'sylius.repository.address_log_entry' => 'getSylius_Repository_AddressLogEntryService',
            'sylius.repository.adjustment' => 'getSylius_Repository_AdjustmentService',
            'sylius.repository.admin_user' => 'getSylius_Repository_AdminUserService',
            'sylius.repository.channel' => 'getSylius_Repository_ChannelService',
            'sylius.repository.channel_pricing' => 'getSylius_Repository_ChannelPricingService',
            'sylius.repository.country' => 'getSylius_Repository_CountryService',
            'sylius.repository.currency' => 'getSylius_Repository_CurrencyService',
            'sylius.repository.customer' => 'getSylius_Repository_CustomerService',
            'sylius.repository.customer_group' => 'getSylius_Repository_CustomerGroupService',
            'sylius.repository.exchange_rate' => 'getSylius_Repository_ExchangeRateService',
            'sylius.repository.gateway_config' => 'getSylius_Repository_GatewayConfigService',
            'sylius.repository.inventory_unit' => 'getSylius_Repository_InventoryUnitService',
            'sylius.repository.locale' => 'getSylius_Repository_LocaleService',
            'sylius.repository.oauth_user' => 'getSylius_Repository_OauthUserService',
            'sylius.repository.order' => 'getSylius_Repository_OrderService',
            'sylius.repository.order_item' => 'getSylius_Repository_OrderItemService',
            'sylius.repository.order_item_unit' => 'getSylius_Repository_OrderItemUnitService',
            'sylius.repository.order_sequence' => 'getSylius_Repository_OrderSequenceService',
            'sylius.repository.payment' => 'getSylius_Repository_PaymentService',
            'sylius.repository.payment_method' => 'getSylius_Repository_PaymentMethodService',
            'sylius.repository.payment_method_translation' => 'getSylius_Repository_PaymentMethodTranslationService',
            'sylius.repository.payment_security_token' => 'getSylius_Repository_PaymentSecurityTokenService',
            'sylius.repository.product' => 'getSylius_Repository_ProductService',
            'sylius.repository.product_association' => 'getSylius_Repository_ProductAssociationService',
            'sylius.repository.product_association_type' => 'getSylius_Repository_ProductAssociationTypeService',
            'sylius.repository.product_association_type_translation' => 'getSylius_Repository_ProductAssociationTypeTranslationService',
            'sylius.repository.product_attribute' => 'getSylius_Repository_ProductAttributeService',
            'sylius.repository.product_attribute_translation' => 'getSylius_Repository_ProductAttributeTranslationService',
            'sylius.repository.product_attribute_value' => 'getSylius_Repository_ProductAttributeValueService',
            'sylius.repository.product_image' => 'getSylius_Repository_ProductImageService',
            'sylius.repository.product_option' => 'getSylius_Repository_ProductOptionService',
            'sylius.repository.product_option_translation' => 'getSylius_Repository_ProductOptionTranslationService',
            'sylius.repository.product_option_value' => 'getSylius_Repository_ProductOptionValueService',
            'sylius.repository.product_option_value_translation' => 'getSylius_Repository_ProductOptionValueTranslationService',
            'sylius.repository.product_review' => 'getSylius_Repository_ProductReviewService',
            'sylius.repository.product_reviewer' => 'getSylius_Repository_ProductReviewerService',
            'sylius.repository.product_taxon' => 'getSylius_Repository_ProductTaxonService',
            'sylius.repository.product_translation' => 'getSylius_Repository_ProductTranslationService',
            'sylius.repository.product_variant' => 'getSylius_Repository_ProductVariantService',
            'sylius.repository.product_variant_translation' => 'getSylius_Repository_ProductVariantTranslationService',
            'sylius.repository.promotion' => 'getSylius_Repository_PromotionService',
            'sylius.repository.promotion_action' => 'getSylius_Repository_PromotionActionService',
            'sylius.repository.promotion_coupon' => 'getSylius_Repository_PromotionCouponService',
            'sylius.repository.promotion_rule' => 'getSylius_Repository_PromotionRuleService',
            'sylius.repository.promotion_subject' => 'getSylius_Repository_PromotionSubjectService',
            'sylius.repository.province' => 'getSylius_Repository_ProvinceService',
            'sylius.repository.shipment' => 'getSylius_Repository_ShipmentService',
            'sylius.repository.shipment_unit' => 'getSylius_Repository_ShipmentUnitService',
            'sylius.repository.shipping_category' => 'getSylius_Repository_ShippingCategoryService',
            'sylius.repository.shipping_method' => 'getSylius_Repository_ShippingMethodService',
            'sylius.repository.shipping_method_translation' => 'getSylius_Repository_ShippingMethodTranslationService',
            'sylius.repository.shop_user' => 'getSylius_Repository_ShopUserService',
            'sylius.repository.tax_category' => 'getSylius_Repository_TaxCategoryService',
            'sylius.repository.tax_rate' => 'getSylius_Repository_TaxRateService',
            'sylius.repository.taxon' => 'getSylius_Repository_TaxonService',
            'sylius.repository.taxon_image' => 'getSylius_Repository_TaxonImageService',
            'sylius.repository.taxon_translation' => 'getSylius_Repository_TaxonTranslationService',
            'sylius.repository.theme' => 'getSylius_Repository_ThemeService',
            'sylius.repository.zone' => 'getSylius_Repository_ZoneService',
            'sylius.repository.zone_member' => 'getSylius_Repository_ZoneMemberService',
            'sylius.requirements' => 'getSylius_RequirementsService',
            'sylius.resolver.checkout' => 'getSylius_Resolver_CheckoutService',
            'sylius.resource_controller.authorization_checker' => 'getSylius_ResourceController_AuthorizationCheckerService',
            'sylius.resource_controller.event_dispatcher' => 'getSylius_ResourceController_EventDispatcherService',
            'sylius.resource_controller.flash_helper' => 'getSylius_ResourceController_FlashHelperService',
            'sylius.resource_controller.form_factory' => 'getSylius_ResourceController_FormFactoryService',
            'sylius.resource_controller.new_resource_factory' => 'getSylius_ResourceController_NewResourceFactoryService',
            'sylius.resource_controller.parameters_parser' => 'getSylius_ResourceController_ParametersParserService',
            'sylius.resource_controller.redirect_handler' => 'getSylius_ResourceController_RedirectHandlerService',
            'sylius.resource_controller.request_configuration_factory' => 'getSylius_ResourceController_RequestConfigurationFactoryService',
            'sylius.resource_controller.resources_collection_provider' => 'getSylius_ResourceController_ResourcesCollectionProviderService',
            'sylius.resource_controller.resources_resolver.grid_aware' => 'getSylius_ResourceController_ResourcesResolver_GridAwareService',
            'sylius.resource_controller.single_resource_provider' => 'getSylius_ResourceController_SingleResourceProviderService',
            'sylius.resource_controller.state_machine' => 'getSylius_ResourceController_StateMachineService',
            'sylius.resource_controller.view_handler' => 'getSylius_ResourceController_ViewHandlerService',
            'sylius.resource_registry' => 'getSylius_ResourceRegistryService',
            'sylius.reviewer_reviews_remover' => 'getSylius_ReviewerReviewsRemoverService',
            'sylius.router.checkout_state' => 'getSylius_Router_CheckoutStateService',
            'sylius.security.password_encoder' => 'getSylius_Security_PasswordEncoderService',
            'sylius.security.password_updater' => 'getSylius_Security_PasswordUpdaterService',
            'sylius.security.user_login' => 'getSylius_Security_UserLoginService',
            'sylius.sequential_order_number_generator' => 'getSylius_SequentialOrderNumberGeneratorService',
            'sylius.setup.channel' => 'getSylius_Setup_ChannelService',
            'sylius.setup.currency' => 'getSylius_Setup_CurrencyService',
            'sylius.setup.locale' => 'getSylius_Setup_LocaleService',
            'sylius.shipping_calculator' => 'getSylius_ShippingCalculatorService',
            'sylius.shipping_calculator.flat_rate' => 'getSylius_ShippingCalculator_FlatRateService',
            'sylius.shipping_calculator.per_unit_rate' => 'getSylius_ShippingCalculator_PerUnitRateService',
            'sylius.shipping_eligibility_checker' => 'getSylius_ShippingEligibilityCheckerService',
            'sylius.shipping_method_resolver.default' => 'getSylius_ShippingMethodResolver_DefaultService',
            'sylius.shipping_methods_resolver' => 'getSylius_ShippingMethodsResolverService',
            'sylius.shipping_methods_resolver.default' => 'getSylius_ShippingMethodsResolver_DefaultService',
            'sylius.shipping_methods_resolver.zones_and_channel_based' => 'getSylius_ShippingMethodsResolver_ZonesAndChannelBasedService',
            'sylius.shop.menu_builder.account' => 'getSylius_Shop_MenuBuilder_AccountService',
            'sylius.shop_user.pin_generator.password_reset' => 'getSylius_ShopUser_PinGenerator_PasswordResetService',
            'sylius.shop_user.pin_uniqueness_checker.password_reset' => 'getSylius_ShopUser_PinUniquenessChecker_PasswordResetService',
            'sylius.shop_user.reloader' => 'getSylius_ShopUser_ReloaderService',
            'sylius.shop_user.token_generator.email_verification' => 'getSylius_ShopUser_TokenGenerator_EmailVerificationService',
            'sylius.shop_user.token_generator.password_reset' => 'getSylius_ShopUser_TokenGenerator_PasswordResetService',
            'sylius.shop_user.token_uniqueness_checker.email_verification' => 'getSylius_ShopUser_TokenUniquenessChecker_EmailVerificationService',
            'sylius.shop_user.token_uniqueness_checker.password_reset' => 'getSylius_ShopUser_TokenUniquenessChecker_PasswordResetService',
            'sylius.shop_user_provider.email_based' => 'getSylius_ShopUserProvider_EmailBasedService',
            'sylius.shop_user_provider.email_or_name_based' => 'getSylius_ShopUserProvider_EmailOrNameBasedService',
            'sylius.shop_user_provider.name_based' => 'getSylius_ShopUserProvider_NameBasedService',
            'sylius.state_resolver.order' => 'getSylius_StateResolver_OrderService',
            'sylius.state_resolver.order_checkout' => 'getSylius_StateResolver_OrderCheckoutService',
            'sylius.state_resolver.order_payment' => 'getSylius_StateResolver_OrderPaymentService',
            'sylius.state_resolver.order_shipping' => 'getSylius_StateResolver_OrderShippingService',
            'sylius.storage.cookie' => 'getSylius_Storage_CookieService',
            'sylius.storage.currency' => 'getSylius_Storage_CurrencyService',
            'sylius.storage.session' => 'getSylius_Storage_SessionService',
            'sylius.tax_calculator' => 'getSylius_TaxCalculatorService',
            'sylius.tax_calculator.default' => 'getSylius_TaxCalculator_DefaultService',
            'sylius.tax_rate_resolver' => 'getSylius_TaxRateResolverService',
            'sylius.taxation.order_item_units_based_strategy' => 'getSylius_Taxation_OrderItemUnitsBasedStrategyService',
            'sylius.taxation.order_item_units_taxes_applicator' => 'getSylius_Taxation_OrderItemUnitsTaxesApplicatorService',
            'sylius.taxation.order_items_based_strategy' => 'getSylius_Taxation_OrderItemsBasedStrategyService',
            'sylius.taxation.order_items_taxes_applicator' => 'getSylius_Taxation_OrderItemsTaxesApplicatorService',
            'sylius.taxation.order_shipment_taxes_applicator' => 'getSylius_Taxation_OrderShipmentTaxesApplicatorService',
            'sylius.templating.helper.adjustment' => 'getSylius_Templating_Helper_AdjustmentService',
            'sylius.templating.helper.checkout_steps' => 'getSylius_Templating_Helper_CheckoutStepsService',
            'sylius.templating.helper.convert_money' => 'getSylius_Templating_Helper_ConvertMoneyService',
            'sylius.templating.helper.currency' => 'getSylius_Templating_Helper_CurrencyService',
            'sylius.templating.helper.format_money' => 'getSylius_Templating_Helper_FormatMoneyService',
            'sylius.templating.helper.grid' => 'getSylius_Templating_Helper_GridService',
            'sylius.templating.helper.inventory' => 'getSylius_Templating_Helper_InventoryService',
            'sylius.templating.helper.locale' => 'getSylius_Templating_Helper_LocaleService',
            'sylius.templating.helper.price' => 'getSylius_Templating_Helper_PriceService',
            'sylius.templating.helper.product_variants_prices' => 'getSylius_Templating_Helper_ProductVariantsPricesService',
            'sylius.templating.helper.variant_resolver' => 'getSylius_Templating_Helper_VariantResolverService',
            'sylius.test.factory.promotion' => 'getSylius_Test_Factory_PromotionService',
            'sylius.theme.asset.assets_installer.output_aware' => 'getSylius_Theme_Asset_AssetsInstaller_OutputAwareService',
            'sylius.theme.asset.path_resolver' => 'getSylius_Theme_Asset_PathResolverService',
            'sylius.theme.configuration.provider' => 'getSylius_Theme_Configuration_ProviderService',
            'sylius.theme.form.type.theme_choice' => 'getSylius_Theme_Form_Type_ThemeChoiceService',
            'sylius.theme.form.type.theme_name_choice' => 'getSylius_Theme_Form_Type_ThemeNameChoiceService',
            'sylius.theme.hierarchy_provider' => 'getSylius_Theme_HierarchyProviderService',
            'sylius.theme.locator.application_resource' => 'getSylius_Theme_Locator_ApplicationResourceService',
            'sylius.theme.locator.bundle_resource' => 'getSylius_Theme_Locator_BundleResourceService',
            'sylius.theme.templating.cache' => 'getSylius_Theme_Templating_CacheService',
            'sylius.theme.templating.file_locator' => 'getSylius_Theme_Templating_FileLocatorService',
            'sylius.theme.templating.file_locator.inner' => 'getSylius_Theme_Templating_FileLocator_InnerService',
            'sylius.theme.templating.locator.cached' => 'getSylius_Theme_Templating_Locator_CachedService',
            'sylius.translatable_entity_locale_assigner' => 'getSylius_TranslatableEntityLocaleAssignerService',
            'sylius.translation.translatable_listener.doctrine.orm' => 'getSylius_Translation_TranslatableListener_Doctrine_OrmService',
            'sylius.translation_locale_provider.admin' => 'getSylius_TranslationLocaleProvider_AdminService',
            'sylius.translation_locale_provider.immutable' => 'getSylius_TranslationLocaleProvider_ImmutableService',
            'sylius.translator.listener' => 'getSylius_Translator_ListenerService',
            'sylius.twig.extension.country_name' => 'getSylius_Twig_Extension_CountryNameService',
            'sylius.twig.extension.province_naming' => 'getSylius_Twig_Extension_ProvinceNamingService',
            'sylius.twig.extension.widget.admin_notification' => 'getSylius_Twig_Extension_Widget_AdminNotificationService',
            'sylius.unique_id_based_order_token_assigner' => 'getSylius_UniqueIdBasedOrderTokenAssignerService',
            'sylius.unpaid_orders_state_updater' => 'getSylius_UnpaidOrdersStateUpdaterService',
            'sylius.updater.order.exchange_rate' => 'getSylius_Updater_Order_ExchangeRateService',
            'sylius.validator.cart_item_availability' => 'getSylius_Validator_CartItemAvailabilityService',
            'sylius.validator.customer_initializer' => 'getSylius_Validator_CustomerInitializerService',
            'sylius.validator.date_range' => 'getSylius_Validator_DateRangeService',
            'sylius.validator.different_source_target_currency' => 'getSylius_Validator_DifferentSourceTargetCurrencyService',
            'sylius.validator.has_all_prices_defined' => 'getSylius_Validator_HasAllPricesDefinedService',
            'sylius.validator.has_all_variant_prices_defined' => 'getSylius_Validator_HasAllVariantPricesDefinedService',
            'sylius.validator.has_enabled_entity' => 'getSylius_Validator_HasEnabledEntityService',
            'sylius.validator.in_stock' => 'getSylius_Validator_InStockService',
            'sylius.validator.locales_aware_valid_attribute_value' => 'getSylius_Validator_LocalesAwareValidAttributeValueService',
            'sylius.validator.payment_method_integrity' => 'getSylius_Validator_PaymentMethodIntegrityService',
            'sylius.validator.product_code_uniqueness' => 'getSylius_Validator_ProductCodeUniquenessService',
            'sylius.validator.product_integrity' => 'getSylius_Validator_ProductIntegrityService',
            'sylius.validator.product_variant_combination' => 'getSylius_Validator_ProductVariantCombinationService',
            'sylius.validator.promotion_coupon_generation_amount' => 'getSylius_Validator_PromotionCouponGenerationAmountService',
            'sylius.validator.promotion_subject_coupon' => 'getSylius_Validator_PromotionSubjectCouponService',
            'sylius.validator.shipping_method_integrity' => 'getSylius_Validator_ShippingMethodIntegrityService',
            'sylius.validator.unique.registered_user' => 'getSylius_Validator_Unique_RegisteredUserService',
            'sylius.validator.unique_currency_pair' => 'getSylius_Validator_UniqueCurrencyPairService',
            'sylius.validator.unique_reviewer_email' => 'getSylius_Validator_UniqueReviewerEmailService',
            'sylius.validator.valid_attribute_value' => 'getSylius_Validator_ValidAttributeValueService',
            'sylius.validator.valid_province_address' => 'getSylius_Validator_ValidProvinceAddressService',
            'sylius.zone_matcher' => 'getSylius_ZoneMatcherService',
            'sylius_fixtures.fixture_loader' => 'getSyliusFixtures_FixtureLoaderService',
            'sylius_fixtures.fixture_registry' => 'getSyliusFixtures_FixtureRegistryService',
            'sylius_fixtures.logger' => 'getSyliusFixtures_LoggerService',
            'sylius_fixtures.logger.formatter.console' => 'getSyliusFixtures_Logger_Formatter_ConsoleService',
            'sylius_fixtures.logger.handler.console' => 'getSyliusFixtures_Logger_Handler_ConsoleService',
            'sylius_fixtures.suite_loader' => 'getSyliusFixtures_SuiteLoaderService',
            'sylius_fixtures.suite_registry' => 'getSyliusFixtures_SuiteRegistryService',
            'sylus.payum_action.offline.status' => 'getSylus_PayumAction_Offline_StatusService',
            'templating' => 'getTemplatingService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'test.client' => 'getTest_ClientService',
            'test.client.cookiejar' => 'getTest_Client_CookiejarService',
            'test.client.history' => 'getTest_Client_HistoryService',
            'test.session.listener' => 'getTest_Session_ListenerService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator' => 'getTranslatorService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator_listener' => 'getTranslatorListenerService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.form.renderer' => 'getTwig_Form_RendererService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.profile' => 'getTwig_ProfileService',
            'twig.runtime.httpkernel' => 'getTwig_Runtime_HttpkernelService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'uri_signer' => 'getUriSignerService',
            'validate_request_listener' => 'getValidateRequestListenerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'validator.validator_factory' => 'getValidator_ValidatorFactoryService',
            'var_dumper.cli_dumper' => 'getVarDumper_CliDumperService',
            'var_dumper.cloner' => 'getVarDumper_ClonerService',
            'web_profiler.controller.exception' => 'getWebProfiler_Controller_ExceptionService',
            'web_profiler.controller.profiler' => 'getWebProfiler_Controller_ProfilerService',
            'web_profiler.controller.router' => 'getWebProfiler_Controller_RouterService',
            'white_october_pagerfanta.view_factory' => 'getWhiteOctoberPagerfanta_ViewFactoryService',
        );
        $this->privates = array(
            'annotations.reader' => true,
            'cache.annotations' => true,
            'controller_name_converter' => true,
            'debug.file_link_formatter' => true,
            'debug.security.access.decision_manager' => true,
            'fos_rest.exception.codes_map' => true,
            'fos_rest.request.param_fetcher.reader' => true,
            'fos_rest.serializer.jms_handler_registry' => true,
            'hateoas.configuration.relations_repository' => true,
            'hateoas.embeds_factory' => true,
            'hateoas.link_factory' => true,
            'hateoas.links_factory' => true,
            'jms_serializer.metadata.file_locator' => true,
            'jms_serializer.metadata_factory' => true,
            'jms_serializer.unserialize_object_constructor' => true,
            'router.request_context' => true,
            'security.access_listener' => true,
            'security.access_map' => true,
            'security.authentication.manager' => true,
            'security.authentication.session_strategy' => true,
            'security.authentication.trust_resolver' => true,
            'security.channel_listener' => true,
            'security.firewall.map' => true,
            'security.http_utils' => true,
            'security.logout_url_generator' => true,
            'security.user_checker' => true,
            'session.storage.metadata_bag' => true,
            'sonata.block.manager' => true,
            'stof_doctrine_extensions.listener.loggable' => true,
            'sylius.context.channel.fake_channel.code_provider' => true,
            'sylius.custom_resource_controller.resource_update_handler' => true,
            'sylius.expression_language' => true,
            'sylius.resource_controller.event_dispatcher' => true,
            'sylius.resource_controller.flash_helper' => true,
            'sylius.resource_controller.form_factory' => true,
            'sylius.resource_controller.new_resource_factory' => true,
            'sylius.resource_controller.parameters_parser' => true,
            'sylius.resource_controller.redirect_handler' => true,
            'sylius.resource_controller.request_configuration_factory' => true,
            'sylius.resource_controller.resources_collection_provider' => true,
            'sylius.resource_controller.single_resource_provider' => true,
            'sylius.resource_controller.state_machine' => true,
            'sylius.resource_controller.view_handler' => true,
            'sylius.resource_registry' => true,
            'sylius.theme.asset.path_resolver' => true,
            'sylius.theme.hierarchy_provider' => true,
            'sylius.theme.templating.file_locator' => true,
            'sylius.theme.templating.file_locator.inner' => true,
            'sylius.theme.templating.locator.cached' => true,
            'validator.validator_factory' => true,
        );
        $this->aliases = array(
            'cache.app_clearer' => 'cache.default_clearer',
            'console.command.sensiolabs_security_command_securitycheckercommand' => 'sensio_distribution.security_checker.command',
            'console.command.sylius_bundle_resourcebundle_command_debugresourcecommand' => 'sylius.console.command.resource_debug',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.default_metadata_cache' => 'doctrine_cache.providers.doctrine.orm.default_metadata_cache',
            'doctrine.orm.default_query_cache' => 'doctrine_cache.providers.doctrine.orm.default_query_cache',
            'doctrine.orm.default_result_cache' => 'doctrine_cache.providers.doctrine.orm.default_result_cache',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'event_dispatcher' => 'debug.event_dispatcher',
            'fos_rest.router' => 'router',
            'fos_rest.templating' => 'templating',
            'jms\\serializer\\arraytransformerinterface' => 'jms_serializer',
            'jms\\serializer\\serializerinterface' => 'jms_serializer',
            'mailer' => 'swiftmailer.mailer.default',
            'serializer' => 'jms_serializer',
            'session.storage' => 'session.storage.native',
            'sonata.block.cache.handler' => 'sonata.block.cache.handler.default',
            'sonata.block.context_manager' => 'sonata.block.context_manager.default',
            'sonata.block.renderer' => 'sonata.block.renderer.default',
            'sonata.intl.locale_detector' => 'sonata.intl.locale_detector.request_stack',
            'sonata.intl.timezone_detector' => 'sonata.intl.timezone_detector.chain',
            'swiftmailer.mailer' => 'swiftmailer.mailer.default',
            'swiftmailer.plugin.messagelogger' => 'swiftmailer.mailer.default.plugin.messagelogger',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
            'sylius.availability_checker' => 'sylius.availability_checker.default',
            'sylius.context.cart.session_based' => 'sylius.context.cart.session_and_channel_based',
            'sylius.context.currency' => 'sylius.context.currency.channel_aware',
            'sylius.email_renderer.adapter' => 'sylius.email_renderer.adapter.twig',
            'sylius.email_sender.adapter' => 'sylius.email_sender.adapter.swiftmailer',
            'sylius.factory.order_item' => 'sylius.factory.cart_item',
            'sylius.grid.data_extractor' => 'sylius.grid.data_extractor.property_access',
            'sylius.grid.renderer' => 'sylius.custom_grid_renderer.twig',
            'sylius.grid.renderer.twig' => 'sylius.custom_grid_renderer.twig',
            'sylius.locale_provider' => 'sylius.locale_provider.channel_based',
            'sylius.manager.address' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.address_log_entry' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.adjustment' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.admin_user' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.channel' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.channel_pricing' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.country' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.currency' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.customer' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.customer_group' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.exchange_rate' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.gateway_config' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.inventory_unit' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.locale' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.oauth_user' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.order' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.order_item' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.order_item_unit' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.order_sequence' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.payment' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.payment_method' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.payment_method_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.payment_security_token' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_association' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_association_type' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_association_type_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_attribute' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_attribute_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_attribute_value' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_image' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_option' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_option_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_option_value' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_option_value_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_review' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_reviewer' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_taxon' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_variant' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.product_variant_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.promotion' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.promotion_action' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.promotion_coupon' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.promotion_rule' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.promotion_subject' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.province' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.shipment' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.shipment_unit' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.shipping_category' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.shipping_method' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.shipping_method_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.shop_user' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.tax_category' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.tax_rate' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.taxon' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.taxon_image' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.taxon_translation' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.zone' => 'doctrine.orm.default_entity_manager',
            'sylius.manager.zone_member' => 'doctrine.orm.default_entity_manager',
            'sylius.order_item_quantity_modifier' => 'sylius.order_item_quantity_modifier.limiting',
            'sylius.theme.asset.assets_installer' => 'sylius.theme.asset.assets_installer.output_aware',
            'sylius.translation_locale_provider' => 'sylius.translation_locale_provider.admin',
        );
    }

    /**
     * {@inheritdoc}
     */
    public function compile()
    {
        throw new LogicException('You cannot compile a dumped frozen container.');
    }

    /**
     * {@inheritdoc}
     */
    public function isFrozen()
    {
        return true;
    }

    /**
     * Gets the 'annotation_reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Annotations\CachedReader A Doctrine\Common\Annotations\CachedReader instance
     */
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\CachedReader(${($_ = isset($this->services['annotations.reader']) ? $this->services['annotations.reader'] : $this->getAnnotations_ReaderService()) && false ?: '_'}, new \Symfony\Component\Cache\DoctrineProvider(\Symfony\Component\Cache\Adapter\PhpArrayAdapter::create((__DIR__.'/annotations.php'), ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'})), true);
    }

    /**
     * Gets the 'assets.context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Asset\Context\RequestStackContext A Symfony\Component\Asset\Context\RequestStackContext instance
     */
    protected function getAssets_ContextService()
    {
        return $this->services['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext($this->get('request_stack'));
    }

    /**
     * Gets the 'assets.packages' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Asset\Packages A Symfony\Component\Asset\Packages instance
     */
    protected function getAssets_PackagesService()
    {
        return $this->services['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Sylius\Bundle\ThemeBundle\Asset\Package\PathPackage('', new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy(), $this->get('sylius.context.theme'), ${($_ = isset($this->services['sylius.theme.asset.path_resolver']) ? $this->services['sylius.theme.asset.path_resolver'] : $this->getSylius_Theme_Asset_PathResolverService()) && false ?: '_'}, $this->get('assets.context')), array());
    }

    /**
     * Gets the 'bazinga_hateoas.expression_language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage A Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage instance
     */
    protected function getBazingaHateoas_ExpressionLanguageService()
    {
        return $this->services['bazinga_hateoas.expression_language'] = new \Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage();
    }

    /**
     * Gets the 'cache.app' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Cache\Adapter\FilesystemAdapter A Symfony\Component\Cache\Adapter\FilesystemAdapter instance
     */
    protected function getCache_AppService()
    {
        $this->services['cache.app'] = $instance = new \Symfony\Component\Cache\Adapter\FilesystemAdapter('zVitlVBdVf', 0, (__DIR__.'/pools'));

        if ($this->has('monolog.logger.cache')) {
            $instance->setLogger($this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }

        return $instance;
    }

    /**
     * Gets the 'cache.default_clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer A Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer instance
     */
    protected function getCache_DefaultClearerService()
    {
        $this->services['cache.default_clearer'] = $instance = new \Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer();

        $instance->addPool($this->get('cache.app'));
        $instance->addPool($this->get('cache.system'));
        $instance->addPool(${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'});

        return $instance;
    }

    /**
     * Gets the 'cache.system' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface A Symfony\Component\Cache\Adapter\AdapterInterface instance
     */
    protected function getCache_SystemService()
    {
        return $this->services['cache.system'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('VfKlgwnJpC', 0, 'TXCJ048gZiLf+IC2XrghCo', (__DIR__.'/pools'), $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'cache_clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer A Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer instance
     */
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array(0 => $this->get('cache.default_clearer'), 1 => new \Sylius\Bundle\ThemeBundle\Templating\Cache\Clearer\TemplatePathsCacheClearer($this->get('sylius.theme.templating.cache'))));
    }

    /**
     * Gets the 'cache_warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate A Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate instance
     */
    protected function getCacheWarmerService()
    {
        $a = $this->get('kernel');
        $b = $this->get('templating.filename_parser');

        $c = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder($a, $b, ($this->targetDirs[3].'/app/Resources'));

        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer($c, ${($_ = isset($this->services['sylius.theme.templating.file_locator.inner']) ? $this->services['sylius.theme.templating.file_locator.inner'] : $this->getSylius_Theme_Templating_FileLocator_InnerService()) && false ?: '_'}), 1 => new \Sylius\Bundle\ThemeBundle\Templating\Cache\Warmer\TemplatePathsCacheWarmer($c, ${($_ = isset($this->services['sylius.theme.templating.locator.cached']) ? $this->services['sylius.theme.templating.locator.cached'] : $this->getSylius_Theme_Templating_Locator_CachedService()) && false ?: '_'}, $this->get('sylius.repository.theme'), $this->get('sylius.theme.templating.cache')), 2 => new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer($this->get('doctrine')), 3 => $this->get('kernel.class_cache.cache_warmer'), 4 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer($this->get('translator.default')), 5 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer($this->get('validator.builder'), (__DIR__.'/validation.php'), \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('R+zIvvDJca', 0, 'TXCJ048gZiLf+IC2XrghCo', (__DIR__.'/pools'), $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE))), 6 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer($this->get('router')), 7 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer(${($_ = isset($this->services['annotations.reader']) ? $this->services['annotations.reader'] : $this->getAnnotations_ReaderService()) && false ?: '_'}, (__DIR__.'/annotations.php'), ${($_ = isset($this->services['cache.annotations']) ? $this->services['cache.annotations'] : $this->getCache_AnnotationsService()) && false ?: '_'}), 8 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer($this, $c, array()), 9 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer($this->get('twig'), new \Symfony\Bundle\TwigBundle\TemplateIterator($a, ($this->targetDirs[3].'/app'), array()))));
    }

    /**
     * Gets the 'catalog-promotion.channel-pricing-promotion-applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Kooli\CatalogPromotion\Promotion\Applicator\ChannelPricingPromotionApplicator A Kooli\CatalogPromotion\Promotion\Applicator\ChannelPricingPromotionApplicator instance
     */
    protected function getCatalogpromotion_ChannelpricingpromotionapplicatorService()
    {
        return $this->services['catalog-promotion.channel-pricing-promotion-applicator'] = new \Kooli\CatalogPromotion\Promotion\Applicator\ChannelPricingPromotionApplicator();
    }

    /**
     * Gets the 'catalog-promotion.eligibility-filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Kooli\CatalogPromotion\Promotion\PromotionEligibilityFilter A Kooli\CatalogPromotion\Promotion\PromotionEligibilityFilter instance
     */
    protected function getCatalogpromotion_EligibilityfilterService()
    {
        return $this->services['catalog-promotion.eligibility-filter'] = new \Kooli\CatalogPromotion\Promotion\PromotionEligibilityFilter($this->get('catalog-promotion.has-taxon-rule-checker'));
    }

    /**
     * Gets the 'catalog-promotion.has-taxon-rule-checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Kooli\CatalogPromotion\Promotion\Checker\Rule\HasTaxonRuleChecker A Kooli\CatalogPromotion\Promotion\Checker\Rule\HasTaxonRuleChecker instance
     */
    protected function getCatalogpromotion_HastaxonrulecheckerService()
    {
        return $this->services['catalog-promotion.has-taxon-rule-checker'] = new \Kooli\CatalogPromotion\Promotion\Checker\Rule\HasTaxonRuleChecker();
    }

    /**
     * Gets the 'catalog-promotion.processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Kooli\CatalogPromotion\Promotion\Processor A Kooli\CatalogPromotion\Promotion\Processor instance
     */
    protected function getCatalogpromotion_ProcessorService()
    {
        return $this->services['catalog-promotion.processor'] = new \Kooli\CatalogPromotion\Promotion\Processor($this->get('sylius.repository.promotion'), $this->get('sylius.repository.product_variant'), $this->get('catalog-promotion.eligibility-filter'), $this->get('catalog-promotion.channel-pricing-promotion-applicator'));
    }

    /**
     * Gets the 'config_cache_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Config\ResourceCheckerConfigCacheFactory A Symfony\Component\Config\ResourceCheckerConfigCacheFactory instance
     */
    protected function getConfigCacheFactoryService()
    {
        return $this->services['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory(array(0 => new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker()));
    }

    /**
     * Gets the 'data_collector.dump' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector A Symfony\Component\HttpKernel\DataCollector\DumpDataCollector instance
     */
    protected function getDataCollector_DumpService()
    {
        return $this->services['data_collector.dump'] = new \Symfony\Component\HttpKernel\DataCollector\DumpDataCollector($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE), ${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'}, 'UTF-8', NULL, NULL);
    }

    /**
     * Gets the 'debug.argument_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver A Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver instance
     */
    protected function getDebug_ArgumentResolverService()
    {
        return $this->services['debug.argument_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory(), array(0 => new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver(), 1 => new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver(), 2 => new \Symfony\Bundle\SecurityBundle\SecurityUserValueResolver($this->get('security.token_storage')), 3 => new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver(), 4 => new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver())), $this->get('debug.stopwatch'));
    }

    /**
     * Gets the 'debug.controller_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver A Symfony\Component\HttpKernel\Controller\TraceableControllerResolver instance
     */
    protected function getDebug_ControllerResolverService()
    {
        return $this->services['debug.controller_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver(new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, ${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->getControllerNameConverterService()) && false ?: '_'}, $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)), $this->get('debug.stopwatch'), $this->get('debug.argument_resolver'));
    }

    /**
     * Gets the 'debug.debug_handlers_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener A Symfony\Component\HttpKernel\EventListener\DebugHandlersListener instance
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->services['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, $this->get('monolog.logger.php', ContainerInterface::NULL_ON_INVALID_REFERENCE), -1, -1, true, ${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'}, true);
    }

    /**
     * Gets the 'debug.dump_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DumpListener A Symfony\Component\HttpKernel\EventListener\DumpListener instance
     */
    protected function getDebug_DumpListenerService()
    {
        return $this->services['debug.dump_listener'] = new \Symfony\Component\HttpKernel\EventListener\DumpListener($this->get('var_dumper.cloner'), $this->get('var_dumper.cli_dumper'));
    }

    /**
     * Gets the 'debug.event_dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher A Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher instance
     */
    protected function getDebug_EventDispatcherService()
    {
        $this->services['debug.event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this), $this->get('debug.stopwatch'), $this->get('monolog.logger.event', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->addListenerService('kernel.request', array(0 => 'sylius.listener.request_locale_setter', 1 => 'onKernelRequest'), 4);
        $instance->addListenerService('kernel.response', array(0 => 'sylius.context.channel.fake_channel.persister', 1 => 'onKernelResponse'), -8192);
        $instance->addListenerService('sylius.user.pre_password_reset', array(0 => 'sylius.listener.password_updater', 1 => 'genericEventUpdater'), 0);
        $instance->addListenerService('sylius.user.pre_password_change', array(0 => 'sylius.listener.password_updater', 1 => 'genericEventUpdater'), 0);
        $instance->addListenerService('sylius.customer.pre_update', array(0 => 'sylius.listener.password_updater', 1 => 'customerUpdateEvent'), 0);
        $instance->addListenerService('sylius.user.password_reset.request.pin', array(0 => 'sylius.listener.user_mailer_listener', 1 => 'sendResetPasswordPinEmail'), 0);
        $instance->addListenerService('sylius.user.password_reset.request.token', array(0 => 'sylius.listener.user_mailer_listener', 1 => 'sendResetPasswordTokenEmail'), 0);
        $instance->addListenerService('sylius.user.email_verification.token', array(0 => 'sylius.listener.user_mailer_listener', 1 => 'sendVerificationTokenEmail'), 0);
        $instance->addListenerService('sylius.customer.post_register', array(0 => 'sylius.listener.user_mailer_listener', 1 => 'sendUserRegistrationEmail'), 0);
        $instance->addListenerService('sylius.admin_user.post_create', array(0 => 'sylius.listener.admin_user.reloader', 1 => 'reloadUser'), 0);
        $instance->addListenerService('sylius.admin_user.post_update', array(0 => 'sylius.listener.admin_user.reloader', 1 => 'reloadUser'), 0);
        $instance->addListenerService('sylius.admin_user.pre_delete', array(0 => 'sylius.listener.admin_user_delete', 1 => 'deleteUser'), 0);
        $instance->addListenerService('sylius.shop_user.post_create', array(0 => 'sylius.listener.shop_user.reloader', 1 => 'reloadUser'), 0);
        $instance->addListenerService('sylius.shop_user.post_update', array(0 => 'sylius.listener.shop_user.reloader', 1 => 'reloadUser'), 0);
        $instance->addListenerService('sylius.shop_user.pre_delete', array(0 => 'sylius.listener.shop_user_delete', 1 => 'deleteUser'), 0);
        $instance->addListenerService('sylius.oauth_user.post_create', array(0 => 'sylius.listener.oauth_user.reloader', 1 => 'reloadUser'), 0);
        $instance->addListenerService('sylius.oauth_user.post_update', array(0 => 'sylius.listener.oauth_user.reloader', 1 => 'reloadUser'), 0);
        $instance->addListenerService('sylius.oauth_user.pre_delete', array(0 => 'sylius.listener.oauth_user_delete', 1 => 'deleteUser'), 0);
        $instance->addListenerService('sylius.product_review.post_update', array(0 => 'sylius.listener.product_review_change', 1 => 'recalculateSubjectRating'), 0);
        $instance->addListenerService('sylius.product_review.post_delete', array(0 => 'sylius.listener.product_review_change', 1 => 'recalculateSubjectRating'), 0);
        $instance->addListenerService('sylius.user.security.implicit_login', array(0 => 'sylius.listener.cart_blamer', 1 => 'onImplicitLogin'), 0);
        $instance->addListenerService('security.interactive_login', array(0 => 'sylius.listener.cart_blamer', 1 => 'onInteractiveLogin'), 0);
        $instance->addListenerService('sylius.channel.pre_delete', array(0 => 'sylius.listener.channel', 1 => 'onChannelPreDelete'), 0);
        $instance->addListenerService('sylius.product.pre_create', array(0 => 'sylius.listener.images_upload', 1 => 'uploadImages'), 0);
        $instance->addListenerService('sylius.product.pre_update', array(0 => 'sylius.listener.images_upload', 1 => 'uploadImages'), 0);
        $instance->addListenerService('sylius.taxon.pre_create', array(0 => 'sylius.listener.images_upload', 1 => 'uploadImages'), 0);
        $instance->addListenerService('sylius.taxon.pre_update', array(0 => 'sylius.listener.images_upload', 1 => 'uploadImages'), 0);
        $instance->addListenerService('sylius.cart_change', array(0 => 'sylius.listener.order_recalculation', 1 => 'recalculateOrder'), 0);
        $instance->addListenerService('sylius.user.security.implicit_login', array(0 => 'sylius.listener.user_cart_recalculation', 1 => 'recalculateCartWhileLogin'), 0);
        $instance->addListenerService('security.interactive_login', array(0 => 'sylius.listener.user_cart_recalculation', 1 => 'recalculateCartWhileLogin'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'sylius.translator.listener', 1 => 'onKernelRequest'), 2);
        $instance->addListenerService('sylius.product_review.pre_create', array(0 => 'sylius.listener.review_create', 1 => 'ensureReviewHasAuthor'), 0);
        $instance->addListenerService('sylius.product_variant.initialize_update', array(0 => 'sylius.listener.locking', 1 => 'lock'), 0);
        $instance->addListenerService('sylius.product.initialize_update', array(0 => 'sylius.listener.simple_product_locking', 1 => 'lock'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'sonata.block.cache.handler.default', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'fos_rest.body_listener', 1 => 'onKernelRequest'), 10);
        $instance->addListenerService('kernel.request', array(0 => 'knp_menu.listener.voters', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.exception', array(0 => 'payum.listener.reply_to_http_response', 1 => 'onKernelException'), 128);
        $instance->addListenerService('sylius.shipment.post_ship', array(0 => 'sylius.listener.shipment_ship', 1 => 'sendConfirmationEmail'), 0);
        $instance->addListenerService('sylius.order.pre_complete', array(0 => 'sylius.listener.order_customer_ip', 1 => 'assignCustomerIpToOrder'), 0);
        $instance->addListenerService('sylius.order.post_complete', array(0 => 'sylius.listener.order_complete', 1 => 'sendConfirmationEmail'), 0);
        $instance->addListenerService('sylius.customer.post_register', array(0 => 'sylius.listener.user_registration', 1 => 'handleUserVerification'), 0);
        $instance->addListenerService('sylius.order.pre_complete', array(0 => 'sylius.listener.order_promotion_integrity_checker', 1 => 'check'), 0);
        $instance->addListenerService('sylius.order.pre_complete', array(0 => 'sylius.listener.order_total_integrity_checker', 1 => 'check'), 0);
        $instance->addListenerService('sylius.order.pre_complete', array(0 => 'sylius.order_locale_assigner', 1 => 'assignLocale'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'sylius.listener.non_channel_request_locale', 1 => 'restrictRequestLocale'), 10);
        $instance->addListenerService('sylius.order.post_address', array(0 => 'sylius.listener.checkout_redirect', 1 => 'handleCheckoutRedirect'), 0);
        $instance->addListenerService('sylius.order.post_select_shipping', array(0 => 'sylius.listener.checkout_redirect', 1 => 'handleCheckoutRedirect'), 0);
        $instance->addListenerService('sylius.order.post_payment', array(0 => 'sylius.listener.checkout_redirect', 1 => 'handleCheckoutRedirect'), 0);
        $instance->addSubscriberService('sylius.listener.admin_user_last_login', 'Sylius\\Bundle\\UserBundle\\EventListener\\UserLastLoginSubscriber');
        $instance->addSubscriberService('sylius.listener.shop_user_last_login', 'Sylius\\Bundle\\UserBundle\\EventListener\\UserLastLoginSubscriber');
        $instance->addSubscriberService('sylius.listener.oauth_user_last_login', 'Sylius\\Bundle\\UserBundle\\EventListener\\UserLastLoginSubscriber');
        $instance->addSubscriberService('sylius.listener.session_cart', 'Sylius\\Bundle\\CoreBundle\\EventListener\\SessionCartSubscriber');
        $instance->addSubscriberService('sylius.storage.cookie', 'Sylius\\Bundle\\ResourceBundle\\Storage\\CookieStorage');
        $instance->addSubscriberService('response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener');
        $instance->addSubscriberService('streamed_response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener');
        $instance->addSubscriberService('locale_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener');
        $instance->addSubscriberService('validate_request_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ValidateRequestListener');
        $instance->addSubscriberService('translator_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\TranslatorListener');
        $instance->addSubscriberService('test.session.listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\TestSessionListener');
        $instance->addSubscriberService('session_listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener');
        $instance->addSubscriberService('session.save_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\SaveSessionListener');
        $instance->addSubscriberService('debug.debug_handlers_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener');
        $instance->addSubscriberService('router_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener');
        $instance->addSubscriberService('security.firewall', 'Symfony\\Component\\Security\\Http\\Firewall');
        $instance->addSubscriberService('security.rememberme.response_listener', 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener');
        $instance->addSubscriberService('swiftmailer.email_sender.listener', 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener');
        $instance->addSubscriberService('twig.exception_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('fos_rest.exception_listener', 'FOS\\RestBundle\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('stof_doctrine_extensions.event_listener.logger', 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener');
        $instance->addSubscriberService('pagerfanta.convert_not_valid_max_per_page_to_not_found_listener', 'WhiteOctober\\PagerfantaBundle\\EventListener\\ConvertNotValidMaxPerPageToNotFoundListener');
        $instance->addSubscriberService('pagerfanta.convert_not_valid_current_page_to_not_found_listener', 'WhiteOctober\\PagerfantaBundle\\EventListener\\ConvertNotValidCurrentPageToNotFoundListener');
        $instance->addSubscriberService('sylius_fixtures.logger.handler.console', 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler');
        $instance->addSubscriberService('debug.dump_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DumpListener');
        $instance->addSubscriberService('sylius.event_subscriber.resource_delete', 'Sylius\\Bundle\\AdminBundle\\EventListener\\ResourceDeleteSubscriber');
        $instance->addSubscriberService('sylius.resolver.checkout', 'Sylius\\Bundle\\CoreBundle\\Checkout\\CheckoutResolver');

        return $instance;
    }

    /**
     * Gets the 'debug.stopwatch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Stopwatch\Stopwatch A Symfony\Component\Stopwatch\Stopwatch instance
     */
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch();
    }

    /**
     * Gets the 'doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Registry A Doctrine\Bundle\DoctrineBundle\Registry instance
     */
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('default' => 'doctrine.dbal.default_connection'), array('default' => 'doctrine.orm.default_entity_manager'), 'default', 'default');
    }

    /**
     * Gets the 'doctrine.dbal.connection_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ConnectionFactory A Doctrine\Bundle\DoctrineBundle\ConnectionFactory instance
     */
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array());
    }

    /**
     * Gets the 'doctrine.dbal.default_connection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\DBAL\Connection A Doctrine\DBAL\Connection instance
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = $this->get('annotation_reader');

        $b = new \Doctrine\DBAL\Logging\LoggerChain();
        $b->addLogger(new \Symfony\Bridge\Doctrine\Logger\DbalLogger($this->get('monolog.logger.doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $b->addLogger(new \Doctrine\DBAL\Logging\DebugStack());

        $c = new \Doctrine\DBAL\Configuration();
        $c->setSQLLogger($b);

        $d = new \Gedmo\Sortable\SortableListener();
        $d->setAnnotationReader($a);

        $e = new \Gedmo\Sluggable\SluggableListener();
        $e->setAnnotationReader($a);

        $f = new \Gedmo\Tree\TreeListener();
        $f->setAnnotationReader($a);

        $g = new \Gedmo\Timestampable\TimestampableListener();
        $g->setAnnotationReader($a);

        $h = new \Doctrine\ORM\Tools\ResolveTargetEntityListener();
        $h->addResolveTargetEntity('Sylius\\Component\\Order\\Model\\OrderInterface', 'Sylius\\Component\\Core\\Model\\Order', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Order\\Model\\OrderItemInterface', 'Sylius\\Component\\Core\\Model\\OrderItem', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Order\\Model\\OrderItemUnitInterface', 'Sylius\\Component\\Core\\Model\\OrderItemUnit', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Order\\Model\\OrderSequenceInterface', 'Sylius\\Component\\Core\\Model\\OrderSequence', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Order\\Model\\AdjustmentInterface', 'Sylius\\Component\\Order\\Model\\Adjustment', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Currency\\Model\\CurrencyInterface', 'Sylius\\Component\\Currency\\Model\\Currency', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Currency\\Model\\ExchangeRateInterface', 'Sylius\\Component\\Currency\\Model\\ExchangeRate', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Locale\\Model\\LocaleInterface', 'Sylius\\Component\\Locale\\Model\\Locale', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductInterface', 'Sylius\\Component\\Core\\Model\\Product', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductTranslationInterface', 'Sylius\\Component\\Core\\Model\\ProductTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductVariantInterface', 'Sylius\\Component\\Core\\Model\\ProductVariant', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductVariantTranslationInterface', 'Sylius\\Component\\Product\\Model\\ProductVariantTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductOptionInterface', 'Sylius\\Component\\Product\\Model\\ProductOption', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface', 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductAssociationTypeInterface', 'Sylius\\Component\\Product\\Model\\ProductAssociationType', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface', 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductOptionValueInterface', 'Sylius\\Component\\Product\\Model\\ProductOptionValue', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface', 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductAssociationInterface', 'Sylius\\Component\\Product\\Model\\ProductAssociation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Channel\\Model\\ChannelInterface', 'Sylius\\Component\\Core\\Model\\Channel', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductAttributeInterface', 'Sylius\\Component\\Product\\Model\\ProductAttribute', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface', 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Product\\Model\\ProductAttributeValueInterface', 'Sylius\\Component\\Product\\Model\\ProductAttributeValue', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Taxation\\Model\\TaxRateInterface', 'Sylius\\Component\\Core\\Model\\TaxRate', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Taxation\\Model\\TaxCategoryInterface', 'Sylius\\Component\\Taxation\\Model\\TaxCategory', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Shipping\\Model\\ShipmentInterface', 'Sylius\\Component\\Core\\Model\\Shipment', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Shipping\\Model\\ShipmentUnitInterface', 'Sylius\\Component\\Core\\Model\\OrderItemUnit', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Shipping\\Model\\ShippingMethodInterface', 'Sylius\\Component\\Core\\Model\\ShippingMethod', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface', 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Shipping\\Model\\ShippingCategoryInterface', 'Sylius\\Component\\Shipping\\Model\\ShippingCategory', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Payment\\Model\\PaymentInterface', 'Sylius\\Component\\Core\\Model\\Payment', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Payment\\Model\\PaymentMethodInterface', 'Sylius\\Component\\Core\\Model\\PaymentMethod', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface', 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Promotion\\Model\\PromotionInterface', 'Sylius\\Component\\Core\\Model\\Promotion', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Promotion\\Model\\PromotionCouponInterface', 'Sylius\\Component\\Core\\Model\\PromotionCoupon', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Promotion\\Model\\PromotionRuleInterface', 'Sylius\\Component\\Promotion\\Model\\PromotionRule', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Promotion\\Model\\PromotionActionInterface', 'Sylius\\Component\\Promotion\\Model\\PromotionAction', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Addressing\\Model\\AddressInterface', 'Sylius\\Component\\Core\\Model\\Address', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Addressing\\Model\\CountryInterface', 'Sylius\\Component\\Addressing\\Model\\Country', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Addressing\\Model\\ProvinceInterface', 'Sylius\\Component\\Addressing\\Model\\Province', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Addressing\\Model\\ZoneInterface', 'Sylius\\Component\\Addressing\\Model\\Zone', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Addressing\\Model\\ZoneMemberInterface', 'Sylius\\Component\\Addressing\\Model\\ZoneMember', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface', 'Sylius\\Component\\Core\\Model\\OrderItemUnit', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Taxonomy\\Model\\TaxonInterface', 'Sylius\\Component\\Core\\Model\\Taxon', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface', 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation', array());
        $h->addResolveTargetEntity('Sylius\\Component\\User\\Model\\UserInterface', 'Sylius\\Component\\Core\\Model\\ShopUser', array());
        $h->addResolveTargetEntity('Sylius\\Component\\User\\Model\\UserOAuthInterface', 'Sylius\\Component\\User\\Model\\UserOAuth', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Customer\\Model\\CustomerInterface', 'Sylius\\Component\\Core\\Model\\Customer', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Customer\\Model\\CustomerGroupInterface', 'Sylius\\Component\\Customer\\Model\\CustomerGroup', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Review\\Model\\ReviewInterface', 'Sylius\\Component\\Core\\Model\\ProductReview', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Review\\Model\\ReviewerInterface', 'Sylius\\Component\\Core\\Model\\Customer', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Core\\Model\\ProductTaxonInterface', 'Sylius\\Component\\Core\\Model\\ProductTaxon', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Core\\Model\\ProductImageInterface', 'Sylius\\Component\\Core\\Model\\ProductImage', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Core\\Model\\TaxonImageInterface', 'Sylius\\Component\\Core\\Model\\TaxonImage', array());
        $h->addResolveTargetEntity('Sylius\\Component\\Core\\Model\\ChannelPricingInterface', 'Sylius\\Component\\Core\\Model\\ChannelPricing', array());

        $i = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
        $i->addEventSubscriber($this->get('sylius.event_subscriber.orm_repository_class'));
        $i->addEventSubscriber($this->get('sylius.event_subscriber.orm_mapped_super_class'));
        $i->addEventSubscriber($this->get('sylius.translation.translatable_listener.doctrine.orm'));
        $i->addEventSubscriber($d);
        $i->addEventSubscriber(${($_ = isset($this->services['stof_doctrine_extensions.listener.loggable']) ? $this->services['stof_doctrine_extensions.listener.loggable'] : $this->getStofDoctrineExtensions_Listener_LoggableService()) && false ?: '_'});
        $i->addEventSubscriber($e);
        $i->addEventSubscriber($f);
        $i->addEventSubscriber($g);
        $i->addEventSubscriber($this->get('sylius.doctrine.orm.event_subscriber.load_metadata.review'));
        $i->addEventSubscriber($this->get('sylius.doctrine.orm.event_subscriber.load_metadata.attribute'));
        $i->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.default_listeners.attach_entity_listeners'));
        $i->addEventListener(array(0 => 'loadClassMetadata'), $h);
        $i->addEventListener(array(0 => 'onFlush'), $this->get('sylius.listener.default_username'));
        $i->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('sylius.listener.canonicalizer'));
        $i->addEventListener(array(0 => 'prePersist', 1 => 'preUpdate'), $this->get('sylius.listener.password_updater'));

        return $this->services['doctrine.dbal.default_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_sqlite', 'path' => (__DIR__.'/db.sql'), 'charset' => 'UTF8', 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driverOptions' => array(), 'defaultTableOptions' => array()), $c, $i, array());
    }

    /**
     * Gets the 'doctrine.orm.default_entity_listener_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver A Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver instance
     */
    protected function getDoctrine_Orm_DefaultEntityListenerResolverService()
    {
        return $this->services['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver($this);
    }

    /**
     * Gets the 'doctrine.orm.default_entity_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Doctrine\ORM\EntityManager A Doctrine\ORM\EntityManager instance
     */
    public function getDoctrine_Orm_DefaultEntityManagerService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['doctrine.orm.default_entity_manager'] = new DoctrineORMEntityManager_000000004255232f000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getDoctrine_Orm_DefaultEntityManagerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        $a = new \Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver(array(($this->targetDirs[5].'/vendor/payum/payum/src/Payum/Core/Bridge/Doctrine/Resources/mapping') => 'Payum\\Core\\Model'));
        $a->setGlobalBasename('mapping');

        $b = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();
        $b->addDriver($a, 'Payum\\Core\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Order\\Model'), '.orm.xml')), 'Sylius\\Component\\Order\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Currency\\Model'), '.orm.xml')), 'Sylius\\Component\\Currency\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Locale\\Model'), '.orm.xml')), 'Sylius\\Component\\Locale\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Product\\Model'), '.orm.xml')), 'Sylius\\Component\\Product\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Channel\\Model'), '.orm.xml')), 'Sylius\\Component\\Channel\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Attribute\\Model'), '.orm.xml')), 'Sylius\\Component\\Attribute\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Taxation\\Model'), '.orm.xml')), 'Sylius\\Component\\Taxation\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Shipping\\Model'), '.orm.xml')), 'Sylius\\Component\\Shipping\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Payment\\Model'), '.orm.xml')), 'Sylius\\Component\\Payment\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Promotion\\Model'), '.orm.xml')), 'Sylius\\Component\\Promotion\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Addressing\\Model'), '.orm.xml')), 'Sylius\\Component\\Addressing\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/InventoryBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Inventory\\Model'), '.orm.xml')), 'Sylius\\Component\\Inventory\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Taxonomy\\Model'), '.orm.xml')), 'Sylius\\Component\\Taxonomy\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\User\\Model'), '.orm.xml')), 'Sylius\\Component\\User\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Customer\\Model'), '.orm.xml')), 'Sylius\\Component\\Customer\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Review\\Model'), '.orm.xml')), 'Sylius\\Component\\Review\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/doctrine/model') => 'Sylius\\Component\\Core\\Model'), '.orm.xml')), 'Sylius\\Component\\Core\\Model');
        $b->addDriver(new \Doctrine\ORM\Mapping\Driver\XmlDriver(new \Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator(array(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/config/doctrine/model') => 'Sylius\\Bundle\\PayumBundle\\Model'), '.orm.xml')), 'Sylius\\Bundle\\PayumBundle\\Model');

        $c = new \Doctrine\ORM\Configuration();
        $c->setEntityNamespaces(array('payum' => 'Payum\\Core\\Model'));
        $c->setMetadataCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_metadata_cache'));
        $c->setQueryCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_query_cache'));
        $c->setResultCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_result_cache'));
        $c->setMetadataDriverImpl($b);
        $c->setProxyDir((__DIR__.'/doctrine/orm/Proxies'));
        $c->setProxyNamespace('Proxies');
        $c->setAutoGenerateProxyClasses(true);
        $c->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $c->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
        $c->setNamingStrategy(new \Doctrine\ORM\Mapping\DefaultNamingStrategy());
        $c->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $c->setEntityListenerResolver($this->get('doctrine.orm.default_entity_listener_resolver'));

        $instance = \Doctrine\ORM\EntityManager::create($this->get('doctrine.dbal.default_connection'), $c);

        $this->get('doctrine.orm.default_manager_configurator')->configure($instance);

        return $instance;
    }

    /**
     * Gets the 'doctrine.orm.default_entity_manager.property_info_extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor A Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor instance
     */
    protected function getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService()
    {
        return $this->services['doctrine.orm.default_entity_manager.property_info_extractor'] = new \Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor($this->get('doctrine.orm.default_entity_manager')->getMetadataFactory());
    }

    /**
     * Gets the 'doctrine.orm.default_listeners.attach_entity_listeners' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\ORM\Tools\AttachEntityListenersListener A Doctrine\ORM\Tools\AttachEntityListenersListener instance
     */
    protected function getDoctrine_Orm_DefaultListeners_AttachEntityListenersService()
    {
        return $this->services['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener();
    }

    /**
     * Gets the 'doctrine.orm.default_manager_configurator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator A Doctrine\Bundle\DoctrineBundle\ManagerConfigurator instance
     */
    protected function getDoctrine_Orm_DefaultManagerConfiguratorService()
    {
        return $this->services['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array());
    }

    /**
     * Gets the 'doctrine.orm.validator.unique' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator A Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator instance
     */
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        return $this->services['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator($this->get('doctrine'));
    }

    /**
     * Gets the 'doctrine.orm.validator_initializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer A Symfony\Bridge\Doctrine\Validator\DoctrineInitializer instance
     */
    protected function getDoctrine_Orm_ValidatorInitializerService()
    {
        return $this->services['doctrine.orm.validator_initializer'] = new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer($this->get('doctrine'));
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_metadata_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultMetadataCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_metadata_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_851cc4f7c985c6aaf02780efc99a3024f3689256ba925b078ae9937579361e83');

        return $instance;
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_query_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_query_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_851cc4f7c985c6aaf02780efc99a3024f3689256ba925b078ae9937579361e83');

        return $instance;
    }

    /**
     * Gets the 'doctrine_cache.providers.doctrine.orm.default_result_cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService()
    {
        $this->services['doctrine_cache.providers.doctrine.orm.default_result_cache'] = $instance = new \Doctrine\Common\Cache\ArrayCache();

        $instance->setNamespace('sf2orm_default_851cc4f7c985c6aaf02780efc99a3024f3689256ba925b078ae9937579361e83');

        return $instance;
    }

    /**
     * Gets the 'doctrine_cache.providers.sylius_rbac' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\FilesystemCache A Doctrine\Common\Cache\FilesystemCache instance
     */
    protected function getDoctrineCache_Providers_SyliusRbacService()
    {
        return $this->services['doctrine_cache.providers.sylius_rbac'] = new \Doctrine\Common\Cache\FilesystemCache((__DIR__.'/doctrine/cache/file_system'), NULL, 2);
    }

    /**
     * Gets the 'file_locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Config\FileLocator A Symfony\Component\HttpKernel\Config\FileLocator instance
     */
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator($this->get('kernel'), ($this->targetDirs[3].'/app/Resources'));
    }

    /**
     * Gets the 'filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem A Symfony\Component\Filesystem\Filesystem instance
     */
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the 'form.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension A Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension instance
     */
    protected function getForm_ExtensionService()
    {
        return $this->services['form.extension'] = new \Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension($this, array('Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderType' => 'sylius.form.type.order', 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderItemType' => 'sylius.form.type.order_item', 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\CartType' => 'sylius.form.type.cart', 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\CartItemType' => 'sylius.form.type.cart_item', 'Sylius\\Bundle\\MoneyBundle\\Form\\Type\\MoneyType' => 'sylius.form.type.money', 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyType' => 'sylius.form.type.currency', 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyChoiceType' => 'sylius.form.type.currency_choice', 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\ExchangeRateType' => 'sylius.form.type.exchange_rate', 'Sylius\\Bundle\\LocaleBundle\\Form\\Type\\LocaleType' => 'sylius.form.type.locale', 'Sylius\\Bundle\\LocaleBundle\\Form\\Type\\LocaleChoiceType' => 'sylius.form.type.locale_choice', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationType' => 'sylius.form.type.product_association', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeType' => 'sylius.form.type.product_association_type', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeTranslationType' => 'sylius.form.type.product_association_type_translation', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeChoiceType' => 'sylius.form.type.product_association_type_choice', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationsType' => 'sylius.form.type.sylius_product_associations', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeType' => 'sylius.form.type.product_attribute', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType' => 'sylius.form.type.product_attribute_translation', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeChoiceType' => 'sylius.form.type.product_attribute_choice', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeValueType' => 'sylius.form.type.product_attribute_value', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductType' => 'sylius.form.type.product', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType' => 'sylius.form.type.product_translation', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductChoiceType' => 'sylius.form.type.product_choice', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductCodeChoiceType' => 'sylius.form.type.product_code_choice', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductGenerateVariantsType' => 'sylius.form.type.product_generate_variants', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionType' => 'sylius.form.type.product_option', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionTranslationType' => 'sylius.form.type.product_option_translation', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionChoiceType' => 'sylius.form.type.product_option_choice', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueType' => 'sylius.form.type.product_option_value', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueTranslationType' => 'sylius.form.type.product_option_value_translation', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantType' => 'sylius.form.type.product_variant', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantTranslationType' => 'sylius.form.type.product_variant_translation', 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantGenerationType' => 'sylius.form.type.product_variant_generation', 'Sylius\\Bundle\\ChannelBundle\\Form\\Type\\ChannelType' => 'sylius.form.type.channel', 'Sylius\\Bundle\\ChannelBundle\\Form\\Type\\ChannelChoiceType' => 'sylius.form.type.channel_choice', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeTypeChoiceType' => 'sylius.form.type.attribute_type_choice', 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxCategoryType' => 'sylius.form.type.tax_category', 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxCategoryChoiceType' => 'sylius.form.type.tax_category_choice', 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType' => 'sylius.form.type.tax_rate', 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxCalculatorChoiceType' => 'sylius.form.type.tax_calculator_choice', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodType' => 'sylius.form.type.shipping_method', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodTranslationType' => 'sylius.form.type.shipping_method_translation', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodChoiceType' => 'sylius.form.type.shipping_method_choice', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingCategoryType' => 'sylius.form.type.shipping_category', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingCategoryChoiceType' => 'sylius.form.type.shipping_category_choice', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShipmentType' => 'sylius.form.type.shipment', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShipmentShipType' => 'sylius.form.type.shipment_ship', 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\CalculatorChoiceType' => 'sylius.form.type.shipping_calculator_choice', 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentType' => 'sylius.form.type.payment', 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodType' => 'sylius.form.type.payment_method', 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodTranslationType' => 'sylius.form.type.payment_method_translation', 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodChoiceType' => 'sylius.form.type.payment_method_choice', 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentGatewayChoiceType' => 'sylius.form.type.payment_gateway_choice', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionType' => 'sylius.form.type.promotion', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionActionType' => 'sylius.form.type.promotion_action', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionRuleType' => 'sylius.form.type.promotion_rule', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionCouponType' => 'sylius.form.type.promotion_coupon', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionActionCollectionType' => 'sylius.form.type.promotion_action.collection', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionRuleCollectionType' => 'sylius.form.type.promotion_rule.collection', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionActionChoiceType' => 'sylius.form.type.promotion_action_choice', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionRuleChoiceType' => 'sylius.form.type.promotion_rule_choice', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionCouponToCodeType' => 'sylius.form.type.promotion_coupon_to_code', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionCouponGeneratorInstructionType' => 'sylius.form.type.promotion_coupon_generator_instruction', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\AddressType' => 'sylius.form.type.address', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\CountryType' => 'sylius.form.type.country', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\CountryChoiceType' => 'sylius.form.type.country_choice', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\CountryCodeChoiceType' => 'sylius.form.type.country_code_choice', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ProvinceType' => 'sylius.form.type.province', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ProvinceChoiceType' => 'sylius.form.type.province_choice', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ProvinceCodeChoiceType' => 'sylius.form.type.province_code_choice', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneType' => 'sylius.form.type.zone', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneChoiceType' => 'sylius.form.type.zone_choice', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneCodeChoiceType' => 'sylius.form.type.zone_code_choice', 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneMemberType' => 'sylius.form.type.zone_member', 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonType' => 'sylius.form.type.taxon', 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonTranslationType' => 'sylius.form.type.taxon_translation', 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonPositionType' => 'sylius.form.type.taxon_position', 'Sylius\\Bundle\\UserBundle\\Form\\Type\\UserLoginType' => 'sylius.form.type.user_login', 'Sylius\\Bundle\\UserBundle\\Form\\Type\\UserRequestPasswordResetType' => 'sylius.form.type.user_request_password_reset', 'Sylius\\Bundle\\UserBundle\\Form\\Type\\UserResetPasswordType' => 'sylius.form.type.user_reset_password', 'Sylius\\Bundle\\UserBundle\\Form\\Type\\UserChangePasswordType' => 'sylius.form.type.user_change_password', 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerType' => 'sylius.form.type.customer', 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerProfileType' => 'sylius.form.type.customer_profile', 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerChoiceType' => 'sylius.form.type.customer_choice', 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerGroupType' => 'sylius.form.type.customer_group', 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerGroupChoiceType' => 'sylius.form.type.customer_group_choice', 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerGroupCodeChoiceType' => 'sylius.form.type.customer_group_code_choice', 'Sylius\\Bundle\\UiBundle\\Form\\Type\\SecurityLoginType' => 'sylius.form.type.security_login', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\AddressType' => 'sylius.form.type.checkout_address', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\SelectShippingType' => 'sylius.form.type.checkout_select_shipping', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\ShipmentType' => 'sylius.form.type.checkout_shipment', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\SelectPaymentType' => 'sylius.form.type.checkout_select_payment', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\PaymentType' => 'sylius.form.type.checkout_payment', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Checkout\\CompleteType' => 'sylius.form.type.checkout_complete', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ProductReviewType' => 'sylius.form.type.product_review', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\AdminUserType' => 'sylius.form.type.admin_user', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\ShopUserType' => 'sylius.form.type.shop_user', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\ShopUserRegistrationType' => 'sylius.form.type.shop_user_registration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ProductImageType' => 'sylius.form.type.product_image', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Taxon\\TaxonImageType' => 'sylius.form.type.taxon_image', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\TaxCalculationStrategyChoiceType' => 'sylius.form.type.tax_calculation_strategy_choice', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\CustomerGroupConfigurationType' => 'sylius.form.type.promotion_rule.customer_group_configuration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\HasTaxonConfigurationType' => 'sylius.form.type.promotion_rule.has_taxon_configuration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\TotalOfItemsFromTaxonConfigurationType' => 'sylius.form.type.promotion_rule.total_of_items_from_taxon_configuration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\ContainsProductConfigurationType' => 'sylius.form.type.promotion_rule.contains_product_configuration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Filter\\TaxonFilterConfigurationType' => 'sylius.form.type.promotion_action.filter.taxon', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Filter\\ProductFilterConfigurationType' => 'sylius.form.type.promotion_action.filter.product', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Customer\\CustomerGuestType' => 'sylius.form.type.customer_guest', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Customer\\CustomerSimpleRegistrationType' => 'sylius.form.type.customer_simple_registration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Customer\\CustomerRegistrationType' => 'sylius.form.type.customer_registration', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\AddressChoiceType' => 'sylius.form.type.address_choice', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Order\\AddToCartType' => 'sylius.form.type.add_to_cart', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ChannelPricingType' => 'sylius.form.type.channel_pricing', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\ChannelCollectionType' => 'sylius.form.type.channels_collection', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Shipping\\Calculator\\ChannelBasedFlatRateConfigurationType' => 'sylius.form.type.channel_based_shipping_calculator.flat_rate', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Shipping\\Calculator\\ChannelBasedPerUnitRateConfigurationType' => 'sylius.form.type.channel_based_shipping_calculator.per_unit_rate', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Taxon\\ProductTaxonAutocompleteChoiceType' => 'sylius.form.type.autocomplete_product_taxon_choice', 'Sylius\\Bundle\\ResourceBundle\\Form\\Type\\ResourceAutocompleteChoiceType' => 'sylius.form.type.resource_autocomplete_choice', 'Sylius\\Bundle\\ResourceBundle\\Form\\Type\\DefaultResourceType' => 'sylius.form.type.default', 'Sylius\\Bundle\\ResourceBundle\\Form\\Type\\ResourceTranslationsType' => 'sylius.form.type.resource_translations', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\StringFilterType' => 'sylius.form.type.grid_filter.string', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\BooleanFilterType' => 'sylius.form.type.grid_filter.boolean', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\DateFilterType' => 'sylius.form.type.grid_filter.date', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\EntityFilterType' => 'sylius.form.type.grid_filter.entity', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\MoneyFilterType' => 'sylius.form.type.grid_filter.money', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\ExistsFilterType' => 'sylius.form.type.grid_filter.exists', 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => 'form.type.entity', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => 'form.type.form', 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => 'form.type.choice', 'Sonata\\CoreBundle\\Form\\Type\\ImmutableArrayType' => 'sonata.core.form.type.array', 'Sonata\\CoreBundle\\Form\\Type\\BooleanType' => 'sonata.core.form.type.boolean', 'Sonata\\CoreBundle\\Form\\Type\\CollectionType' => 'sonata.core.form.type.collection', 'Sonata\\CoreBundle\\Form\\Type\\TranslatableChoiceType' => 'sonata.core.form.type.translatable_choice', 'Sonata\\CoreBundle\\Form\\Type\\DateRangeType' => 'sonata.core.form.type.date_range', 'Sonata\\CoreBundle\\Form\\Type\\DateTimeRangeType' => 'sonata.core.form.type.datetime_range', 'Sonata\\CoreBundle\\Form\\Type\\DatePickerType' => 'sonata.core.form.type.date_picker', 'Sonata\\CoreBundle\\Form\\Type\\DateTimePickerType' => 'sonata.core.form.type.datetime_picker', 'Sonata\\CoreBundle\\Form\\Type\\DateRangePickerType' => 'sonata.core.form.type.date_range_picker', 'Sonata\\CoreBundle\\Form\\Type\\DateTimeRangePickerType' => 'sonata.core.form.type.datetime_range_picker', 'Sonata\\CoreBundle\\Form\\Type\\EqualType' => 'sonata.core.form.type.equal', 'Sonata\\CoreBundle\\Form\\Type\\ColorSelectorType' => 'sonata.core.form.type.color_selector', 'Sonata\\BlockBundle\\Form\\Type\\ServiceListType' => 'sonata.block.form.type.block', 'Sonata\\BlockBundle\\Form\\Type\\ContainerTemplateType' => 'sonata.block.form.type.container_template', 'Liip\\ImagineBundle\\Form\\Type\\ImageType' => 'liip_imagine.form.type.image', 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\CreditCardExpirationDateType' => 'payum.form.type.credit_card_expiration_date', 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\CreditCardType' => 'payum.form.type.credit_card', 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\GatewayConfigType' => 'payum.form.type.gateway_config', 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\GatewayFactoriesChoiceType' => 'payum.form.type.gateway_factories_choice', 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\GatewayConfigType' => 'sylius.form.type.gateway_config', 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\PaypalGatewayConfigurationType' => 'sylius.form.type.gateway_configuration.paypal', 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\StripeGatewayConfigurationType' => 'sylius.form.type.gateway_configuration.stripe', 'Sylius\\Bundle\\ThemeBundle\\Form\\Type\\ThemeChoiceType' => 'sylius.theme.form.type.theme_choice', 'Sylius\\Bundle\\ThemeBundle\\Form\\Type\\ThemeNameChoiceType' => 'sylius.theme.form.type.theme_name_choice'), array('Sylius\\Bundle\\AddressingBundle\\Form\\Type\\CountryType' => array(0 => 'sylius.form.extension.type.country'), 'Sylius\\Bundle\\ChannelBundle\\Form\\Type\\ChannelType' => array(0 => 'sylius.form.extension.type.channel'), 'Sylius\\Bundle\\LocaleBundle\\Form\\Type\\LocaleType' => array(0 => 'sylius.form.extension.type.locale'), 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderType' => array(0 => 'sylius.form.extension.type.order'), 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\CartType' => array(0 => 'sylius.form.extension.type.cart'), 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\CartItemType' => array(0 => 'sylius.form.extension.type.cart_item'), 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodType' => array(0 => 'sylius.form.extension.type.payment_method'), 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType' => array(0 => 'sylius.form.extension.type.tax_rate'), 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonType' => array(0 => 'sylius.form.extension.type.taxon'), 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerType' => array(0 => 'sylius.form.extension.type.customer'), 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionType' => array(0 => 'sylius.form.extension.type.promotion'), 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionCouponType' => array(0 => 'sylius.form.extension.type.promotion_coupon'), 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionFilterCollectionType' => array(0 => 'sylius.form.extension.type.promotion_filter_collection'), 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodType' => array(0 => 'sylius.form.extension.type.shipping_method'), 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductType' => array(0 => 'sylius.form.extension.type.product'), 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType' => array(0 => 'sylius.form.extension.type.product_translation'), 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantType' => array(0 => 'sylius.form.extension.type.product_variant'), 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantGenerationType' => array(0 => 'sylius.form.extension.type.product_variant_generation'), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType' => array(0 => 'sylius.form.extension.type.collection'), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.upload.validator', 3 => 'form.type_extension.csrf'), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => array(0 => 'form.type_extension.repeated.validator'), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => array(0 => 'form.type_extension.submit.validator'), 'Payum\\Core\\Bridge\\Symfony\\Form\\Type\\GatewayFactoriesChoiceType' => array(0 => 'payum.form.extension.gateway_factories_choice'), 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\GatewayConfigType' => array(0 => 'sylius.form.extension.type.gateway_config.crypted')), array(0 => 'form.type_guesser.doctrine', 1 => 'form.type_guesser.validator'), array('form' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType', 'birthday' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\BirthdayType', 'checkbox' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType', 'choice' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType', 'collection' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CollectionType', 'country' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CountryType', 'date' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\DateType', 'datetime' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\DateTimeType', 'email' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType', 'file' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType', 'hidden' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\HiddenType', 'integer' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\IntegerType', 'language' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\LanguageType', 'locale' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\LocaleType', 'money' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\MoneyType', 'number' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\NumberType', 'password' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType', 'percent' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\PercentType', 'radio' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RadioType', 'repeated' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType', 'search' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SearchType', 'textarea' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextareaType', 'text' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType', 'time' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TimeType', 'timezone' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\TimezoneType', 'url' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\UrlType', 'button' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ButtonType', 'submit' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType', 'reset' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ResetType', 'currency' => 'Symfony\\Component\\Form\\Extension\\Core\\Type\\CurrencyType', 'entity' => 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType', 'sonata_type_immutable_array' => 'Sonata\\CoreBundle\\Form\\Type\\ImmutableArrayType', 'sonata_type_boolean' => 'Sonata\\CoreBundle\\Form\\Type\\BooleanType', 'sonata_type_collection' => 'Sonata\\CoreBundle\\Form\\Type\\CollectionType', 'sonata_type_translatable_choice' => 'Sonata\\CoreBundle\\Form\\Type\\TranslatableChoiceType', 'sonata_type_date_range' => 'Sonata\\CoreBundle\\Form\\Type\\DateRangeType', 'sonata_type_datetime_range' => 'Sonata\\CoreBundle\\Form\\Type\\DateTimeRangeType', 'sonata_type_date_picker' => 'Sonata\\CoreBundle\\Form\\Type\\DatePickerType', 'sonata_type_datetime_picker' => 'Sonata\\CoreBundle\\Form\\Type\\DateTimePickerType', 'sonata_type_date_range_picker' => 'Sonata\\CoreBundle\\Form\\Type\\DateRangePickerType', 'sonata_type_datetime_range_picker' => 'Sonata\\CoreBundle\\Form\\Type\\DateTimeRangePickerType', 'sonata_type_equal' => 'Sonata\\CoreBundle\\Form\\Type\\EqualType', 'sonata_type_color_selector' => 'Sonata\\CoreBundle\\Form\\Type\\ColorSelectorType', 'sonata_block_service_choice' => 'Sonata\\BlockBundle\\Form\\Type\\ServiceListType', 'sonata_type_container_template_choice' => 'Sonata\\BlockBundle\\Form\\Type\\ContainerTemplateType'), array('form' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.csrf', 3 => 'form.type_extension.form.data_collector'), 'repeated' => array(0 => 'form.type_extension.repeated.validator'), 'submit' => array(0 => 'form.type_extension.submit.validator')), array());
    }

    /**
     * Gets the 'form.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\FormFactory A Symfony\Component\Form\FormFactory instance
     */
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory($this->get('form.registry'), $this->get('form.resolved_type_factory'));
    }

    /**
     * Gets the 'form.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\FormRegistry A Symfony\Component\Form\FormRegistry instance
     */
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => $this->get('form.extension')), $this->get('form.resolved_type_factory'));
    }

    /**
     * Gets the 'form.resolved_type_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\ResolvedFormTypeFactory A Symfony\Component\Form\ResolvedFormTypeFactory instance
     */
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory();
    }

    /**
     * Gets the 'form.type.birthday' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\BirthdayType A Symfony\Component\Form\Extension\Core\Type\BirthdayType instance
     *
     * @deprecated The "form.type.birthday" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_BirthdayService()
    {
        @trigger_error('The "form.type.birthday" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }

    /**
     * Gets the 'form.type.button' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ButtonType A Symfony\Component\Form\Extension\Core\Type\ButtonType instance
     *
     * @deprecated The "form.type.button" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_ButtonService()
    {
        @trigger_error('The "form.type.button" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }

    /**
     * Gets the 'form.type.checkbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CheckboxType A Symfony\Component\Form\Extension\Core\Type\CheckboxType instance
     *
     * @deprecated The "form.type.checkbox" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CheckboxService()
    {
        @trigger_error('The "form.type.checkbox" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }

    /**
     * Gets the 'form.type.choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ChoiceType A Symfony\Component\Form\Extension\Core\Type\ChoiceType instance
     */
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType(new \Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator(new \Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator(new \Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory(), $this->get('property_accessor'))));
    }

    /**
     * Gets the 'form.type.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CollectionType A Symfony\Component\Form\Extension\Core\Type\CollectionType instance
     *
     * @deprecated The "form.type.collection" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CollectionService()
    {
        @trigger_error('The "form.type.collection" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }

    /**
     * Gets the 'form.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CountryType A Symfony\Component\Form\Extension\Core\Type\CountryType instance
     *
     * @deprecated The "form.type.country" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CountryService()
    {
        @trigger_error('The "form.type.country" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }

    /**
     * Gets the 'form.type.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\CurrencyType A Symfony\Component\Form\Extension\Core\Type\CurrencyType instance
     *
     * @deprecated The "form.type.currency" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_CurrencyService()
    {
        @trigger_error('The "form.type.currency" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }

    /**
     * Gets the 'form.type.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateType A Symfony\Component\Form\Extension\Core\Type\DateType instance
     *
     * @deprecated The "form.type.date" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_DateService()
    {
        @trigger_error('The "form.type.date" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }

    /**
     * Gets the 'form.type.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\DateTimeType A Symfony\Component\Form\Extension\Core\Type\DateTimeType instance
     *
     * @deprecated The "form.type.datetime" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_DatetimeService()
    {
        @trigger_error('The "form.type.datetime" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }

    /**
     * Gets the 'form.type.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\EmailType A Symfony\Component\Form\Extension\Core\Type\EmailType instance
     *
     * @deprecated The "form.type.email" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_EmailService()
    {
        @trigger_error('The "form.type.email" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }

    /**
     * Gets the 'form.type.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\Type\EntityType A Symfony\Bridge\Doctrine\Form\Type\EntityType instance
     */
    protected function getForm_Type_EntityService()
    {
        return $this->services['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType($this->get('doctrine'));
    }

    /**
     * Gets the 'form.type.file' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FileType A Symfony\Component\Form\Extension\Core\Type\FileType instance
     *
     * @deprecated The "form.type.file" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_FileService()
    {
        @trigger_error('The "form.type.file" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }

    /**
     * Gets the 'form.type.form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\FormType A Symfony\Component\Form\Extension\Core\Type\FormType instance
     */
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType($this->get('property_accessor'));
    }

    /**
     * Gets the 'form.type.hidden' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\HiddenType A Symfony\Component\Form\Extension\Core\Type\HiddenType instance
     *
     * @deprecated The "form.type.hidden" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_HiddenService()
    {
        @trigger_error('The "form.type.hidden" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }

    /**
     * Gets the 'form.type.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\IntegerType A Symfony\Component\Form\Extension\Core\Type\IntegerType instance
     *
     * @deprecated The "form.type.integer" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_IntegerService()
    {
        @trigger_error('The "form.type.integer" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }

    /**
     * Gets the 'form.type.language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LanguageType A Symfony\Component\Form\Extension\Core\Type\LanguageType instance
     *
     * @deprecated The "form.type.language" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_LanguageService()
    {
        @trigger_error('The "form.type.language" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }

    /**
     * Gets the 'form.type.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\LocaleType A Symfony\Component\Form\Extension\Core\Type\LocaleType instance
     *
     * @deprecated The "form.type.locale" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_LocaleService()
    {
        @trigger_error('The "form.type.locale" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }

    /**
     * Gets the 'form.type.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\MoneyType A Symfony\Component\Form\Extension\Core\Type\MoneyType instance
     *
     * @deprecated The "form.type.money" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_MoneyService()
    {
        @trigger_error('The "form.type.money" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }

    /**
     * Gets the 'form.type.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\NumberType A Symfony\Component\Form\Extension\Core\Type\NumberType instance
     *
     * @deprecated The "form.type.number" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_NumberService()
    {
        @trigger_error('The "form.type.number" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }

    /**
     * Gets the 'form.type.password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PasswordType A Symfony\Component\Form\Extension\Core\Type\PasswordType instance
     *
     * @deprecated The "form.type.password" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_PasswordService()
    {
        @trigger_error('The "form.type.password" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }

    /**
     * Gets the 'form.type.percent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\PercentType A Symfony\Component\Form\Extension\Core\Type\PercentType instance
     *
     * @deprecated The "form.type.percent" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_PercentService()
    {
        @trigger_error('The "form.type.percent" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }

    /**
     * Gets the 'form.type.radio' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RadioType A Symfony\Component\Form\Extension\Core\Type\RadioType instance
     *
     * @deprecated The "form.type.radio" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_RadioService()
    {
        @trigger_error('The "form.type.radio" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }

    /**
     * Gets the 'form.type.range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RangeType A Symfony\Component\Form\Extension\Core\Type\RangeType instance
     *
     * @deprecated The "form.type.range" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_RangeService()
    {
        @trigger_error('The "form.type.range" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.range'] = new \Symfony\Component\Form\Extension\Core\Type\RangeType();
    }

    /**
     * Gets the 'form.type.repeated' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\RepeatedType A Symfony\Component\Form\Extension\Core\Type\RepeatedType instance
     *
     * @deprecated The "form.type.repeated" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_RepeatedService()
    {
        @trigger_error('The "form.type.repeated" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }

    /**
     * Gets the 'form.type.reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\ResetType A Symfony\Component\Form\Extension\Core\Type\ResetType instance
     *
     * @deprecated The "form.type.reset" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_ResetService()
    {
        @trigger_error('The "form.type.reset" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }

    /**
     * Gets the 'form.type.search' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SearchType A Symfony\Component\Form\Extension\Core\Type\SearchType instance
     *
     * @deprecated The "form.type.search" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_SearchService()
    {
        @trigger_error('The "form.type.search" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }

    /**
     * Gets the 'form.type.submit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\SubmitType A Symfony\Component\Form\Extension\Core\Type\SubmitType instance
     *
     * @deprecated The "form.type.submit" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_SubmitService()
    {
        @trigger_error('The "form.type.submit" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }

    /**
     * Gets the 'form.type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextType A Symfony\Component\Form\Extension\Core\Type\TextType instance
     *
     * @deprecated The "form.type.text" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TextService()
    {
        @trigger_error('The "form.type.text" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }

    /**
     * Gets the 'form.type.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TextareaType A Symfony\Component\Form\Extension\Core\Type\TextareaType instance
     *
     * @deprecated The "form.type.textarea" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TextareaService()
    {
        @trigger_error('The "form.type.textarea" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }

    /**
     * Gets the 'form.type.time' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimeType A Symfony\Component\Form\Extension\Core\Type\TimeType instance
     *
     * @deprecated The "form.type.time" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TimeService()
    {
        @trigger_error('The "form.type.time" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }

    /**
     * Gets the 'form.type.timezone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\TimezoneType A Symfony\Component\Form\Extension\Core\Type\TimezoneType instance
     *
     * @deprecated The "form.type.timezone" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_TimezoneService()
    {
        @trigger_error('The "form.type.timezone" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }

    /**
     * Gets the 'form.type.url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Core\Type\UrlType A Symfony\Component\Form\Extension\Core\Type\UrlType instance
     *
     * @deprecated The "form.type.url" service is deprecated since Symfony 3.1 and will be removed in 4.0.
     */
    protected function getForm_Type_UrlService()
    {
        @trigger_error('The "form.type.url" service is deprecated since Symfony 3.1 and will be removed in 4.0.', E_USER_DEPRECATED);

        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }

    /**
     * Gets the 'form.type_extension.csrf' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension A Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension instance
     */
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension($this->get('security.csrf.token_manager'), true, '_token', $this->get('translator.default'), 'validators', new \Symfony\Component\Form\Util\ServerParams($this->get('request_stack')));
    }

    /**
     * Gets the 'form.type_extension.form.http_foundation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension A Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension instance
     */
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Sylius\Bundle\ResourceBundle\Form\Extension\HttpFoundation\HttpFoundationRequestHandler());
    }

    /**
     * Gets the 'form.type_extension.form.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension instance
     */
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension($this->get('validator'));
    }

    /**
     * Gets the 'form.type_extension.repeated.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension instance
     */
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }

    /**
     * Gets the 'form.type_extension.submit.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension instance
     */
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }

    /**
     * Gets the 'form.type_extension.upload.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension A Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension instance
     */
    protected function getForm_TypeExtension_Upload_ValidatorService()
    {
        return $this->services['form.type_extension.upload.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension($this->get('translator'), 'validators');
    }

    /**
     * Gets the 'form.type_guesser.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser A Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser instance
     */
    protected function getForm_TypeGuesser_DoctrineService()
    {
        return $this->services['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser($this->get('doctrine'));
    }

    /**
     * Gets the 'form.type_guesser.validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser A Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser instance
     */
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser($this->get('validator'));
    }

    /**
     * Gets the 'fos_rest.body_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\EventListener\BodyListener A FOS\RestBundle\EventListener\BodyListener instance
     */
    protected function getFosRest_BodyListenerService()
    {
        $this->services['fos_rest.body_listener'] = $instance = new \FOS\RestBundle\EventListener\BodyListener($this->get('fos_rest.decoder_provider'), false);

        $instance->setDefaultFormat(NULL);

        return $instance;
    }

    /**
     * Gets the 'fos_rest.decoder.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\JsonDecoder A FOS\RestBundle\Decoder\JsonDecoder instance
     */
    protected function getFosRest_Decoder_JsonService()
    {
        return $this->services['fos_rest.decoder.json'] = new \FOS\RestBundle\Decoder\JsonDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder.jsontoform' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\JsonToFormDecoder A FOS\RestBundle\Decoder\JsonToFormDecoder instance
     */
    protected function getFosRest_Decoder_JsontoformService()
    {
        return $this->services['fos_rest.decoder.jsontoform'] = new \FOS\RestBundle\Decoder\JsonToFormDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder.xml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\XmlDecoder A FOS\RestBundle\Decoder\XmlDecoder instance
     */
    protected function getFosRest_Decoder_XmlService()
    {
        return $this->services['fos_rest.decoder.xml'] = new \FOS\RestBundle\Decoder\XmlDecoder();
    }

    /**
     * Gets the 'fos_rest.decoder_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Decoder\ContainerDecoderProvider A FOS\RestBundle\Decoder\ContainerDecoderProvider instance
     */
    protected function getFosRest_DecoderProviderService()
    {
        return $this->services['fos_rest.decoder_provider'] = new \FOS\RestBundle\Decoder\ContainerDecoderProvider($this, array('json' => 'fos_rest.decoder.json', 'xml' => 'fos_rest.decoder.xml'));
    }

    /**
     * Gets the 'fos_rest.exception.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Controller\ExceptionController A FOS\RestBundle\Controller\ExceptionController instance
     */
    protected function getFosRest_Exception_ControllerService()
    {
        return $this->services['fos_rest.exception.controller'] = new \FOS\RestBundle\Controller\ExceptionController($this->get('fos_rest.view_handler'), ${($_ = isset($this->services['fos_rest.exception.codes_map']) ? $this->services['fos_rest.exception.codes_map'] : $this->getFosRest_Exception_CodesMapService()) && false ?: '_'}, true);
    }

    /**
     * Gets the 'fos_rest.exception.twig_controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Controller\TwigExceptionController A FOS\RestBundle\Controller\TwigExceptionController instance
     */
    protected function getFosRest_Exception_TwigControllerService()
    {
        return $this->services['fos_rest.exception.twig_controller'] = new \FOS\RestBundle\Controller\TwigExceptionController($this->get('fos_rest.view_handler'), ${($_ = isset($this->services['fos_rest.exception.codes_map']) ? $this->services['fos_rest.exception.codes_map'] : $this->getFosRest_Exception_CodesMapService()) && false ?: '_'}, true, $this->get('templating'));
    }

    /**
     * Gets the 'fos_rest.exception_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\EventListener\ExceptionListener A FOS\RestBundle\EventListener\ExceptionListener instance
     */
    protected function getFosRest_ExceptionListenerService()
    {
        return $this->services['fos_rest.exception_listener'] = new \FOS\RestBundle\EventListener\ExceptionListener('fos_rest.exception.twig_controller:showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'fos_rest.inflector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Inflector\DoctrineInflector A FOS\RestBundle\Inflector\DoctrineInflector instance
     */
    protected function getFosRest_InflectorService()
    {
        return $this->services['fos_rest.inflector'] = new \FOS\RestBundle\Inflector\DoctrineInflector();
    }

    /**
     * Gets the 'fos_rest.normalizer.camel_keys' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizer A FOS\RestBundle\Normalizer\CamelKeysNormalizer instance
     */
    protected function getFosRest_Normalizer_CamelKeysService()
    {
        return $this->services['fos_rest.normalizer.camel_keys'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizer();
    }

    /**
     * Gets the 'fos_rest.normalizer.camel_keys_with_leading_underscore' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore A FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore instance
     */
    protected function getFosRest_Normalizer_CamelKeysWithLeadingUnderscoreService()
    {
        return $this->services['fos_rest.normalizer.camel_keys_with_leading_underscore'] = new \FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore();
    }

    /**
     * Gets the 'fos_rest.request.param_fetcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Request\ParamFetcher A FOS\RestBundle\Request\ParamFetcher instance
     */
    protected function getFosRest_Request_ParamFetcherService()
    {
        return $this->services['fos_rest.request.param_fetcher'] = new \FOS\RestBundle\Request\ParamFetcher($this, ${($_ = isset($this->services['fos_rest.request.param_fetcher.reader']) ? $this->services['fos_rest.request.param_fetcher.reader'] : $this->getFosRest_Request_ParamFetcher_ReaderService()) && false ?: '_'}, $this->get('request_stack'), $this->get('validator', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'fos_rest.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \FOS\RestBundle\Serializer\JMSSerializerAdapter A FOS\RestBundle\Serializer\JMSSerializerAdapter instance
     */
    public function getFosRest_SerializerService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['fos_rest.serializer'] = new FOSRestBundleSerializerJMSSerializerAdapter_00000000425527a7000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getFosRest_SerializerService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \FOS\RestBundle\Serializer\JMSSerializerAdapter($this->get('jms_serializer'));
    }

    /**
     * Gets the 'fos_rest.serializer.exception_normalizer.jms' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Serializer\Normalizer\ExceptionHandler A FOS\RestBundle\Serializer\Normalizer\ExceptionHandler instance
     */
    protected function getFosRest_Serializer_ExceptionNormalizer_JmsService()
    {
        return $this->services['fos_rest.serializer.exception_normalizer.jms'] = new \FOS\RestBundle\Serializer\Normalizer\ExceptionHandler(new \FOS\RestBundle\Util\ExceptionValueMap(array()), true);
    }

    /**
     * Gets the 'fos_rest.view_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\View\ViewHandler A FOS\RestBundle\View\ViewHandler instance
     */
    protected function getFosRest_ViewHandlerService()
    {
        $this->services['fos_rest.view_handler'] = $instance = new \FOS\RestBundle\View\ViewHandler($this->get('router'), $this->get('fos_rest.serializer'), $this->get('templating', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'), array('json' => false, 'xml' => false, 'html' => true), 400, 204, false, array('html' => 302), 'twig');

        $instance->setSerializeNullStrategy(false);

        return $instance;
    }

    /**
     * Gets the 'fragment.handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler A Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler instance
     */
    protected function getFragment_HandlerService()
    {
        $this->services['fragment.handler'] = $instance = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler($this, $this->get('request_stack'), true);

        $instance->addRendererService('inline', 'fragment.renderer.inline');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('esi', 'fragment.renderer.esi');
        $instance->addRendererService('ssi', 'fragment.renderer.ssi');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.esi' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer A Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer instance
     */
    protected function getFragment_Renderer_EsiService()
    {
        $this->services['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.hinclude' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer A Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer instance
     */
    protected function getFragment_Renderer_HincludeService()
    {
        $this->services['fragment.renderer.hinclude'] = $instance = new \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer($this->get('twig'), $this->get('uri_signer'), NULL);

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.inline' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer A Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer instance
     */
    protected function getFragment_Renderer_InlineService()
    {
        $this->services['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer($this->get('http_kernel'), $this->get('debug.event_dispatcher'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'fragment.renderer.ssi' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer A Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer instance
     */
    protected function getFragment_Renderer_SsiService()
    {
        $this->services['fragment.renderer.ssi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }

    /**
     * Gets the 'gaufrette.sylius_image_filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Gaufrette\Filesystem A Gaufrette\Filesystem instance
     */
    protected function getGaufrette_SyliusImageFilesystemService()
    {
        return $this->services['gaufrette.sylius_image_filesystem'] = new \Gaufrette\Filesystem(new \Gaufrette\Adapter\Local(($this->targetDirs[3].'/app/../web/media/image'), true));
    }

    /**
     * Gets the 'hateoas.configuration.provider.resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Configuration\Provider\Resolver\ChainResolver A Hateoas\Configuration\Provider\Resolver\ChainResolver instance
     */
    protected function getHateoas_Configuration_Provider_ResolverService()
    {
        return $this->services['hateoas.configuration.provider.resolver'] = new \Hateoas\Configuration\Provider\Resolver\ChainResolver(array(0 => new \Hateoas\Configuration\Provider\Resolver\MethodResolver(), 1 => new \Hateoas\Configuration\Provider\Resolver\StaticMethodResolver(), 2 => new \Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver($this)));
    }

    /**
     * Gets the 'hateoas.event_subscriber.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Serializer\EventSubscriber\JsonEventSubscriber A Hateoas\Serializer\EventSubscriber\JsonEventSubscriber instance
     */
    protected function getHateoas_EventSubscriber_JsonService()
    {
        $a = ${($_ = isset($this->services['jms_serializer.metadata_factory']) ? $this->services['jms_serializer.metadata_factory'] : $this->getJmsSerializer_MetadataFactoryService()) && false ?: '_'};

        return $this->services['hateoas.event_subscriber.json'] = new \Hateoas\Serializer\EventSubscriber\JsonEventSubscriber(new \Hateoas\Serializer\JsonHalSerializer(), ${($_ = isset($this->services['hateoas.links_factory']) ? $this->services['hateoas.links_factory'] : $this->getHateoas_LinksFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['hateoas.embeds_factory']) ? $this->services['hateoas.embeds_factory'] : $this->getHateoas_EmbedsFactoryService()) && false ?: '_'}, new \Hateoas\Serializer\Metadata\InlineDeferrer($a), new \Hateoas\Serializer\Metadata\InlineDeferrer($a));
    }

    /**
     * Gets the 'hateoas.event_subscriber.xml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Serializer\EventSubscriber\XmlEventSubscriber A Hateoas\Serializer\EventSubscriber\XmlEventSubscriber instance
     */
    protected function getHateoas_EventSubscriber_XmlService()
    {
        $a = new \Hateoas\Serializer\XmlSerializer();
        $a->setMetadataFactory(${($_ = isset($this->services['jms_serializer.metadata_factory']) ? $this->services['jms_serializer.metadata_factory'] : $this->getJmsSerializer_MetadataFactoryService()) && false ?: '_'});

        return $this->services['hateoas.event_subscriber.xml'] = new \Hateoas\Serializer\EventSubscriber\XmlEventSubscriber($a, ${($_ = isset($this->services['hateoas.links_factory']) ? $this->services['hateoas.links_factory'] : $this->getHateoas_LinksFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['hateoas.embeds_factory']) ? $this->services['hateoas.embeds_factory'] : $this->getHateoas_EmbedsFactoryService()) && false ?: '_'});
    }

    /**
     * Gets the 'hateoas.expression.evaluator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator A Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator instance
     */
    protected function getHateoas_Expression_EvaluatorService()
    {
        $this->services['hateoas.expression.evaluator'] = $instance = new \Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator($this->get('bazinga_hateoas.expression_language'), array(), $this);

        $instance->setContextVariable('container', $this);
        $instance->registerFunctionId('hateoas.expression.link');

        return $instance;
    }

    /**
     * Gets the 'hateoas.expression.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Expression\LinkExpressionFunction A Hateoas\Expression\LinkExpressionFunction instance
     */
    protected function getHateoas_Expression_LinkService()
    {
        return $this->services['hateoas.expression.link'] = new \Hateoas\Expression\LinkExpressionFunction($this->get('hateoas.helper.link'));
    }

    /**
     * Gets the 'hateoas.generator.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\UrlGenerator\UrlGeneratorRegistry A Hateoas\UrlGenerator\UrlGeneratorRegistry instance
     */
    protected function getHateoas_Generator_RegistryService()
    {
        return $this->services['hateoas.generator.registry'] = new \Hateoas\UrlGenerator\UrlGeneratorRegistry($this->get('hateoas.generator.symfony'));
    }

    /**
     * Gets the 'hateoas.generator.symfony' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\UrlGenerator\SymfonyUrlGenerator A Hateoas\UrlGenerator\SymfonyUrlGenerator instance
     */
    protected function getHateoas_Generator_SymfonyService()
    {
        return $this->services['hateoas.generator.symfony'] = new \Hateoas\UrlGenerator\SymfonyUrlGenerator($this->get('router'));
    }

    /**
     * Gets the 'hateoas.helper.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Helper\LinkHelper A Hateoas\Helper\LinkHelper instance
     */
    protected function getHateoas_Helper_LinkService()
    {
        return $this->services['hateoas.helper.link'] = new \Hateoas\Helper\LinkHelper(${($_ = isset($this->services['hateoas.link_factory']) ? $this->services['hateoas.link_factory'] : $this->getHateoas_LinkFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['hateoas.configuration.relations_repository']) ? $this->services['hateoas.configuration.relations_repository'] : $this->getHateoas_Configuration_RelationsRepositoryService()) && false ?: '_'});
    }

    /**
     * Gets the 'hateoas.serializer.exclusion_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Serializer\ExclusionManager A Hateoas\Serializer\ExclusionManager instance
     */
    protected function getHateoas_Serializer_ExclusionManagerService()
    {
        return $this->services['hateoas.serializer.exclusion_manager'] = new \Hateoas\Serializer\ExclusionManager($this->get('hateoas.expression.evaluator'));
    }

    /**
     * Gets the 'hateoas.twig.link' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Hateoas\Twig\Extension\LinkExtension A Hateoas\Twig\Extension\LinkExtension instance
     */
    protected function getHateoas_Twig_LinkService()
    {
        return $this->services['hateoas.twig.link'] = new \Hateoas\Twig\Extension\LinkExtension($this->get('hateoas.helper.link'));
    }

    /**
     * Gets the 'http_kernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel A Symfony\Component\HttpKernel\HttpKernel instance
     */
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel($this->get('debug.event_dispatcher'), $this->get('debug.controller_resolver'), $this->get('request_stack'), $this->get('debug.argument_resolver'));
    }

    /**
     * Gets the 'jms_serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Serializer A JMS\Serializer\Serializer instance
     */
    protected function getJmsSerializerService()
    {
        $a = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher($this);
        $a->setListeners(array('serializer.post_serialize' => array(0 => array(0 => array(0 => 'hateoas.event_subscriber.xml', 1 => 'onPostSerialize'), 1 => NULL, 2 => 'xml'), 1 => array(0 => array(0 => 'hateoas.event_subscriber.json', 1 => 'onPostSerialize'), 1 => NULL, 2 => 'json'), 2 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPostSerialize'), 1 => NULL, 2 => NULL)), 'serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.stopwatch_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL), 1 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerializeTypedProxy'), 1 => NULL, 2 => NULL), 2 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL))));

        $this->services['jms_serializer'] = $instance = new \JMS\Serializer\Serializer(${($_ = isset($this->services['jms_serializer.metadata_factory']) ? $this->services['jms_serializer.metadata_factory'] : $this->getJmsSerializer_MetadataFactoryService()) && false ?: '_'}, $this->get('jms_serializer.handler_registry'), ${($_ = isset($this->services['jms_serializer.unserialize_object_constructor']) ? $this->services['jms_serializer.unserialize_object_constructor'] : $this->getJmsSerializer_UnserializeObjectConstructorService()) && false ?: '_'}, new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_serialization_visitor'), 'xml' => $this->get('jms_serializer.xml_serialization_visitor'), 'yml' => $this->get('jms_serializer.yaml_serialization_visitor'))), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_deserialization_visitor'), 'xml' => $this->get('jms_serializer.xml_deserialization_visitor'))), $a, NULL, $this->get('jms_serializer.expression_evaluator'));

        $instance->setSerializationContextFactory($this->get('jms_serializer.serialization_context_factory'));
        $instance->setDeserializationContextFactory($this->get('jms_serializer.deserialization_context_factory'));

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.accessor_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Accessor\ExpressionAccessorStrategy A JMS\Serializer\Accessor\ExpressionAccessorStrategy instance
     */
    protected function getJmsSerializer_AccessorStrategyService()
    {
        return $this->services['jms_serializer.accessor_strategy'] = new \JMS\Serializer\Accessor\ExpressionAccessorStrategy($this->get('jms_serializer.expression_evaluator'), new \JMS\Serializer\Accessor\DefaultAccessorStrategy());
    }

    /**
     * Gets the 'jms_serializer.array_collection_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\ArrayCollectionHandler A JMS\Serializer\Handler\ArrayCollectionHandler instance
     */
    protected function getJmsSerializer_ArrayCollectionHandlerService()
    {
        return $this->services['jms_serializer.array_collection_handler'] = new \JMS\Serializer\Handler\ArrayCollectionHandler(true);
    }

    /**
     * Gets the 'jms_serializer.constraint_violation_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\ConstraintViolationHandler A JMS\Serializer\Handler\ConstraintViolationHandler instance
     */
    protected function getJmsSerializer_ConstraintViolationHandlerService()
    {
        return $this->services['jms_serializer.constraint_violation_handler'] = new \JMS\Serializer\Handler\ConstraintViolationHandler();
    }

    /**
     * Gets the 'jms_serializer.datetime_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\DateHandler A JMS\Serializer\Handler\DateHandler instance
     */
    protected function getJmsSerializer_DatetimeHandlerService()
    {
        return $this->services['jms_serializer.datetime_handler'] = new \JMS\Serializer\Handler\DateHandler('Y-m-d\\TH:i:sO', 'UTC', true);
    }

    /**
     * Gets the 'jms_serializer.deserialization_context_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory A JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory instance
     */
    protected function getJmsSerializer_DeserializationContextFactoryService()
    {
        return $this->services['jms_serializer.deserialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory();
    }

    /**
     * Gets the 'jms_serializer.doctrine_proxy_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber A JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber instance
     */
    protected function getJmsSerializer_DoctrineProxySubscriberService()
    {
        return $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber(false, true);
    }

    /**
     * Gets the 'jms_serializer.expression_evaluator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Expression\ExpressionEvaluator A JMS\Serializer\Expression\ExpressionEvaluator instance
     */
    protected function getJmsSerializer_ExpressionEvaluatorService()
    {
        $a = new \Symfony\Component\ExpressionLanguage\ExpressionLanguage();
        $a->registerProvider(new \JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider());

        return $this->services['jms_serializer.expression_evaluator'] = new \JMS\Serializer\Expression\ExpressionEvaluator($a, array('container' => $this));
    }

    /**
     * Gets the 'jms_serializer.form_error_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Serializer\Normalizer\FormErrorHandler A FOS\RestBundle\Serializer\Normalizer\FormErrorHandler instance
     */
    protected function getJmsSerializer_FormErrorHandlerService()
    {
        return $this->services['jms_serializer.form_error_handler'] = new \FOS\RestBundle\Serializer\Normalizer\FormErrorHandler($this->get('translator'));
    }

    /**
     * Gets the 'jms_serializer.handler_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \FOS\RestBundle\Serializer\JMSHandlerRegistry A FOS\RestBundle\Serializer\JMSHandlerRegistry instance
     */
    protected function getJmsSerializer_HandlerRegistryService()
    {
        return $this->services['jms_serializer.handler_registry'] = new \FOS\RestBundle\Serializer\JMSHandlerRegistry(${($_ = isset($this->services['fos_rest.serializer.jms_handler_registry']) ? $this->services['fos_rest.serializer.jms_handler_registry'] : $this->getFosRest_Serializer_JmsHandlerRegistryService()) && false ?: '_'});
    }

    /**
     * Gets the 'jms_serializer.json_deserialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\JsonDeserializationVisitor A JMS\Serializer\JsonDeserializationVisitor instance
     */
    protected function getJmsSerializer_JsonDeserializationVisitorService()
    {
        return $this->services['jms_serializer.json_deserialization_visitor'] = new \JMS\Serializer\JsonDeserializationVisitor($this->get('jms_serializer.naming_strategy'));
    }

    /**
     * Gets the 'jms_serializer.json_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\JsonSerializationVisitor A JMS\Serializer\JsonSerializationVisitor instance
     */
    protected function getJmsSerializer_JsonSerializationVisitorService()
    {
        $this->services['jms_serializer.json_serialization_visitor'] = $instance = new \JMS\Serializer\JsonSerializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.accessor_strategy'));

        $instance->setOptions(0);

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.metadata_driver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver A JMS\Serializer\Metadata\Driver\DoctrineTypeDriver instance
     */
    protected function getJmsSerializer_MetadataDriverService()
    {
        $a = ${($_ = isset($this->services['jms_serializer.metadata.file_locator']) ? $this->services['jms_serializer.metadata.file_locator'] : $this->getJmsSerializer_Metadata_FileLocatorService()) && false ?: '_'};

        return $this->services['jms_serializer.metadata_driver'] = new \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver(new \Metadata\Driver\DriverChain(array(0 => new \JMS\Serializer\Metadata\Driver\YamlDriver($a), 1 => new \JMS\Serializer\Metadata\Driver\XmlDriver($a), 2 => new \JMS\Serializer\Metadata\Driver\PhpDriver($a), 3 => new \JMS\Serializer\Metadata\Driver\AnnotationDriver($this->get('annotation_reader')))), $this->get('doctrine'));
    }

    /**
     * Gets the 'jms_serializer.naming_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Naming\CacheNamingStrategy A JMS\Serializer\Naming\CacheNamingStrategy instance
     */
    protected function getJmsSerializer_NamingStrategyService()
    {
        return $this->services['jms_serializer.naming_strategy'] = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\CamelCaseNamingStrategy('_', true)));
    }

    /**
     * Gets the 'jms_serializer.object_constructor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Construction\DoctrineObjectConstructor A JMS\Serializer\Construction\DoctrineObjectConstructor instance
     */
    protected function getJmsSerializer_ObjectConstructorService()
    {
        return $this->services['jms_serializer.object_constructor'] = new \JMS\Serializer\Construction\DoctrineObjectConstructor($this->get('doctrine'), ${($_ = isset($this->services['jms_serializer.unserialize_object_constructor']) ? $this->services['jms_serializer.unserialize_object_constructor'] : $this->getJmsSerializer_UnserializeObjectConstructorService()) && false ?: '_'}, 'null');
    }

    /**
     * Gets the 'jms_serializer.php_collection_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Handler\PhpCollectionHandler A JMS\Serializer\Handler\PhpCollectionHandler instance
     */
    protected function getJmsSerializer_PhpCollectionHandlerService()
    {
        return $this->services['jms_serializer.php_collection_handler'] = new \JMS\Serializer\Handler\PhpCollectionHandler();
    }

    /**
     * Gets the 'jms_serializer.serialization_context_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory A JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory instance
     */
    protected function getJmsSerializer_SerializationContextFactoryService()
    {
        return $this->services['jms_serializer.serialization_context_factory'] = new \JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory();
    }

    /**
     * Gets the 'jms_serializer.stopwatch_subscriber' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber A JMS\SerializerBundle\Serializer\StopwatchEventSubscriber instance
     */
    protected function getJmsSerializer_StopwatchSubscriberService()
    {
        return $this->services['jms_serializer.stopwatch_subscriber'] = new \JMS\SerializerBundle\Serializer\StopwatchEventSubscriber($this->get('debug.stopwatch'));
    }

    /**
     * Gets the 'jms_serializer.templating.helper.serializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\SerializerBundle\Templating\SerializerHelper A JMS\SerializerBundle\Templating\SerializerHelper instance
     */
    protected function getJmsSerializer_Templating_Helper_SerializerService()
    {
        return $this->services['jms_serializer.templating.helper.serializer'] = new \JMS\SerializerBundle\Templating\SerializerHelper($this->get('jms_serializer'));
    }

    /**
     * Gets the 'jms_serializer.twig_extension.serializer_runtime_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\Twig\SerializerRuntimeHelper A JMS\Serializer\Twig\SerializerRuntimeHelper instance
     */
    protected function getJmsSerializer_TwigExtension_SerializerRuntimeHelperService()
    {
        return $this->services['jms_serializer.twig_extension.serializer_runtime_helper'] = new \JMS\Serializer\Twig\SerializerRuntimeHelper($this->get('jms_serializer'));
    }

    /**
     * Gets the 'jms_serializer.xml_deserialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\XmlDeserializationVisitor A JMS\Serializer\XmlDeserializationVisitor instance
     */
    protected function getJmsSerializer_XmlDeserializationVisitorService()
    {
        $this->services['jms_serializer.xml_deserialization_visitor'] = $instance = new \JMS\Serializer\XmlDeserializationVisitor($this->get('jms_serializer.naming_strategy'));

        $instance->setDoctypeWhitelist(array());

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.xml_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\XmlSerializationVisitor A JMS\Serializer\XmlSerializationVisitor instance
     */
    protected function getJmsSerializer_XmlSerializationVisitorService()
    {
        $this->services['jms_serializer.xml_serialization_visitor'] = $instance = new \JMS\Serializer\XmlSerializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.accessor_strategy'));

        $instance->setFormatOutput(true);

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.yaml_serialization_visitor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \JMS\Serializer\YamlSerializationVisitor A JMS\Serializer\YamlSerializationVisitor instance
     */
    protected function getJmsSerializer_YamlSerializationVisitorService()
    {
        return $this->services['jms_serializer.yaml_serialization_visitor'] = new \JMS\Serializer\YamlSerializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.accessor_strategy'));
    }

    /**
     * Gets the 'kernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     */
    protected function getKernelService()
    {
        throw new RuntimeException('You have requested a synthetic service ("kernel"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'kernel.class_cache.cache_warmer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer A Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer instance
     */
    protected function getKernel_ClassCache_CacheWarmerService()
    {
        return $this->services['kernel.class_cache.cache_warmer'] = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer(array(0 => 'Symfony\\Component\\HttpFoundation\\ParameterBag', 1 => 'Symfony\\Component\\HttpFoundation\\HeaderBag', 2 => 'Symfony\\Component\\HttpFoundation\\FileBag', 3 => 'Symfony\\Component\\HttpFoundation\\ServerBag', 4 => 'Symfony\\Component\\HttpFoundation\\Request', 5 => 'Symfony\\Component\\HttpKernel\\Kernel', 6 => 'Symfony\\Component\\ClassLoader\\ClassCollectionLoader', 7 => 'Symfony\\Component\\ClassLoader\\ApcClassLoader'));
    }

    /**
     * Gets the 'knp_gaufrette.filesystem_map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\GaufretteBundle\FilesystemMap A Knp\Bundle\GaufretteBundle\FilesystemMap instance
     */
    protected function getKnpGaufrette_FilesystemMapService()
    {
        return $this->services['knp_gaufrette.filesystem_map'] = new \Knp\Bundle\GaufretteBundle\FilesystemMap(array('sylius_image' => $this->get('gaufrette.sylius_image_filesystem')));
    }

    /**
     * Gets the 'knp_menu.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\MenuFactory A Knp\Menu\MenuFactory instance
     */
    protected function getKnpMenu_FactoryService()
    {
        $this->services['knp_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();

        $instance->addExtension(new \Knp\Menu\Integration\Symfony\RoutingExtension($this->get('router')), 0);

        return $instance;
    }

    /**
     * Gets the 'knp_menu.listener.voters' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener A Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener instance
     */
    protected function getKnpMenu_Listener_VotersService()
    {
        $this->services['knp_menu.listener.voters'] = $instance = new \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener();

        $instance->addVoter($this->get('knp_menu.voter.router'));

        return $instance;
    }

    /**
     * Gets the 'knp_menu.matcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Matcher\Matcher A Knp\Menu\Matcher\Matcher instance
     */
    protected function getKnpMenu_MatcherService()
    {
        $this->services['knp_menu.matcher'] = $instance = new \Knp\Menu\Matcher\Matcher();

        $instance->addVoter($this->get('knp_menu.voter.router'));

        return $instance;
    }

    /**
     * Gets the 'knp_menu.menu_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Provider\ChainProvider A Knp\Menu\Provider\ChainProvider instance
     */
    protected function getKnpMenu_MenuProviderService()
    {
        return $this->services['knp_menu.menu_provider'] = new \Knp\Menu\Provider\ChainProvider(array(0 => new \Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider($this, array()), 1 => new \Knp\Bundle\MenuBundle\Provider\BuilderServiceProvider($this, array('sylius.admin.customer.show' => array(0 => 'sylius.admin.menu_builder.customer.show', 1 => 'createMenu'), 'sylius.admin.main' => array(0 => 'sylius.admin.menu_builder.main', 1 => 'createMenu'), 'sylius.admin.order.show' => array(0 => 'sylius.admin.menu_builder.order.show', 1 => 'createMenu'), 'sylius.admin.product_form' => array(0 => 'sylius.admin.menu_builder.product_form', 1 => 'createMenu'), 'sylius.admin.product_variant_form' => array(0 => 'sylius.admin.menu_builder.product_variant_form', 1 => 'createMenu'), 'sylius.shop.account' => array(0 => 'sylius.shop.menu_builder.account', 1 => 'createMenu'))), 2 => new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider($this->get('kernel'), $this, $this->get('knp_menu.factory'))));
    }

    /**
     * Gets the 'knp_menu.renderer.list' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Renderer\ListRenderer A Knp\Menu\Renderer\ListRenderer instance
     */
    protected function getKnpMenu_Renderer_ListService()
    {
        return $this->services['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer($this->get('knp_menu.matcher'), array(), 'UTF-8');
    }

    /**
     * Gets the 'knp_menu.renderer.twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Renderer\TwigRenderer A Knp\Menu\Renderer\TwigRenderer instance
     */
    protected function getKnpMenu_Renderer_TwigService()
    {
        return $this->services['knp_menu.renderer.twig'] = new \Knp\Menu\Renderer\TwigRenderer($this->get('twig'), 'KnpMenuBundle::menu.html.twig', $this->get('knp_menu.matcher'), array());
    }

    /**
     * Gets the 'knp_menu.renderer_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider A Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider instance
     */
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'twig', array('list' => 'knp_menu.renderer.list', 'twig' => 'knp_menu.renderer.twig'));
    }

    /**
     * Gets the 'knp_menu.voter.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Knp\Menu\Matcher\Voter\RouteVoter A Knp\Menu\Matcher\Voter\RouteVoter instance
     */
    protected function getKnpMenu_Voter_RouterService()
    {
        return $this->services['knp_menu.voter.router'] = new \Knp\Menu\Matcher\Voter\RouteVoter();
    }

    /**
     * Gets the 'liip_imagine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Imagine\Gd\Imagine A Imagine\Gd\Imagine instance
     */
    protected function getLiipImagineService()
    {
        $this->services['liip_imagine'] = $instance = new \Imagine\Gd\Imagine();

        $instance->setMetadataReader(new \Imagine\Image\Metadata\ExifMetadataReader());

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.binary.loader.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Binary\Loader\FileSystemLoader A Liip\ImagineBundle\Binary\Loader\FileSystemLoader instance
     */
    protected function getLiipImagine_Binary_Loader_DefaultService()
    {
        return $this->services['liip_imagine.binary.loader.default'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), array(0 => ($this->targetDirs[3].'/app/../web/media/image')), new \Liip\ImagineBundle\Binary\Locator\FileSystemLocator());
    }

    /**
     * Gets the 'liip_imagine.binary.loader.prototype.filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Binary\Loader\FileSystemLoader A Liip\ImagineBundle\Binary\Loader\FileSystemLoader instance
     */
    protected function getLiipImagine_Binary_Loader_Prototype_FilesystemService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.filesystem'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), '', '');
    }

    /**
     * Gets the 'liip_imagine.binary.loader.prototype.stream' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Binary\Loader\StreamLoader A Liip\ImagineBundle\Binary\Loader\StreamLoader instance
     */
    protected function getLiipImagine_Binary_Loader_Prototype_StreamService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.stream'] = new \Liip\ImagineBundle\Binary\Loader\StreamLoader('', '');
    }

    /**
     * Gets the 'liip_imagine.binary.mime_type_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser A Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser instance
     */
    protected function getLiipImagine_Binary_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.binary.mime_type_guesser'] = new \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser($this->get('liip_imagine.mime_type_guesser'));
    }

    /**
     * Gets the 'liip_imagine.cache.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\CacheManager A Liip\ImagineBundle\Imagine\Cache\CacheManager instance
     */
    protected function getLiipImagine_Cache_ManagerService()
    {
        $this->services['liip_imagine.cache.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\CacheManager($this->get('liip_imagine.filter.configuration'), $this->get('router'), $this->get('liip_imagine.cache.signer'), $this->get('debug.event_dispatcher'), 'default');

        $instance->addResolver('default', $this->get('liip_imagine.cache.resolver.default'));
        $instance->addResolver('no_cache', $this->get('liip_imagine.cache.resolver.no_cache_web_path'));

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.cache.resolver.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver A Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver instance
     */
    protected function getLiipImagine_Cache_Resolver_DefaultService()
    {
        return $this->services['liip_imagine.cache.resolver.default'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver($this->get('filesystem'), ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}, ($this->targetDirs[3].'/app/../web'), 'media/cache');
    }

    /**
     * Gets the 'liip_imagine.cache.resolver.no_cache_web_path' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver A Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver instance
     */
    protected function getLiipImagine_Cache_Resolver_NoCacheWebPathService()
    {
        return $this->services['liip_imagine.cache.resolver.no_cache_web_path'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver(${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'});
    }

    /**
     * Gets the 'liip_imagine.cache.signer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Cache\Signer A Liip\ImagineBundle\Imagine\Cache\Signer instance
     */
    protected function getLiipImagine_Cache_SignerService()
    {
        return $this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('%secret');
    }

    /**
     * Gets the 'liip_imagine.controller' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Controller\ImagineController A Liip\ImagineBundle\Controller\ImagineController instance
     */
    protected function getLiipImagine_ControllerService()
    {
        return $this->services['liip_imagine.controller'] = new \Liip\ImagineBundle\Controller\ImagineController($this->get('liip_imagine.data.manager'), $this->get('liip_imagine.filter.manager'), $this->get('liip_imagine.cache.manager'), $this->get('liip_imagine.cache.signer'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'liip_imagine.data.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Data\DataManager A Liip\ImagineBundle\Imagine\Data\DataManager instance
     */
    protected function getLiipImagine_Data_ManagerService()
    {
        $this->services['liip_imagine.data.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Data\DataManager($this->get('liip_imagine.binary.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), $this->get('liip_imagine.filter.configuration'), 'default', NULL);

        $instance->addLoader('default', $this->get('liip_imagine.binary.loader.default'));

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.extension_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface A Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface instance
     */
    protected function getLiipImagine_ExtensionGuesserService()
    {
        return $this->services['liip_imagine.extension_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser::getInstance();
    }

    /**
     * Gets the 'liip_imagine.filter.configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration A Liip\ImagineBundle\Imagine\Filter\FilterConfiguration instance
     */
    protected function getLiipImagine_Filter_ConfigurationService()
    {
        return $this->services['liip_imagine.filter.configuration'] = new \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration(array('sylius_small' => array('filters' => array('thumbnail' => array('size' => array(0 => 120, 1 => 90), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'sylius_medium' => array('filters' => array('thumbnail' => array('size' => array(0 => 240, 1 => 180), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'sylius_large' => array('filters' => array('thumbnail' => array('size' => array(0 => 640, 1 => 480), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'sylius_admin_product_tiny_thumbnail' => array('filters' => array('thumbnail' => array('size' => array(0 => 64, 1 => 64), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'sylius_admin_product_thumbnail' => array('filters' => array('thumbnail' => array('size' => array(0 => 50, 1 => 50), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array())));
    }

    /**
     * Gets the 'liip_imagine.filter.loader.auto_rotate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_AutoRotateService()
    {
        return $this->services['liip_imagine.filter.loader.auto_rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.background' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_BackgroundService()
    {
        return $this->services['liip_imagine.filter.loader.background'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader($this->get('liip_imagine'));
    }

    /**
     * Gets the 'liip_imagine.filter.loader.crop' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_CropService()
    {
        return $this->services['liip_imagine.filter.loader.crop'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.downscale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_DownscaleService()
    {
        return $this->services['liip_imagine.filter.loader.downscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.flip' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_FlipService()
    {
        return $this->services['liip_imagine.filter.loader.flip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.grayscale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_GrayscaleService()
    {
        return $this->services['liip_imagine.filter.loader.grayscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.interlace' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_InterlaceService()
    {
        return $this->services['liip_imagine.filter.loader.interlace'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.paste' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_PasteService()
    {
        return $this->services['liip_imagine.filter.loader.paste'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader($this->get('liip_imagine'), ($this->targetDirs[3].'/app'));
    }

    /**
     * Gets the 'liip_imagine.filter.loader.relative_resize' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_RelativeResizeService()
    {
        return $this->services['liip_imagine.filter.loader.relative_resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.resize' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_ResizeService()
    {
        return $this->services['liip_imagine.filter.loader.resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.rotate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_RotateService()
    {
        return $this->services['liip_imagine.filter.loader.rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.scale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_ScaleService()
    {
        return $this->services['liip_imagine.filter.loader.scale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.strip' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_StripService()
    {
        return $this->services['liip_imagine.filter.loader.strip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.thumbnail' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_ThumbnailService()
    {
        return $this->services['liip_imagine.filter.loader.thumbnail'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.upscale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_UpscaleService()
    {
        return $this->services['liip_imagine.filter.loader.upscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader();
    }

    /**
     * Gets the 'liip_imagine.filter.loader.watermark' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader A Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader instance
     */
    protected function getLiipImagine_Filter_Loader_WatermarkService()
    {
        return $this->services['liip_imagine.filter.loader.watermark'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader($this->get('liip_imagine'), ($this->targetDirs[3].'/app'));
    }

    /**
     * Gets the 'liip_imagine.filter.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\FilterManager A Liip\ImagineBundle\Imagine\Filter\FilterManager instance
     */
    protected function getLiipImagine_Filter_ManagerService()
    {
        $this->services['liip_imagine.filter.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Filter\FilterManager($this->get('liip_imagine.filter.configuration'), $this->get('liip_imagine'), $this->get('liip_imagine.binary.mime_type_guesser'));

        $instance->addLoader('relative_resize', $this->get('liip_imagine.filter.loader.relative_resize'));
        $instance->addLoader('resize', $this->get('liip_imagine.filter.loader.resize'));
        $instance->addLoader('thumbnail', $this->get('liip_imagine.filter.loader.thumbnail'));
        $instance->addLoader('crop', $this->get('liip_imagine.filter.loader.crop'));
        $instance->addLoader('grayscale', $this->get('liip_imagine.filter.loader.grayscale'));
        $instance->addLoader('paste', $this->get('liip_imagine.filter.loader.paste'));
        $instance->addLoader('watermark', $this->get('liip_imagine.filter.loader.watermark'));
        $instance->addLoader('background', $this->get('liip_imagine.filter.loader.background'));
        $instance->addLoader('strip', $this->get('liip_imagine.filter.loader.strip'));
        $instance->addLoader('scale', $this->get('liip_imagine.filter.loader.scale'));
        $instance->addLoader('upscale', $this->get('liip_imagine.filter.loader.upscale'));
        $instance->addLoader('downscale', $this->get('liip_imagine.filter.loader.downscale'));
        $instance->addLoader('auto_rotate', $this->get('liip_imagine.filter.loader.auto_rotate'));
        $instance->addLoader('rotate', $this->get('liip_imagine.filter.loader.rotate'));
        $instance->addLoader('flip', $this->get('liip_imagine.filter.loader.flip'));
        $instance->addLoader('interlace', $this->get('liip_imagine.filter.loader.interlace'));
        $instance->addPostProcessor('jpegoptim', $this->get('liip_imagine.filter.post_processor.jpegoptim'));
        $instance->addPostProcessor('optipng', $this->get('liip_imagine.filter.post_processor.optipng'));
        $instance->addPostProcessor('pngquant', $this->get('liip_imagine.filter.post_processor.pngquant'));
        $instance->addPostProcessor('mozjpeg', $this->get('liip_imagine.filter.post_processor.mozjpeg'));

        return $instance;
    }

    /**
     * Gets the 'liip_imagine.filter.post_processor.jpegoptim' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor A Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor instance
     */
    protected function getLiipImagine_Filter_PostProcessor_JpegoptimService()
    {
        return $this->services['liip_imagine.filter.post_processor.jpegoptim'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor('/usr/bin/jpegoptim', true, NULL, true, NULL);
    }

    /**
     * Gets the 'liip_imagine.filter.post_processor.mozjpeg' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor A Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor instance
     */
    protected function getLiipImagine_Filter_PostProcessor_MozjpegService()
    {
        return $this->services['liip_imagine.filter.post_processor.mozjpeg'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor('/opt/mozjpeg/bin/cjpeg');
    }

    /**
     * Gets the 'liip_imagine.filter.post_processor.optipng' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor A Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor instance
     */
    protected function getLiipImagine_Filter_PostProcessor_OptipngService()
    {
        return $this->services['liip_imagine.filter.post_processor.optipng'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor('/usr/bin/optipng', 7, true, NULL);
    }

    /**
     * Gets the 'liip_imagine.filter.post_processor.pngquant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor A Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor instance
     */
    protected function getLiipImagine_Filter_PostProcessor_PngquantService()
    {
        return $this->services['liip_imagine.filter.post_processor.pngquant'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor('/usr/bin/pngquant');
    }

    /**
     * Gets the 'liip_imagine.form.type.image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Form\Type\ImageType A Liip\ImagineBundle\Form\Type\ImageType instance
     */
    protected function getLiipImagine_Form_Type_ImageService()
    {
        return $this->services['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType();
    }

    /**
     * Gets the 'liip_imagine.mime_type_guesser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface A Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface instance
     */
    protected function getLiipImagine_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.mime_type_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser::getInstance();
    }

    /**
     * Gets the 'liip_imagine.templating.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Liip\ImagineBundle\Templating\Helper\ImagineHelper A Liip\ImagineBundle\Templating\Helper\ImagineHelper instance
     */
    protected function getLiipImagine_Templating_HelperService()
    {
        return $this->services['liip_imagine.templating.helper'] = new \Liip\ImagineBundle\Templating\Helper\ImagineHelper($this->get('liip_imagine.cache.manager'));
    }

    /**
     * Gets the 'locale_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener A Symfony\Component\HttpKernel\EventListener\LocaleListener instance
     */
    protected function getLocaleListenerService()
    {
        return $this->services['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener($this->get('request_stack'), 'en_US', $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.activation_strategy.not_found' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy A Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy instance
     */
    protected function getMonolog_ActivationStrategy_NotFoundService()
    {
        return $this->services['monolog.activation_strategy.not_found'] = new \Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy();
    }

    /**
     * Gets the 'monolog.handler.fingers_crossed.error_level_activation_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy A Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy instance
     */
    protected function getMonolog_Handler_FingersCrossed_ErrorLevelActivationStrategyService()
    {
        return $this->services['monolog.handler.fingers_crossed.error_level_activation_strategy'] = new \Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy();
    }

    /**
     * Gets the 'monolog.handler.null_internal' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Handler\NullHandler A Monolog\Handler\NullHandler instance
     */
    protected function getMonolog_Handler_NullInternalService()
    {
        return $this->services['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler();
    }

    /**
     * Gets the 'monolog.logger.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_CacheService()
    {
        $this->services['monolog.logger.cache'] = $instance = new \Symfony\Bridge\Monolog\Logger('cache');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.doctrine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.event' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_EventService()
    {
        $this->services['monolog.logger.event'] = $instance = new \Symfony\Bridge\Monolog\Logger('event');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.payum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_PayumService()
    {
        $this->services['monolog.logger.payum'] = $instance = new \Symfony\Bridge\Monolog\Logger('payum');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_PhpService()
    {
        $this->services['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_TemplatingService()
    {
        $this->services['monolog.logger.templating'] = $instance = new \Symfony\Bridge\Monolog\Logger('templating');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'monolog.logger.translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Logger A Symfony\Bridge\Monolog\Logger instance
     */
    protected function getMonolog_Logger_TranslationService()
    {
        $this->services['monolog.logger.translation'] = $instance = new \Symfony\Bridge\Monolog\Logger('translation');

        $instance->pushHandler($this->get('monolog.handler.null_internal'));

        return $instance;
    }

    /**
     * Gets the 'pagerfanta.convert_not_valid_current_page_to_not_found_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener A WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener instance
     */
    protected function getPagerfanta_ConvertNotValidCurrentPageToNotFoundListenerService()
    {
        return $this->services['pagerfanta.convert_not_valid_current_page_to_not_found_listener'] = new \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener();
    }

    /**
     * Gets the 'pagerfanta.convert_not_valid_max_per_page_to_not_found_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener A WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener instance
     */
    protected function getPagerfanta_ConvertNotValidMaxPerPageToNotFoundListenerService()
    {
        return $this->services['pagerfanta.convert_not_valid_max_per_page_to_not_found_listener'] = new \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener();
    }

    /**
     * Gets the 'payum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Payum A Payum\Core\Payum instance
     */
    protected function getPayumService()
    {
        return $this->services['payum'] = $this->get('payum.builder')->getPayum();
    }

    /**
     * Gets the 'payum.action.get_http_request' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\Action\GetHttpRequestAction A Payum\Core\Bridge\Symfony\Action\GetHttpRequestAction instance
     */
    protected function getPayum_Action_GetHttpRequestService()
    {
        $this->services['payum.action.get_http_request'] = $instance = new \Payum\Core\Bridge\Symfony\Action\GetHttpRequestAction();

        $instance->setHttpRequest(NULL);
        $instance->setHttpRequestStack($this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        return $instance;
    }

    /**
     * Gets the 'payum.action.obtain_credit_card_builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\Builder\ObtainCreditCardActionBuilder A Payum\Core\Bridge\Symfony\Builder\ObtainCreditCardActionBuilder instance
     */
    protected function getPayum_Action_ObtainCreditCardBuilderService()
    {
        return $this->services['payum.action.obtain_credit_card_builder'] = new \Payum\Core\Bridge\Symfony\Builder\ObtainCreditCardActionBuilder($this->get('form.factory'), $this->get('request_stack'));
    }

    /**
     * Gets the 'payum.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\PayumBuilder A Payum\Core\PayumBuilder instance
     */
    protected function getPayum_BuilderService()
    {
        $a = new \Payum\Core\Bridge\Symfony\Builder\CoreGatewayFactoryBuilder();
        $a->setContainer($this);

        $this->services['payum.builder'] = $instance = new \Payum\Core\PayumBuilder();

        $instance->setMainRegistry($this->get('payum.static_registry'));
        $instance->setHttpRequestVerifier(new \Payum\Core\Bridge\Symfony\Builder\HttpRequestVerifierBuilder());
        $instance->setTokenFactory(new \Payum\Core\Bridge\Symfony\Builder\TokenFactoryBuilder($this->get('router')));
        $instance->setTokenStorage($this->get('payum.security.token_storage'));
        $instance->setGenericTokenFactoryPaths(array('capture' => 'payum_capture_do', 'notify' => 'payum_notify_do', 'authorize' => 'payum_authorize_do', 'refund' => 'payum_refund_do', 'cancel' => 'payum_cancel_do', 'payout' => 'payum_payout_do'));
        $instance->setCoreGatewayFactory($a);
        $instance->addCoreGatewayFactoryConfig(array('payum.template.layout' => '@PayumCore\\layout.html.twig', 'payum.template.obtain_credit_card' => '@PayumSymfonyBridge\\obtainCreditCard.html.twig', 'payum.paths' => array('PayumSymfonyBridge' => ($this->targetDirs[5].'/vendor/payum/payum/src/Payum/Core/Bridge/Symfony/Resources/views')), 'payum.action.get_http_request' => $this->get('payum.action.get_http_request'), 'payum.action.obtain_credit_card' => $this->get('payum.action.obtain_credit_card_builder')));
        $instance->addGateway('offline', array('factory' => 'offline'));
        $instance->setGatewayConfigStorage($this->get('payum.dynamic_gateways.config_storage'));
        $instance->addCoreGatewayFactoryConfig(array('twig.env' => '@twig'));
        $instance->addCoreGatewayFactoryConfig(array('payum.action.sylius.capture_payment' => '@sylius.payum_action.capture_payment', 'payum.action.sylius.payum_action.execute_same_request_with_payment_details' => '@sylius.payum_action.execute_same_request_with_payment_details', 'payum.action.sylius.resolve_next_route' => '@sylius.payum_action.resolve_next_route', 'payum.extension.psr_logger' => '@payum.extension.logger', 'payum.extension.log_executed_actions' => '@payum.extension.log_executed_actions', 'payum.extension.profile_collector' => '@payum.profiler.payum_collector', 'payum.prepend_extensions' => array(0 => 'payum.extension.profile_collector', 1 => 'payum.extension.sylius.payum_extension.update_payment_state'), 'payum.extension.payum.extension.storage.sylius_component_core_model_order' => '@payum.extension.storage.sylius_component_core_model_order', 'payum.extension.payum.extension.storage.sylius_component_core_model_payment' => '@payum.extension.storage.sylius_component_core_model_payment', 'payum.extension.sylius.payum_extension.update_payment_state' => '@sylius.payum_extension.update_payment_state'));
        $instance->addGatewayFactoryConfig('paypal_express_checkout', array('payum.action.sylius.paypal_express_checkout.convert_payment' => '@sylius.payum_action.paypal_express_checkout.convert_payment'));
        $instance->addGatewayFactoryConfig('offline', array('payum.action.sylius.offline.convert_payment' => '@sylius.payum_action.offline.convert_payment', 'payum.action.sylius.offline.status' => '@sylus.payum_action.offline.status', 'payum.action.sylius.offline.resolve_next_route' => '@sylius.payum_action.offline.resolve_next_route'));

        return $instance;
    }

    /**
     * Gets the 'payum.converter.reply_to_http_response' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\ReplyToSymfonyResponseConverter A Payum\Core\Bridge\Symfony\ReplyToSymfonyResponseConverter instance
     */
    protected function getPayum_Converter_ReplyToHttpResponseService()
    {
        return $this->services['payum.converter.reply_to_http_response'] = new \Payum\Core\Bridge\Symfony\ReplyToSymfonyResponseConverter();
    }

    /**
     * Gets the 'payum.dynamic_gateways.config_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage A Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage instance
     */
    protected function getPayum_DynamicGateways_ConfigStorageService()
    {
        return $this->services['payum.dynamic_gateways.config_storage'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig');
    }

    /**
     * Gets the 'payum.dynamic_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Registry\DynamicRegistry A Payum\Core\Registry\DynamicRegistry instance
     */
    protected function getPayum_DynamicRegistryService()
    {
        return $this->services['payum.dynamic_registry'] = new \Payum\Core\Registry\DynamicRegistry($this->get('payum.dynamic_gateways.config_storage'), $this->get('payum.static_registry'));
    }

    /**
     * Gets the 'payum.extension.log_executed_actions' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Psr\Log\LogExecutedActionsExtension A Payum\Core\Bridge\Psr\Log\LogExecutedActionsExtension instance
     */
    protected function getPayum_Extension_LogExecutedActionsService()
    {
        return $this->services['payum.extension.log_executed_actions'] = new \Payum\Core\Bridge\Psr\Log\LogExecutedActionsExtension($this->get('monolog.logger.payum', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'payum.extension.logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Psr\Log\LoggerExtension A Payum\Core\Bridge\Psr\Log\LoggerExtension instance
     */
    protected function getPayum_Extension_LoggerService()
    {
        return $this->services['payum.extension.logger'] = new \Payum\Core\Bridge\Psr\Log\LoggerExtension($this->get('monolog.logger.payum', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'payum.extension.storage.sylius_component_core_model_order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Extension\StorageExtension A Payum\Core\Extension\StorageExtension instance
     */
    protected function getPayum_Extension_Storage_SyliusComponentCoreModelOrderService()
    {
        return $this->services['payum.extension.storage.sylius_component_core_model_order'] = new \Payum\Core\Extension\StorageExtension($this->get('payum.storage.sylius_component_core_model_order'));
    }

    /**
     * Gets the 'payum.extension.storage.sylius_component_core_model_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Extension\StorageExtension A Payum\Core\Extension\StorageExtension instance
     */
    protected function getPayum_Extension_Storage_SyliusComponentCoreModelPaymentService()
    {
        return $this->services['payum.extension.storage.sylius_component_core_model_payment'] = new \Payum\Core\Extension\StorageExtension($this->get('payum.storage.sylius_component_core_model_payment'));
    }

    /**
     * Gets the 'payum.form.extension.gateway_factories_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Bundle\PayumBundle\Form\Extension\GatewayFactoriesChoiceTypeExtension A Payum\Bundle\PayumBundle\Form\Extension\GatewayFactoriesChoiceTypeExtension instance
     */
    protected function getPayum_Form_Extension_GatewayFactoriesChoiceService()
    {
        return $this->services['payum.form.extension.gateway_factories_choice'] = new \Payum\Bundle\PayumBundle\Form\Extension\GatewayFactoriesChoiceTypeExtension($this->get('payum'));
    }

    /**
     * Gets the 'payum.form.type.credit_card' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\CreditCardType A Payum\Core\Bridge\Symfony\Form\Type\CreditCardType instance
     */
    protected function getPayum_Form_Type_CreditCardService()
    {
        return $this->services['payum.form.type.credit_card'] = new \Payum\Core\Bridge\Symfony\Form\Type\CreditCardType();
    }

    /**
     * Gets the 'payum.form.type.credit_card_expiration_date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\CreditCardExpirationDateType A Payum\Core\Bridge\Symfony\Form\Type\CreditCardExpirationDateType instance
     */
    protected function getPayum_Form_Type_CreditCardExpirationDateService()
    {
        return $this->services['payum.form.type.credit_card_expiration_date'] = new \Payum\Core\Bridge\Symfony\Form\Type\CreditCardExpirationDateType();
    }

    /**
     * Gets the 'payum.form.type.gateway_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\GatewayConfigType A Payum\Core\Bridge\Symfony\Form\Type\GatewayConfigType instance
     */
    protected function getPayum_Form_Type_GatewayConfigService()
    {
        return $this->services['payum.form.type.gateway_config'] = new \Payum\Core\Bridge\Symfony\Form\Type\GatewayConfigType($this->get('payum'));
    }

    /**
     * Gets the 'payum.form.type.gateway_factories_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\Form\Type\GatewayFactoriesChoiceType A Payum\Core\Bridge\Symfony\Form\Type\GatewayFactoriesChoiceType instance
     */
    protected function getPayum_Form_Type_GatewayFactoriesChoiceService()
    {
        return $this->services['payum.form.type.gateway_factories_choice'] = new \Payum\Core\Bridge\Symfony\Form\Type\GatewayFactoriesChoiceType(array());
    }

    /**
     * Gets the 'payum.listener.reply_to_http_response' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Bundle\PayumBundle\EventListener\ReplyToHttpResponseListener A Payum\Bundle\PayumBundle\EventListener\ReplyToHttpResponseListener instance
     */
    protected function getPayum_Listener_ReplyToHttpResponseService()
    {
        return $this->services['payum.listener.reply_to_http_response'] = new \Payum\Bundle\PayumBundle\EventListener\ReplyToHttpResponseListener($this->get('payum.converter.reply_to_http_response'));
    }

    /**
     * Gets the 'payum.profiler.payum_collector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Bundle\PayumBundle\Profiler\PayumCollector A Payum\Bundle\PayumBundle\Profiler\PayumCollector instance
     */
    protected function getPayum_Profiler_PayumCollectorService()
    {
        return $this->services['payum.profiler.payum_collector'] = new \Payum\Bundle\PayumBundle\Profiler\PayumCollector();
    }

    /**
     * Gets the 'payum.security.token_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage A Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage instance
     */
    protected function getPayum_Security_TokenStorageService()
    {
        return $this->services['payum.security.token_storage'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken');
    }

    /**
     * Gets the 'payum.static_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Symfony\ContainerAwareRegistry A Payum\Core\Bridge\Symfony\ContainerAwareRegistry instance
     */
    protected function getPayum_StaticRegistryService()
    {
        $this->services['payum.static_registry'] = $instance = new \Payum\Core\Bridge\Symfony\ContainerAwareRegistry(array(), array('Sylius\\Component\\Core\\Model\\Order' => 'payum.storage.sylius_component_core_model_order', 'Sylius\\Component\\Core\\Model\\Payment' => 'payum.storage.sylius_component_core_model_payment'), array());

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'payum.storage.sylius_bundle_payumbundle_model_gatewayconfig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage A Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage instance
     */
    protected function getPayum_Storage_SyliusBundlePayumbundleModelGatewayconfigService()
    {
        return $this->services['payum.storage.sylius_bundle_payumbundle_model_gatewayconfig'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig');
    }

    /**
     * Gets the 'payum.storage.sylius_bundle_payumbundle_model_paymentsecuritytoken' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage A Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage instance
     */
    protected function getPayum_Storage_SyliusBundlePayumbundleModelPaymentsecuritytokenService()
    {
        return $this->services['payum.storage.sylius_bundle_payumbundle_model_paymentsecuritytoken'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken');
    }

    /**
     * Gets the 'payum.storage.sylius_component_core_model_order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage A Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage instance
     */
    protected function getPayum_Storage_SyliusComponentCoreModelOrderService()
    {
        return $this->services['payum.storage.sylius_component_core_model_order'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Component\\Core\\Model\\Order');
    }

    /**
     * Gets the 'payum.storage.sylius_component_core_model_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage A Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage instance
     */
    protected function getPayum_Storage_SyliusComponentCoreModelPaymentService()
    {
        return $this->services['payum.storage.sylius_component_core_model_payment'] = new \Payum\Core\Bridge\Doctrine\Storage\DoctrineStorage($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Component\\Core\\Model\\Payment');
    }

    /**
     * Gets the 'property_accessor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\PropertyAccess\PropertyAccessor A Symfony\Component\PropertyAccess\PropertyAccessor instance
     */
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false, new \Symfony\Component\Cache\Adapter\ArrayAdapter(0, false));
    }

    /**
     * Gets the 'request_stack' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack A Symfony\Component\HttpFoundation\RequestStack instance
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the 'response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ResponseListener A Symfony\Component\HttpKernel\EventListener\ResponseListener instance
     */
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }

    /**
     * Gets the 'router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router A Symfony\Bundle\FrameworkBundle\Routing\Router instance
     */
    protected function getRouterService()
    {
        $this->services['router'] = $instance = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, ($this->targetDirs[3].'/app/config/routing.yml'), array('cache_dir' => __DIR__, 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'appTestDebugProjectContainerUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'appTestDebugProjectContainerUrlMatcher', 'strict_requirements' => true), ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}, $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->setConfigCacheFactory($this->get('config_cache_factory'));

        return $instance;
    }

    /**
     * Gets the 'router_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener A Symfony\Component\HttpKernel\EventListener\RouterListener instance
     */
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($this->get('router'), $this->get('request_stack'), ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}, $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'routing.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader A Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader instance
     */
    protected function getRouting_LoaderService()
    {
        $a = ${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->getControllerNameConverterService()) && false ?: '_'};
        $b = $this->get('file_locator');
        $c = $this->get('annotation_reader');

        $d = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();

        $e = new \Symfony\Component\Config\Loader\LoaderResolver();
        $e->addLoader(new \Sylius\Bundle\ResourceBundle\Routing\ResourceLoader(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}, new \Sylius\Bundle\ResourceBundle\Routing\RouteFactory()));
        $e->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
        $e->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
        $e->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
        $e->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
        $e->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
        $e->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($b, $d));
        $e->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $b, $a, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($c, ${($_ = isset($this->services['fos_rest.request.param_fetcher.reader']) ? $this->services['fos_rest.request.param_fetcher.reader'] : $this->getFosRest_Request_ParamFetcher_ReaderService()) && false ?: '_'}, $this->get('fos_rest.inflector'), true, array('json' => false, 'xml' => false, 'html' => true)), $c), NULL));
        $e->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($b, $d, true, array('json' => false, 'xml' => false, 'html' => true), NULL));
        $e->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($b, $d, true, array('json' => false, 'xml' => false, 'html' => true), NULL));

        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, $e);
    }

    /**
     * Gets the 'security.authentication.guard_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Guard\GuardAuthenticatorHandler A Symfony\Component\Security\Guard\GuardAuthenticatorHandler instance
     */
    protected function getSecurity_Authentication_GuardHandlerService()
    {
        return $this->services['security.authentication.guard_handler'] = new \Symfony\Component\Security\Guard\GuardAuthenticatorHandler($this->get('security.token_storage'), $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.authentication_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticationUtils A Symfony\Component\Security\Http\Authentication\AuthenticationUtils instance
     */
    protected function getSecurity_AuthenticationUtilsService()
    {
        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils($this->get('request_stack'));
    }

    /**
     * Gets the 'security.authorization_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker A Symfony\Component\Security\Core\Authorization\AuthorizationChecker instance
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker($this->get('security.token_storage'), ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, false);
    }

    /**
     * Gets the 'security.csrf.token_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Csrf\CsrfTokenManager A Symfony\Component\Security\Csrf\CsrfTokenManager instance
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage($this->get('session')));
    }

    /**
     * Gets the 'security.encoder_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\EncoderFactory A Symfony\Component\Security\Core\Encoder\EncoderFactory instance
     */
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array('Sylius\\Component\\User\\Model\\UserInterface' => array('algorithm' => 'sha512', 'hash_algorithm' => 'sha512', 'key_length' => 40, 'ignore_case' => false, 'encode_as_base64' => true, 'iterations' => 5000, 'cost' => 13)));
    }

    /**
     * Gets the 'security.firewall' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\Firewall A Symfony\Component\Security\Http\Firewall instance
     */
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Component\Security\Http\Firewall(${($_ = isset($this->services['security.firewall.map']) ? $this->services['security.firewall.map'] : $this->getSecurity_Firewall_MapService()) && false ?: '_'}, $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'security.firewall.map.context.admin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_AdminService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('sylius.admin_user_provider.email_or_name_based');
        $c = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $e = ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'};
        $f = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'};
        $g = $this->get('http_kernel');
        $h = ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'};

        $i = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $f, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($f, 'sylius_admin_login'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => 'sylius_admin_logout'));
        $i->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());

        $j = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($f, array());
        $j->setOptions(array('login_path' => 'sylius_admin_login', 'default_target_path' => 'sylius_admin_dashboard', 'use_referer' => true, 'always_use_default_target_path' => false, 'target_path_parameter' => '_target_path'));
        $j->setProviderKey('admin');

        $k = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($g, $f, array(), $c);
        $k->setOptions(array('login_path' => 'sylius_admin_login', 'failure_path' => 'sylius_admin_login', 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'));

        return $this->services['security.firewall.map.context.admin'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $b, 1 => $this->get('sylius.shop_user_provider.email_or_name_based')), 'admin', $c, $d, $e), 2 => $i, 3 => new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($a, $h, ${($_ = isset($this->services['security.authentication.session_strategy']) ? $this->services['security.authentication.session_strategy'] : $this->getSecurity_Authentication_SessionStrategyService()) && false ?: '_'}, $f, 'admin', $j, $k, array('check_path' => 'sylius_admin_login_check', 'use_forward' => false, 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true), $c, $d, NULL), 4 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '593f9ae38cda70.35503236', $c, $h), 5 => new \Symfony\Component\Security\Http\Firewall\SwitchUserListener($a, $b, ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, 'admin', ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, $c, '_switch_user', 'ROLE_ALLOWED_TO_SWITCH', $d), 6 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $e, $f, 'admin', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($g, $f, 'sylius_admin_login', false), NULL, NULL, $c, false), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('admin', 'security.user_checker', 'security.request_matcher.42a576fbdf414a60171305f7a3fe530aab1ddeb3f7dee4c9a7cfc638a4b520e164202adf', true, false, 'sylius.admin_user_provider.email_or_name_based', 'admin', 'security.authentication.form_entry_point.admin', NULL, NULL, array(0 => 'logout', 1 => 'switch_user', 2 => 'form_login', 3 => 'anonymous')));
    }

    /**
     * Gets the 'security.firewall.map.context.dev' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('dev', 'security.user_checker', 'security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d', false, '', '', '', '', '', '', array()));
    }

    /**
     * Gets the 'security.firewall.map.context.shop' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallContext A Symfony\Bundle\SecurityBundle\Security\FirewallContext instance
     */
    protected function getSecurity_Firewall_Map_Context_ShopService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('sylius.admin_user_provider.email_or_name_based');
        $c = $this->get('sylius.shop_user_provider.email_or_name_based');
        $d = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $e = $this->get('debug.event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $f = ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'};
        $g = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'};
        $h = $this->get('http_kernel');
        $i = ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'};
        $j = ${($_ = isset($this->services['security.authentication.session_strategy']) ? $this->services['security.authentication.session_strategy'] : $this->getSecurity_Authentication_SessionStrategyService()) && false ?: '_'};

        $k = new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(array(0 => $c), 'Three can keep a secret, if two of them are dead.', 'shop', array('name' => 'APP_REMEMBER_ME', 'lifetime' => 31536000, 'always_remember_me' => true, 'remember_me_parameter' => '_remember_me', 'path' => '/', 'domain' => NULL, 'secure' => false, 'httponly' => true), $d);

        $l = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $g, $this->get('sylius.handler.shop_user_logout'), array('csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => 'sylius_shop_logout'));
        $l->addHandler($k);

        $m = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($a, $i, $j, $g, 'shop', new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler(new \Sylius\Bundle\UserBundle\Authentication\AuthenticationSuccessHandler($g, array()), array('login_path' => 'sylius_shop_login', 'default_target_path' => 'sylius_shop_homepage', 'use_referer' => true, 'always_use_default_target_path' => false, 'target_path_parameter' => '_target_path'), 'shop'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler(new \Sylius\Bundle\UserBundle\Authentication\AuthenticationFailureHandler($h, $g, array(), $d), array('login_path' => 'sylius_shop_login', 'failure_path' => 'sylius_shop_login', 'failure_forward' => false, 'failure_path_parameter' => '_failure_path')), array('check_path' => 'sylius_shop_login_check', 'use_forward' => false, 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true), $d, $e, NULL);
        $m->setRememberMeServices($k);

        return $this->services['security.firewall.map.context.shop'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->getSecurity_ChannelListenerService()) && false ?: '_'}, 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $b, 1 => $c), 'shop', $d, $e, $f), 2 => $l, 3 => $m, 4 => new \Symfony\Component\Security\Http\Firewall\RememberMeListener($a, $k, $i, $d, $e, true, $j), 5 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '593f9ae38cda70.35503236', $d, $i), 6 => new \Symfony\Component\Security\Http\Firewall\SwitchUserListener($a, $b, ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, 'shop', ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, $d, '_switch_user', 'ROLE_ALLOWED_TO_SWITCH', $e), 7 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->getSecurity_AccessListenerService()) && false ?: '_'}), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $f, $g, 'shop', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($h, $g, 'sylius_shop_login', false), NULL, NULL, $d, false), new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('shop', 'security.user_checker', 'security.request_matcher.b3056f0f803347e847d96183bd153ca130546888f46f3dba5936b2fe1f3c4a55cc4eac87', true, false, 'sylius.admin_user_provider.email_or_name_based', 'shop', 'security.authentication.form_entry_point.shop', NULL, NULL, array(0 => 'logout', 1 => 'switch_user', 2 => 'form_login', 3 => 'remember_me', 4 => 'anonymous')));
    }

    /**
     * Gets the 'security.password_encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder A Symfony\Component\Security\Core\Encoder\UserPasswordEncoder instance
     */
    protected function getSecurity_PasswordEncoderService()
    {
        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder($this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'security.rememberme.response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Http\RememberMe\ResponseListener A Symfony\Component\Security\Http\RememberMe\ResponseListener instance
     */
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }

    /**
     * Gets the 'security.token_storage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage A Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage instance
     */
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }

    /**
     * Gets the 'security.validator.user_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator A Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator instance
     */
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator($this->get('security.token_storage'), $this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'sensio_distribution.security_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \SensioLabs\Security\SecurityChecker A SensioLabs\Security\SecurityChecker instance
     */
    protected function getSensioDistribution_SecurityCheckerService()
    {
        return $this->services['sensio_distribution.security_checker'] = new \SensioLabs\Security\SecurityChecker();
    }

    /**
     * Gets the 'sensio_distribution.security_checker.command' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \SensioLabs\Security\Command\SecurityCheckerCommand A SensioLabs\Security\Command\SecurityCheckerCommand instance
     */
    protected function getSensioDistribution_SecurityChecker_CommandService()
    {
        return $this->services['sensio_distribution.security_checker.command'] = new \SensioLabs\Security\Command\SecurityCheckerCommand($this->get('sensio_distribution.security_checker'));
    }

    /**
     * Gets the 'service_container' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @throws RuntimeException always since this service is expected to be injected dynamically
     */
    protected function getServiceContainerService()
    {
        throw new RuntimeException('You have requested a synthetic service ("service_container"). The DIC does not know how to construct this service.');
    }

    /**
     * Gets the 'session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session A Symfony\Component\HttpFoundation\Session\Session instance
     */
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session($this->get('session.storage.native'), new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
    }

    /**
     * Gets the 'session.save_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SaveSessionListener A Symfony\Component\HttpKernel\EventListener\SaveSessionListener instance
     */
    protected function getSession_SaveListenerService()
    {
        return $this->services['session.save_listener'] = new \Symfony\Component\HttpKernel\EventListener\SaveSessionListener();
    }

    /**
     * Gets the 'session.storage.filesystem' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage instance
     */
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage((__DIR__.'/sessions'), 'MOCKSESSID', ${($_ = isset($this->services['session.storage.metadata_bag']) ? $this->services['session.storage.metadata_bag'] : $this->getSession_Storage_MetadataBagService()) && false ?: '_'});
    }

    /**
     * Gets the 'session.storage.native' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage instance
     */
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('cookie_httponly' => true, 'gc_probability' => 1), NULL, ${($_ = isset($this->services['session.storage.metadata_bag']) ? $this->services['session.storage.metadata_bag'] : $this->getSession_Storage_MetadataBagService()) && false ?: '_'});
    }

    /**
     * Gets the 'session.storage.php_bridge' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage A Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage instance
     */
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage(NULL, ${($_ = isset($this->services['session.storage.metadata_bag']) ? $this->services['session.storage.metadata_bag'] : $this->getSession_Storage_MetadataBagService()) && false ?: '_'});
    }

    /**
     * Gets the 'session_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener A Symfony\Bundle\FrameworkBundle\EventListener\SessionListener instance
     */
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener($this);
    }

    /**
     * Gets the 'sm.callback.cascade_transition' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \SM\Callback\CascadeTransitionCallback A SM\Callback\CascadeTransitionCallback instance
     */
    protected function getSm_Callback_CascadeTransitionService()
    {
        return $this->services['sm.callback.cascade_transition'] = new \SM\Callback\CascadeTransitionCallback($this->get('sm.factory'));
    }

    /**
     * Gets the 'sm.callback_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory A winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory instance
     */
    protected function getSm_CallbackFactoryService()
    {
        return $this->services['sm.callback_factory'] = new \winzou\Bundle\StateMachineBundle\Callback\ContainerAwareCallbackFactory('winzou\\Bundle\\StateMachineBundle\\Callback\\ContainerAwareCallback', $this);
    }

    /**
     * Gets the 'sm.factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \SM\Factory\Factory A SM\Factory\Factory instance
     */
    protected function getSm_FactoryService()
    {
        return $this->services['sm.factory'] = new \SM\Factory\Factory(array('sylius_order_checkout' => array('class' => 'Sylius\\Component\\Core\\Model\\Order', 'property_path' => 'checkoutState', 'graph' => 'sylius_order_checkout', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'cart', 1 => 'addressed', 2 => 'shipping_selected', 3 => 'shipping_skipped', 4 => 'payment_skipped', 5 => 'payment_selected', 6 => 'completed'), 'transitions' => array('address' => array('from' => array(0 => 'cart', 1 => 'addressed', 2 => 'shipping_selected', 3 => 'shipping_skipped', 4 => 'payment_selected', 5 => 'payment_skipped'), 'to' => 'addressed'), 'skip_shipping' => array('from' => array(0 => 'addressed'), 'to' => 'shipping_skipped'), 'select_shipping' => array('from' => array(0 => 'addressed', 1 => 'shipping_selected', 2 => 'payment_selected', 3 => 'payment_skipped'), 'to' => 'shipping_selected'), 'skip_payment' => array('from' => array(0 => 'shipping_selected', 1 => 'shipping_skipped'), 'to' => 'payment_skipped'), 'select_payment' => array('from' => array(0 => 'payment_selected', 1 => 'shipping_skipped', 2 => 'shipping_selected'), 'to' => 'payment_selected'), 'complete' => array('from' => array(0 => 'payment_selected', 1 => 'payment_skipped'), 'to' => 'completed')), 'callbacks' => array('after' => array('sylius_process_cart' => array('on' => array(0 => 'select_shipping', 1 => 'address', 2 => 'select_payment', 3 => 'skip_shipping', 4 => 'skip_payment'), 'do' => array(0 => '@sylius.order_processing.order_processor', 1 => 'process'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_create_order' => array('on' => array(0 => 'complete'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object', 1 => 'event', 2 => '\'create\'', 3 => '\'sylius_order\''), 'disabled' => false, 'priority' => 0), 'sylius_save_checkout_completion_date' => array('on' => array(0 => 'complete'), 'do' => array(0 => 'object', 1 => 'completeCheckout'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_skip_shipping' => array('on' => array(0 => 'address'), 'do' => array(0 => '@sylius.state_resolver.order_checkout', 1 => 'resolve'), 'args' => array(0 => 'object'), 'priority' => 1, 'disabled' => false), 'sylius_skip_payment' => array('on' => array(0 => 'select_shipping'), 'do' => array(0 => '@sylius.state_resolver.order_checkout', 1 => 'resolve'), 'args' => array(0 => 'object'), 'priority' => 1, 'disabled' => false)), 'guard' => array(), 'before' => array())), 'sylius_order_shipping' => array('class' => 'Sylius\\Component\\Core\\Model\\Order', 'property_path' => 'shippingState', 'graph' => 'sylius_order_shipping', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'cart', 1 => 'ready', 2 => 'cancelled', 3 => 'partially_shipped', 4 => 'shipped'), 'transitions' => array('request_shipping' => array('from' => array(0 => 'cart'), 'to' => 'ready'), 'cancel' => array('from' => array(0 => 'ready'), 'to' => 'cancelled'), 'partially_ship' => array('from' => array(0 => 'ready'), 'to' => 'partially_shipped'), 'ship' => array('from' => array(0 => 'ready', 1 => 'partially_shipped'), 'to' => 'shipped')), 'callbacks' => array('after' => array('sylius_resolve_state' => array('on' => array(0 => 'ship'), 'do' => array(0 => '@sylius.state_resolver.order', 1 => 'resolve'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0)), 'guard' => array(), 'before' => array())), 'sylius_order_payment' => array('class' => 'Sylius\\Component\\Core\\Model\\Order', 'property_path' => 'paymentState', 'graph' => 'sylius_order_payment', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'cart', 1 => 'awaiting_payment', 2 => 'partially_paid', 3 => 'cancelled', 4 => 'paid', 5 => 'partially_refunded', 6 => 'refunded'), 'transitions' => array('request_payment' => array('from' => array(0 => 'cart'), 'to' => 'awaiting_payment'), 'partially_pay' => array('from' => array(0 => 'awaiting_payment', 1 => 'partially_paid'), 'to' => 'partially_paid'), 'cancel' => array('from' => array(0 => 'awaiting_payment'), 'to' => 'cancelled'), 'pay' => array('from' => array(0 => 'awaiting_payment', 1 => 'partially_paid'), 'to' => 'paid'), 'partially_refund' => array('from' => array(0 => 'paid', 1 => 'partially_paid', 2 => 'partially_refunded'), 'to' => 'partially_refunded'), 'refund' => array('from' => array(0 => 'paid', 1 => 'partially_paid', 2 => 'partially_refunded'), 'to' => 'refunded')), 'callbacks' => array('after' => array('sylius_order_paid' => array('on' => array(0 => 'pay'), 'do' => array(0 => '@sylius.inventory.order_inventory_operator', 1 => 'sell'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_resolve_state' => array('on' => array(0 => 'pay'), 'do' => array(0 => '@sylius.state_resolver.order', 1 => 'resolve'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0)), 'guard' => array(), 'before' => array())), 'sylius_order' => array('class' => 'Sylius\\Component\\Core\\Model\\Order', 'property_path' => 'state', 'graph' => 'sylius_order', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'cart', 1 => 'new', 2 => 'cancelled', 3 => 'fulfilled'), 'transitions' => array('create' => array('from' => array(0 => 'cart'), 'to' => 'new'), 'cancel' => array('from' => array(0 => 'new'), 'to' => 'cancelled'), 'fulfill' => array('from' => array(0 => 'new'), 'to' => 'fulfilled')), 'callbacks' => array('before' => array('sylius_assign_number' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sylius.order_number_assigner', 1 => 'assignNumber'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_assign_token' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sylius.unique_id_based_order_token_assigner', 1 => 'assignTokenValue'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0)), 'after' => array('sylius_request_shipping' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object', 1 => 'event', 2 => '\'request_shipping\'', 3 => '\'sylius_order_shipping\''), 'disabled' => false, 'priority' => 0), 'sylius_request_payment' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object', 1 => 'event', 2 => '\'request_payment\'', 3 => '\'sylius_order_payment\''), 'disabled' => false, 'priority' => 0), 'sylius_create_payment' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object.getPayments()', 1 => 'event', 2 => '\'create\'', 3 => '\'sylius_payment\''), 'disabled' => false, 'priority' => 0), 'sylius_create_shipment' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object.getShipments()', 1 => 'event', 2 => '\'create\'', 3 => '\'sylius_shipment\''), 'disabled' => false, 'priority' => 0), 'sylius_hold_inventory' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sylius.inventory.order_inventory_operator', 1 => 'hold'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_increment_promotions_usages' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sylius.promotion_usage_modifier', 1 => 'increment'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_save_addresses_on_customer' => array('on' => array(0 => 'create'), 'do' => array(0 => '@sylius.customer_order_addresses_saver', 1 => 'saveAddresses'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_cancel_payment' => array('on' => array(0 => 'cancel'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object.getPayments()', 1 => 'event', 2 => '\'cancel\'', 3 => '\'sylius_payment\''), 'disabled' => false, 'priority' => 0), 'sylius_cancel_shipment' => array('on' => array(0 => 'cancel'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object.getShipments()', 1 => 'event', 2 => '\'cancel\'', 3 => '\'sylius_shipment\''), 'disabled' => false, 'priority' => 0), 'sylius_cancel_order_payment' => array('on' => array(0 => 'cancel'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object', 1 => 'event', 2 => '\'cancel\'', 3 => '\'sylius_order_payment\''), 'disabled' => false, 'priority' => 0), 'sylius_cancel_order_shipment' => array('on' => array(0 => 'cancel'), 'do' => array(0 => '@sm.callback.cascade_transition', 1 => 'apply'), 'args' => array(0 => 'object', 1 => 'event', 2 => '\'cancel\'', 3 => '\'sylius_order_shipping\''), 'disabled' => false, 'priority' => 0), 'sylis_cancel_order' => array('on' => array(0 => 'cancel'), 'do' => array(0 => '@sylius.inventory.order_inventory_operator', 1 => 'cancel'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0), 'sylius_decrement_promotions_usages' => array('on' => array(0 => 'cancel'), 'do' => array(0 => '@sylius.promotion_usage_modifier', 1 => 'decrement'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0)), 'guard' => array())), 'sylius_shipment' => array('class' => 'Sylius\\Component\\Core\\Model\\Shipment', 'property_path' => 'state', 'graph' => 'sylius_shipment', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'cart', 1 => 'ready', 2 => 'shipped', 3 => 'cancelled'), 'transitions' => array('create' => array('from' => array(0 => 'cart'), 'to' => 'ready'), 'ship' => array('from' => array(0 => 'ready'), 'to' => 'shipped'), 'cancel' => array('from' => array(0 => 'ready'), 'to' => 'cancelled')), 'callbacks' => array('after' => array('sylius_resolve_state' => array('on' => array(0 => 'ship'), 'do' => array(0 => '@sylius.state_resolver.order_shipping', 1 => 'resolve'), 'args' => array(0 => 'object.getOrder()'), 'disabled' => false, 'priority' => 0)), 'guard' => array(), 'before' => array())), 'sylius_payment' => array('class' => 'Sylius\\Component\\Core\\Model\\Payment', 'property_path' => 'state', 'graph' => 'sylius_payment', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'cart', 1 => 'new', 2 => 'processing', 3 => 'completed', 4 => 'failed', 5 => 'cancelled', 6 => 'refunded'), 'transitions' => array('create' => array('from' => array(0 => 'cart'), 'to' => 'new'), 'process' => array('from' => array(0 => 'new'), 'to' => 'processing'), 'complete' => array('from' => array(0 => 'new', 1 => 'processing'), 'to' => 'completed'), 'fail' => array('from' => array(0 => 'new', 1 => 'processing'), 'to' => 'failed'), 'cancel' => array('from' => array(0 => 'new', 1 => 'processing'), 'to' => 'cancelled'), 'refund' => array('from' => array(0 => 'completed'), 'to' => 'refunded')), 'callbacks' => array('after' => array('sylius_process_order' => array('on' => array(0 => 'fail', 1 => 'cancel'), 'do' => array(0 => '@sylius.order_processing.order_payment_processor.after_checkout', 1 => 'process'), 'args' => array(0 => 'object.getOrder()'), 'disabled' => false, 'priority' => 0), 'sylius_resolve_state' => array('on' => array(0 => 'complete', 1 => 'refund'), 'do' => array(0 => '@sylius.state_resolver.order_payment', 1 => 'resolve'), 'args' => array(0 => 'object.getOrder()'), 'disabled' => false, 'priority' => 0)), 'guard' => array(), 'before' => array())), 'sylius_product_review' => array('class' => 'Sylius\\Component\\Core\\Model\\ProductReview', 'property_path' => 'status', 'graph' => 'sylius_product_review', 'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine', 'states' => array(0 => 'new', 1 => 'accepted', 2 => 'rejected'), 'transitions' => array('accept' => array('from' => array(0 => 'new'), 'to' => 'accepted'), 'reject' => array('from' => array(0 => 'new'), 'to' => 'rejected')), 'callbacks' => array('after' => array('sylius_update_rating' => array('on' => array(0 => 'accept'), 'do' => array(0 => '@sylius.product_review.average_rating_updater', 1 => 'updateFromReview'), 'args' => array(0 => 'object'), 'disabled' => false, 'priority' => 0)), 'guard' => array(), 'before' => array()))), $this->get('debug.event_dispatcher'), $this->get('sm.callback_factory'));
    }

    /**
     * Gets the 'sonata.block.cache.handler.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Cache\HttpCacheHandler A Sonata\BlockBundle\Cache\HttpCacheHandler instance
     */
    protected function getSonata_Block_Cache_Handler_DefaultService()
    {
        return $this->services['sonata.block.cache.handler.default'] = new \Sonata\BlockBundle\Cache\HttpCacheHandler();
    }

    /**
     * Gets the 'sonata.block.cache.handler.noop' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Cache\NoopHttpCacheHandler A Sonata\BlockBundle\Cache\NoopHttpCacheHandler instance
     */
    protected function getSonata_Block_Cache_Handler_NoopService()
    {
        return $this->services['sonata.block.cache.handler.noop'] = new \Sonata\BlockBundle\Cache\NoopHttpCacheHandler();
    }

    /**
     * Gets the 'sonata.block.context_manager.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\BlockContextManager A Sonata\BlockBundle\Block\BlockContextManager instance
     */
    protected function getSonata_Block_ContextManager_DefaultService()
    {
        $this->services['sonata.block.context_manager.default'] = $instance = new \Sonata\BlockBundle\Block\BlockContextManager($this->get('sonata.block.loader.chain'), ${($_ = isset($this->services['sonata.block.manager']) ? $this->services['sonata.block.manager'] : $this->getSonata_Block_ManagerService()) && false ?: '_'}, array('by_type' => array('sonata.block.service.template' => 'sonata.cache.noop')), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->addSettingsByType('sonata.block.service.template', array('address' => NULL, 'addresses' => NULL, 'cart' => NULL, 'customer' => NULL, 'form' => NULL, 'order' => NULL, 'order_item' => NULL, 'orders' => NULL, 'product' => NULL, 'product_review' => NULL, 'product_reviews' => NULL, 'products' => NULL, 'resource' => NULL, 'resources' => NULL, 'statistics' => NULL, 'taxon' => NULL), true);

        return $instance;
    }

    /**
     * Gets the 'sonata.block.exception.filter.debug_only' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter A Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter instance
     */
    protected function getSonata_Block_Exception_Filter_DebugOnlyService()
    {
        return $this->services['sonata.block.exception.filter.debug_only'] = new \Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter(true);
    }

    /**
     * Gets the 'sonata.block.exception.filter.ignore_block_exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter A Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter instance
     */
    protected function getSonata_Block_Exception_Filter_IgnoreBlockExceptionService()
    {
        return $this->services['sonata.block.exception.filter.ignore_block_exception'] = new \Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter('Sonata\\BlockBundle\\Exception\\BlockExceptionInterface');
    }

    /**
     * Gets the 'sonata.block.exception.filter.keep_all' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Filter\KeepAllFilter A Sonata\BlockBundle\Exception\Filter\KeepAllFilter instance
     */
    protected function getSonata_Block_Exception_Filter_KeepAllService()
    {
        return $this->services['sonata.block.exception.filter.keep_all'] = new \Sonata\BlockBundle\Exception\Filter\KeepAllFilter();
    }

    /**
     * Gets the 'sonata.block.exception.filter.keep_none' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Filter\KeepNoneFilter A Sonata\BlockBundle\Exception\Filter\KeepNoneFilter instance
     */
    protected function getSonata_Block_Exception_Filter_KeepNoneService()
    {
        return $this->services['sonata.block.exception.filter.keep_none'] = new \Sonata\BlockBundle\Exception\Filter\KeepNoneFilter();
    }

    /**
     * Gets the 'sonata.block.exception.renderer.inline' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Renderer\InlineRenderer A Sonata\BlockBundle\Exception\Renderer\InlineRenderer instance
     */
    protected function getSonata_Block_Exception_Renderer_InlineService()
    {
        return $this->services['sonata.block.exception.renderer.inline'] = new \Sonata\BlockBundle\Exception\Renderer\InlineRenderer($this->get('templating'), 'SonataBlockBundle:Block:block_exception.html.twig');
    }

    /**
     * Gets the 'sonata.block.exception.renderer.inline_debug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer A Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer instance
     */
    protected function getSonata_Block_Exception_Renderer_InlineDebugService()
    {
        return $this->services['sonata.block.exception.renderer.inline_debug'] = new \Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer($this->get('templating'), 'SonataBlockBundle:Block:block_exception_debug.html.twig', true, true);
    }

    /**
     * Gets the 'sonata.block.exception.renderer.throw' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer A Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer instance
     */
    protected function getSonata_Block_Exception_Renderer_ThrowService()
    {
        return $this->services['sonata.block.exception.renderer.throw'] = new \Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer();
    }

    /**
     * Gets the 'sonata.block.exception.strategy.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Exception\Strategy\StrategyManager A Sonata\BlockBundle\Exception\Strategy\StrategyManager instance
     */
    protected function getSonata_Block_Exception_Strategy_ManagerService()
    {
        $this->services['sonata.block.exception.strategy.manager'] = $instance = new \Sonata\BlockBundle\Exception\Strategy\StrategyManager($this, array('debug_only' => 'sonata.block.exception.filter.debug_only', 'ignore_block_exception' => 'sonata.block.exception.filter.ignore_block_exception', 'keep_all' => 'sonata.block.exception.filter.keep_all', 'keep_none' => 'sonata.block.exception.filter.keep_none'), array('inline' => 'sonata.block.exception.renderer.inline', 'inline_debug' => 'sonata.block.exception.renderer.inline_debug', 'throw' => 'sonata.block.exception.renderer.throw'), array(), array());

        $instance->setDefaultFilter('debug_only');
        $instance->setDefaultRenderer('throw');

        return $instance;
    }

    /**
     * Gets the 'sonata.block.form.type.block' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Form\Type\ServiceListType A Sonata\BlockBundle\Form\Type\ServiceListType instance
     */
    protected function getSonata_Block_Form_Type_BlockService()
    {
        return $this->services['sonata.block.form.type.block'] = new \Sonata\BlockBundle\Form\Type\ServiceListType(${($_ = isset($this->services['sonata.block.manager']) ? $this->services['sonata.block.manager'] : $this->getSonata_Block_ManagerService()) && false ?: '_'});
    }

    /**
     * Gets the 'sonata.block.form.type.container_template' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Form\Type\ContainerTemplateType A Sonata\BlockBundle\Form\Type\ContainerTemplateType instance
     */
    protected function getSonata_Block_Form_Type_ContainerTemplateService()
    {
        return $this->services['sonata.block.form.type.container_template'] = new \Sonata\BlockBundle\Form\Type\ContainerTemplateType(array('SonataBlockBundle:Block:block_container.html.twig' => 'SonataBlockBundle default template'));
    }

    /**
     * Gets the 'sonata.block.loader.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\BlockLoaderChain A Sonata\BlockBundle\Block\BlockLoaderChain instance
     */
    protected function getSonata_Block_Loader_ChainService()
    {
        return $this->services['sonata.block.loader.chain'] = new \Sonata\BlockBundle\Block\BlockLoaderChain(array(0 => $this->get('sonata.block.loader.service')));
    }

    /**
     * Gets the 'sonata.block.loader.service' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Loader\ServiceLoader A Sonata\BlockBundle\Block\Loader\ServiceLoader instance
     */
    protected function getSonata_Block_Loader_ServiceService()
    {
        return $this->services['sonata.block.loader.service'] = new \Sonata\BlockBundle\Block\Loader\ServiceLoader(array(0 => 'sonata.block.service.template'));
    }

    /**
     * Gets the 'sonata.block.menu.registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Menu\MenuRegistry A Sonata\BlockBundle\Menu\MenuRegistry instance
     */
    protected function getSonata_Block_Menu_RegistryService()
    {
        return $this->services['sonata.block.menu.registry'] = new \Sonata\BlockBundle\Menu\MenuRegistry(array());
    }

    /**
     * Gets the 'sonata.block.renderer.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\BlockRenderer A Sonata\BlockBundle\Block\BlockRenderer instance
     */
    protected function getSonata_Block_Renderer_DefaultService()
    {
        return $this->services['sonata.block.renderer.default'] = new \Sonata\BlockBundle\Block\BlockRenderer(${($_ = isset($this->services['sonata.block.manager']) ? $this->services['sonata.block.manager'] : $this->getSonata_Block_ManagerService()) && false ?: '_'}, $this->get('sonata.block.exception.strategy.manager'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE), true);
    }

    /**
     * Gets the 'sonata.block.service.container' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Service\ContainerBlockService A Sonata\BlockBundle\Block\Service\ContainerBlockService instance
     */
    protected function getSonata_Block_Service_ContainerService()
    {
        return $this->services['sonata.block.service.container'] = new \Sonata\BlockBundle\Block\Service\ContainerBlockService('sonata.block.container', $this->get('templating'));
    }

    /**
     * Gets the 'sonata.block.service.empty' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Service\EmptyBlockService A Sonata\BlockBundle\Block\Service\EmptyBlockService instance
     */
    protected function getSonata_Block_Service_EmptyService()
    {
        return $this->services['sonata.block.service.empty'] = new \Sonata\BlockBundle\Block\Service\EmptyBlockService('sonata.block.empty', $this->get('templating'));
    }

    /**
     * Gets the 'sonata.block.service.menu' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Service\MenuBlockService A Sonata\BlockBundle\Block\Service\MenuBlockService instance
     */
    protected function getSonata_Block_Service_MenuService()
    {
        return $this->services['sonata.block.service.menu'] = new \Sonata\BlockBundle\Block\Service\MenuBlockService('sonata.block.menu', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('sonata.block.menu.registry'));
    }

    /**
     * Gets the 'sonata.block.service.rss' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Service\RssBlockService A Sonata\BlockBundle\Block\Service\RssBlockService instance
     */
    protected function getSonata_Block_Service_RssService()
    {
        return $this->services['sonata.block.service.rss'] = new \Sonata\BlockBundle\Block\Service\RssBlockService('sonata.block.rss', $this->get('templating'));
    }

    /**
     * Gets the 'sonata.block.service.template' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Service\TemplateBlockService A Sonata\BlockBundle\Block\Service\TemplateBlockService instance
     */
    protected function getSonata_Block_Service_TemplateService()
    {
        return $this->services['sonata.block.service.template'] = new \Sonata\BlockBundle\Block\Service\TemplateBlockService('sonata.block.template', $this->get('templating'));
    }

    /**
     * Gets the 'sonata.block.service.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Block\Service\TextBlockService A Sonata\BlockBundle\Block\Service\TextBlockService instance
     */
    protected function getSonata_Block_Service_TextService()
    {
        return $this->services['sonata.block.service.text'] = new \Sonata\BlockBundle\Block\Service\TextBlockService('sonata.block.text', $this->get('templating'));
    }

    /**
     * Gets the 'sonata.block.templating.helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Templating\Helper\BlockHelper A Sonata\BlockBundle\Templating\Helper\BlockHelper instance
     */
    protected function getSonata_Block_Templating_HelperService()
    {
        return $this->services['sonata.block.templating.helper'] = new \Sonata\BlockBundle\Templating\Helper\BlockHelper(${($_ = isset($this->services['sonata.block.manager']) ? $this->services['sonata.block.manager'] : $this->getSonata_Block_ManagerService()) && false ?: '_'}, array('by_type' => array('sonata.block.service.template' => 'sonata.cache.noop')), $this->get('sonata.block.renderer.default'), $this->get('sonata.block.context_manager.default'), $this->get('debug.event_dispatcher'), NULL, $this->get('sonata.block.cache.handler.default', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'sonata.block.twig.global' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\BlockBundle\Twig\GlobalVariables A Sonata\BlockBundle\Twig\GlobalVariables instance
     */
    protected function getSonata_Block_Twig_GlobalService()
    {
        return $this->services['sonata.block.twig.global'] = new \Sonata\BlockBundle\Twig\GlobalVariables(array('block_base' => 'SonataBlockBundle:Block:block_base.html.twig', 'block_container' => 'SonataBlockBundle:Block:block_container.html.twig'));
    }

    /**
     * Gets the 'sonata.core.date.moment_format_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Date\MomentFormatConverter A Sonata\CoreBundle\Date\MomentFormatConverter instance
     */
    protected function getSonata_Core_Date_MomentFormatConverterService()
    {
        return $this->services['sonata.core.date.moment_format_converter'] = new \Sonata\CoreBundle\Date\MomentFormatConverter();
    }

    /**
     * Gets the 'sonata.core.flashmessage.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\FlashMessage\FlashManager A Sonata\CoreBundle\FlashMessage\FlashManager instance
     */
    protected function getSonata_Core_Flashmessage_ManagerService()
    {
        return $this->services['sonata.core.flashmessage.manager'] = new \Sonata\CoreBundle\FlashMessage\FlashManager($this->get('session'), $this->get('translator'), array('success' => array('success' => array('domain' => 'SonataCoreBundle'), 'sonata_flash_success' => array('domain' => 'SonataAdminBundle'), 'sonata_user_success' => array('domain' => 'SonataUserBundle'), 'fos_user_success' => array('domain' => 'FOSUserBundle')), 'warning' => array('warning' => array('domain' => 'SonataCoreBundle'), 'sonata_flash_info' => array('domain' => 'SonataAdminBundle')), 'danger' => array('error' => array('domain' => 'SonataCoreBundle'), 'sonata_flash_error' => array('domain' => 'SonataAdminBundle'), 'sonata_user_error' => array('domain' => 'SonataUserBundle'))), array('success' => 'success', 'warning' => 'warning', 'danger' => 'danger'));
    }

    /**
     * Gets the 'sonata.core.flashmessage.twig.extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Twig\Extension\FlashMessageExtension A Sonata\CoreBundle\Twig\Extension\FlashMessageExtension instance
     */
    protected function getSonata_Core_Flashmessage_Twig_ExtensionService()
    {
        return $this->services['sonata.core.flashmessage.twig.extension'] = new \Sonata\CoreBundle\Twig\Extension\FlashMessageExtension($this->get('sonata.core.flashmessage.manager'));
    }

    /**
     * Gets the 'sonata.core.form.type.array' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\ImmutableArrayType A Sonata\CoreBundle\Form\Type\ImmutableArrayType instance
     */
    protected function getSonata_Core_Form_Type_ArrayService()
    {
        return $this->services['sonata.core.form.type.array'] = new \Sonata\CoreBundle\Form\Type\ImmutableArrayType();
    }

    /**
     * Gets the 'sonata.core.form.type.boolean' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\BooleanType A Sonata\CoreBundle\Form\Type\BooleanType instance
     */
    protected function getSonata_Core_Form_Type_BooleanService()
    {
        return $this->services['sonata.core.form.type.boolean'] = new \Sonata\CoreBundle\Form\Type\BooleanType();
    }

    /**
     * Gets the 'sonata.core.form.type.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\CollectionType A Sonata\CoreBundle\Form\Type\CollectionType instance
     */
    protected function getSonata_Core_Form_Type_CollectionService()
    {
        return $this->services['sonata.core.form.type.collection'] = new \Sonata\CoreBundle\Form\Type\CollectionType();
    }

    /**
     * Gets the 'sonata.core.form.type.color_selector' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\ColorSelectorType A Sonata\CoreBundle\Form\Type\ColorSelectorType instance
     */
    protected function getSonata_Core_Form_Type_ColorSelectorService()
    {
        return $this->services['sonata.core.form.type.color_selector'] = new \Sonata\CoreBundle\Form\Type\ColorSelectorType();
    }

    /**
     * Gets the 'sonata.core.form.type.date_picker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\DatePickerType A Sonata\CoreBundle\Form\Type\DatePickerType instance
     */
    protected function getSonata_Core_Form_Type_DatePickerService()
    {
        return $this->services['sonata.core.form.type.date_picker'] = new \Sonata\CoreBundle\Form\Type\DatePickerType($this->get('sonata.core.date.moment_format_converter'), $this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.date_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\DateRangeType A Sonata\CoreBundle\Form\Type\DateRangeType instance
     */
    protected function getSonata_Core_Form_Type_DateRangeService()
    {
        return $this->services['sonata.core.form.type.date_range'] = new \Sonata\CoreBundle\Form\Type\DateRangeType($this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.date_range_picker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\DateRangePickerType A Sonata\CoreBundle\Form\Type\DateRangePickerType instance
     */
    protected function getSonata_Core_Form_Type_DateRangePickerService()
    {
        return $this->services['sonata.core.form.type.date_range_picker'] = new \Sonata\CoreBundle\Form\Type\DateRangePickerType($this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.datetime_picker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\DateTimePickerType A Sonata\CoreBundle\Form\Type\DateTimePickerType instance
     */
    protected function getSonata_Core_Form_Type_DatetimePickerService()
    {
        return $this->services['sonata.core.form.type.datetime_picker'] = new \Sonata\CoreBundle\Form\Type\DateTimePickerType($this->get('sonata.core.date.moment_format_converter'), $this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.datetime_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\DateTimeRangeType A Sonata\CoreBundle\Form\Type\DateTimeRangeType instance
     */
    protected function getSonata_Core_Form_Type_DatetimeRangeService()
    {
        return $this->services['sonata.core.form.type.datetime_range'] = new \Sonata\CoreBundle\Form\Type\DateTimeRangeType($this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.datetime_range_picker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\DateTimeRangePickerType A Sonata\CoreBundle\Form\Type\DateTimeRangePickerType instance
     */
    protected function getSonata_Core_Form_Type_DatetimeRangePickerService()
    {
        return $this->services['sonata.core.form.type.datetime_range_picker'] = new \Sonata\CoreBundle\Form\Type\DateTimeRangePickerType($this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.equal' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\EqualType A Sonata\CoreBundle\Form\Type\EqualType instance
     */
    protected function getSonata_Core_Form_Type_EqualService()
    {
        return $this->services['sonata.core.form.type.equal'] = new \Sonata\CoreBundle\Form\Type\EqualType($this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.form.type.translatable_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Form\Type\TranslatableChoiceType A Sonata\CoreBundle\Form\Type\TranslatableChoiceType instance
     */
    protected function getSonata_Core_Form_Type_TranslatableChoiceService()
    {
        return $this->services['sonata.core.form.type.translatable_choice'] = new \Sonata\CoreBundle\Form\Type\TranslatableChoiceType($this->get('translator'));
    }

    /**
     * Gets the 'sonata.core.model.adapter.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Model\Adapter\AdapterChain A Sonata\CoreBundle\Model\Adapter\AdapterChain instance
     */
    protected function getSonata_Core_Model_Adapter_ChainService()
    {
        $this->services['sonata.core.model.adapter.chain'] = $instance = new \Sonata\CoreBundle\Model\Adapter\AdapterChain();

        $instance->addAdapter(new \Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE)));

        return $instance;
    }

    /**
     * Gets the 'sonata.core.slugify.cocur' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Cocur\Slugify\Slugify A Cocur\Slugify\Slugify instance
     *
     * @deprecated The "sonata.core.slugify.cocur" service is deprecated. You should stop using it, as it will soon be removed.
     */
    protected function getSonata_Core_Slugify_CocurService()
    {
        @trigger_error('The "sonata.core.slugify.cocur" service is deprecated. You should stop using it, as it will soon be removed.', E_USER_DEPRECATED);

        return $this->services['sonata.core.slugify.cocur'] = new \Cocur\Slugify\Slugify();
    }

    /**
     * Gets the 'sonata.core.slugify.native' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Component\NativeSlugify A Sonata\CoreBundle\Component\NativeSlugify instance
     *
     * @deprecated The "sonata.core.slugify.native" service is deprecated. You should stop using it, as it will soon be removed.
     */
    protected function getSonata_Core_Slugify_NativeService()
    {
        @trigger_error('The "sonata.core.slugify.native" service is deprecated. You should stop using it, as it will soon be removed.', E_USER_DEPRECATED);

        return $this->services['sonata.core.slugify.native'] = new \Sonata\CoreBundle\Component\NativeSlugify();
    }

    /**
     * Gets the 'sonata.core.twig.extension.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension A Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension instance
     */
    protected function getSonata_Core_Twig_Extension_TextService()
    {
        return $this->services['sonata.core.twig.extension.text'] = new \Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension();
    }

    /**
     * Gets the 'sonata.core.twig.extension.wrapping' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Twig\Extension\FormTypeExtension A Sonata\CoreBundle\Twig\Extension\FormTypeExtension instance
     */
    protected function getSonata_Core_Twig_Extension_WrappingService()
    {
        return $this->services['sonata.core.twig.extension.wrapping'] = new \Sonata\CoreBundle\Twig\Extension\FormTypeExtension('standard');
    }

    /**
     * Gets the 'sonata.core.twig.status_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Twig\Extension\StatusExtension A Sonata\CoreBundle\Twig\Extension\StatusExtension instance
     */
    protected function getSonata_Core_Twig_StatusExtensionService()
    {
        $this->services['sonata.core.twig.status_extension'] = $instance = new \Sonata\CoreBundle\Twig\Extension\StatusExtension();

        $instance->addStatusService($this->get('sonata.core.flashmessage.manager'));

        return $instance;
    }

    /**
     * Gets the 'sonata.core.twig.template_extension' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Twig\Extension\TemplateExtension A Sonata\CoreBundle\Twig\Extension\TemplateExtension instance
     */
    protected function getSonata_Core_Twig_TemplateExtensionService()
    {
        return $this->services['sonata.core.twig.template_extension'] = new \Sonata\CoreBundle\Twig\Extension\TemplateExtension(true, $this->get('translator'), $this->get('sonata.core.model.adapter.chain'));
    }

    /**
     * Gets the 'sonata.core.validator.inline' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\CoreBundle\Validator\InlineValidator A Sonata\CoreBundle\Validator\InlineValidator instance
     */
    protected function getSonata_Core_Validator_InlineService()
    {
        return $this->services['sonata.core.validator.inline'] = new \Sonata\CoreBundle\Validator\InlineValidator($this, ${($_ = isset($this->services['validator.validator_factory']) ? $this->services['validator.validator_factory'] : $this->getValidator_ValidatorFactoryService()) && false ?: '_'});
    }

    /**
     * Gets the 'sonata.intl.locale_detector.request_stack' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\IntlBundle\Locale\RequestStackDetector A Sonata\IntlBundle\Locale\RequestStackDetector instance
     */
    protected function getSonata_Intl_LocaleDetector_RequestStackService()
    {
        return $this->services['sonata.intl.locale_detector.request_stack'] = new \Sonata\IntlBundle\Locale\RequestStackDetector($this->get('request_stack'), 'en_US');
    }

    /**
     * Gets the 'sonata.intl.templating.helper.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\IntlBundle\Templating\Helper\DateTimeHelper A Sonata\IntlBundle\Templating\Helper\DateTimeHelper instance
     */
    protected function getSonata_Intl_Templating_Helper_DatetimeService()
    {
        return $this->services['sonata.intl.templating.helper.datetime'] = new \Sonata\IntlBundle\Templating\Helper\DateTimeHelper($this->get('sonata.intl.timezone_detector.chain'), 'UTF-8', $this->get('sonata.intl.locale_detector.request_stack'));
    }

    /**
     * Gets the 'sonata.intl.templating.helper.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\IntlBundle\Templating\Helper\LocaleHelper A Sonata\IntlBundle\Templating\Helper\LocaleHelper instance
     */
    protected function getSonata_Intl_Templating_Helper_LocaleService()
    {
        return $this->services['sonata.intl.templating.helper.locale'] = new \Sonata\IntlBundle\Templating\Helper\LocaleHelper('UTF-8', $this->get('sonata.intl.locale_detector.request_stack'));
    }

    /**
     * Gets the 'sonata.intl.templating.helper.number' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\IntlBundle\Templating\Helper\NumberHelper A Sonata\IntlBundle\Templating\Helper\NumberHelper instance
     */
    protected function getSonata_Intl_Templating_Helper_NumberService()
    {
        return $this->services['sonata.intl.templating.helper.number'] = new \Sonata\IntlBundle\Templating\Helper\NumberHelper('UTF-8', $this->get('sonata.intl.locale_detector.request_stack'));
    }

    /**
     * Gets the 'sonata.intl.timezone_detector.chain' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\IntlBundle\Timezone\ChainTimezoneDetector A Sonata\IntlBundle\Timezone\ChainTimezoneDetector instance
     */
    protected function getSonata_Intl_TimezoneDetector_ChainService()
    {
        $this->services['sonata.intl.timezone_detector.chain'] = $instance = new \Sonata\IntlBundle\Timezone\ChainTimezoneDetector('UTC');

        $instance->addDetector($this->get('sonata.intl.timezone_detector.locale'));

        return $instance;
    }

    /**
     * Gets the 'sonata.intl.timezone_detector.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector A Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector instance
     */
    protected function getSonata_Intl_TimezoneDetector_LocaleService()
    {
        return $this->services['sonata.intl.timezone_detector.locale'] = new \Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector($this->get('sonata.intl.locale_detector.request_stack'), array());
    }

    /**
     * Gets the 'stof_doctrine_extensions.event_listener.logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Stof\DoctrineExtensionsBundle\EventListener\LoggerListener A Stof\DoctrineExtensionsBundle\EventListener\LoggerListener instance
     */
    protected function getStofDoctrineExtensions_EventListener_LoggerService()
    {
        return $this->services['stof_doctrine_extensions.event_listener.logger'] = new \Stof\DoctrineExtensionsBundle\EventListener\LoggerListener(${($_ = isset($this->services['stof_doctrine_extensions.listener.loggable']) ? $this->services['stof_doctrine_extensions.listener.loggable'] : $this->getStofDoctrineExtensions_Listener_LoggableService()) && false ?: '_'}, $this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }

    /**
     * Gets the 'stof_doctrine_extensions.uploadable.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager A Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager instance
     */
    protected function getStofDoctrineExtensions_Uploadable_ManagerService()
    {
        $a = new \Gedmo\Uploadable\UploadableListener(new \Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter());
        $a->setAnnotationReader($this->get('annotation_reader'));
        $a->setDefaultFileInfoClass('Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');

        return $this->services['stof_doctrine_extensions.uploadable.manager'] = new \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager($a, 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
    }

    /**
     * Gets the 'streamed_response_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener A Symfony\Component\HttpKernel\EventListener\StreamedResponseListener instance
     */
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }

    /**
     * Gets the 'swiftmailer.email_sender.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener A Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener instance
     */
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'swiftmailer.mailer.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Mailer A Swift_Mailer instance
     */
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer($this->get('swiftmailer.mailer.default.transport'));
    }

    /**
     * Gets the 'swiftmailer.mailer.default.plugin.messagelogger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Plugins_MessageLogger A Swift_Plugins_MessageLogger instance
     */
    protected function getSwiftmailer_Mailer_Default_Plugin_MessageloggerService()
    {
        return $this->services['swiftmailer.mailer.default.plugin.messagelogger'] = new \Swift_Plugins_MessageLogger();
    }

    /**
     * Gets the 'swiftmailer.mailer.default.transport' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Swift_Transport_EsmtpTransport A Swift_Transport_EsmtpTransport instance
     */
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        $a = new \Swift_Transport_Esmtp_AuthHandler(array(0 => new \Swift_Transport_Esmtp_Auth_CramMd5Authenticator(), 1 => new \Swift_Transport_Esmtp_Auth_LoginAuthenticator(), 2 => new \Swift_Transport_Esmtp_Auth_PlainAuthenticator()));
        $a->setUsername(NULL);
        $a->setPassword(NULL);
        $a->setAuthMode(NULL);

        $this->services['swiftmailer.mailer.default.transport'] = $instance = new \Swift_Transport_EsmtpTransport(new \Swift_Transport_StreamBuffer(new \Swift_StreamFilters_StringReplacementFilterFactory()), array(0 => $a), new \Swift_Events_SimpleEventDispatcher());

        $instance->setHost('localhost');
        $instance->setPort(25);
        $instance->setEncryption(NULL);
        $instance->setTimeout(30);
        $instance->setSourceIp(NULL);
        $instance->registerPlugin($this->get('swiftmailer.mailer.default.plugin.messagelogger'));
        (new \Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator(NULL, ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}))->configure($instance);

        return $instance;
    }

    /**
     * Gets the 'sylius.active_promotions_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Provider\ActivePromotionsByChannelProvider A Sylius\Component\Core\Provider\ActivePromotionsByChannelProvider instance
     */
    protected function getSylius_ActivePromotionsProviderService()
    {
        return $this->services['sylius.active_promotions_provider'] = new \Sylius\Component\Core\Provider\ActivePromotionsByChannelProvider($this->get('sylius.repository.promotion'));
    }

    /**
     * Gets the 'sylius.address_comparator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Addressing\Comparator\AddressComparator A Sylius\Component\Addressing\Comparator\AddressComparator instance
     */
    protected function getSylius_AddressComparatorService()
    {
        return $this->services['sylius.address_comparator'] = new \Sylius\Component\Addressing\Comparator\AddressComparator();
    }

    /**
     * Gets the 'sylius.adjustments_aggregator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Order\Aggregator\AdjustmentsByLabelAggregator A Sylius\Component\Order\Aggregator\AdjustmentsByLabelAggregator instance
     */
    protected function getSylius_AdjustmentsAggregatorService()
    {
        return $this->services['sylius.adjustments_aggregator'] = new \Sylius\Component\Order\Aggregator\AdjustmentsByLabelAggregator();
    }

    /**
     * Gets the 'sylius.admin.menu_builder.customer.show' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Menu\CustomerShowMenuBuilder A Sylius\Bundle\AdminBundle\Menu\CustomerShowMenuBuilder instance
     */
    protected function getSylius_Admin_MenuBuilder_Customer_ShowService()
    {
        return $this->services['sylius.admin.menu_builder.customer.show'] = new \Sylius\Bundle\AdminBundle\Menu\CustomerShowMenuBuilder($this->get('knp_menu.factory'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.admin.menu_builder.main' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Menu\MainMenuBuilder A Sylius\Bundle\AdminBundle\Menu\MainMenuBuilder instance
     */
    protected function getSylius_Admin_MenuBuilder_MainService()
    {
        return $this->services['sylius.admin.menu_builder.main'] = new \Sylius\Bundle\AdminBundle\Menu\MainMenuBuilder($this->get('knp_menu.factory'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.admin.menu_builder.order.show' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Menu\OrderShowMenuBuilder A Sylius\Bundle\AdminBundle\Menu\OrderShowMenuBuilder instance
     */
    protected function getSylius_Admin_MenuBuilder_Order_ShowService()
    {
        return $this->services['sylius.admin.menu_builder.order.show'] = new \Sylius\Bundle\AdminBundle\Menu\OrderShowMenuBuilder($this->get('knp_menu.factory'), $this->get('debug.event_dispatcher'), $this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.admin.menu_builder.product_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Menu\ProductFormMenuBuilder A Sylius\Bundle\AdminBundle\Menu\ProductFormMenuBuilder instance
     */
    protected function getSylius_Admin_MenuBuilder_ProductFormService()
    {
        return $this->services['sylius.admin.menu_builder.product_form'] = new \Sylius\Bundle\AdminBundle\Menu\ProductFormMenuBuilder($this->get('knp_menu.factory'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.admin.menu_builder.product_variant_form' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Menu\ProductVariantFormMenuBuilder A Sylius\Bundle\AdminBundle\Menu\ProductVariantFormMenuBuilder instance
     */
    protected function getSylius_Admin_MenuBuilder_ProductVariantFormService()
    {
        return $this->services['sylius.admin.menu_builder.product_variant_form'] = new \Sylius\Bundle\AdminBundle\Menu\ProductVariantFormMenuBuilder($this->get('knp_menu.factory'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.admin_user.pin_generator.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniquePinGenerator A Sylius\Component\User\Security\Generator\UniquePinGenerator instance
     */
    protected function getSylius_AdminUser_PinGenerator_PasswordResetService()
    {
        return $this->services['sylius.admin_user.pin_generator.password_reset'] = new \Sylius\Component\User\Security\Generator\UniquePinGenerator($this->get('sylius.random_generator'), $this->get('sylius.admin_user.pin_uniqueness_checker.password_reset'), 4);
    }

    /**
     * Gets the 'sylius.admin_user.pin_uniqueness_checker.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_AdminUser_PinUniquenessChecker_PasswordResetService()
    {
        return $this->services['sylius.admin_user.pin_uniqueness_checker.password_reset'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.admin_user'), 'passwordResetToken');
    }

    /**
     * Gets the 'sylius.admin_user.reloader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Reloader\UserReloader A Sylius\Bundle\UserBundle\Reloader\UserReloader instance
     */
    protected function getSylius_AdminUser_ReloaderService()
    {
        return $this->services['sylius.admin_user.reloader'] = new \Sylius\Bundle\UserBundle\Reloader\UserReloader($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.admin_user.token_generator.email_verification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniqueTokenGenerator A Sylius\Component\User\Security\Generator\UniqueTokenGenerator instance
     */
    protected function getSylius_AdminUser_TokenGenerator_EmailVerificationService()
    {
        return $this->services['sylius.admin_user.token_generator.email_verification'] = new \Sylius\Component\User\Security\Generator\UniqueTokenGenerator($this->get('sylius.random_generator'), $this->get('sylius.admin_user.token_uniqueness_checker.email_verification'), 16);
    }

    /**
     * Gets the 'sylius.admin_user.token_generator.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniqueTokenGenerator A Sylius\Component\User\Security\Generator\UniqueTokenGenerator instance
     */
    protected function getSylius_AdminUser_TokenGenerator_PasswordResetService()
    {
        return $this->services['sylius.admin_user.token_generator.password_reset'] = new \Sylius\Component\User\Security\Generator\UniqueTokenGenerator($this->get('sylius.random_generator'), $this->get('sylius.admin_user.token_uniqueness_checker.password_reset'), 16);
    }

    /**
     * Gets the 'sylius.admin_user.token_uniqueness_checker.email_verification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_AdminUser_TokenUniquenessChecker_EmailVerificationService()
    {
        return $this->services['sylius.admin_user.token_uniqueness_checker.email_verification'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.admin_user'), 'emailVerificationToken');
    }

    /**
     * Gets the 'sylius.admin_user.token_uniqueness_checker.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_AdminUser_TokenUniquenessChecker_PasswordResetService()
    {
        return $this->services['sylius.admin_user.token_uniqueness_checker.password_reset'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.admin_user'), 'passwordResetToken');
    }

    /**
     * Gets the 'sylius.admin_user_provider.email_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\EmailProvider A Sylius\Bundle\UserBundle\Provider\EmailProvider instance
     */
    public function getSylius_AdminUserProvider_EmailBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.admin_user_provider.email_based'] = new SyliusBundleUserBundleProviderEmailProvider_000000004255233d000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_AdminUserProvider_EmailBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\EmailProvider('Sylius\\Component\\Core\\Model\\AdminUser', $this->get('sylius.repository.admin_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.admin_user_provider.email_or_name_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider A Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider instance
     */
    public function getSylius_AdminUserProvider_EmailOrNameBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.admin_user_provider.email_or_name_based'] = new SyliusBundleUserBundleProviderUsernameOrEmailProvider_000000004255233c000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_AdminUserProvider_EmailOrNameBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider('Sylius\\Component\\Core\\Model\\AdminUser', $this->get('sylius.repository.admin_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.admin_user_provider.name_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\UsernameProvider A Sylius\Bundle\UserBundle\Provider\UsernameProvider instance
     */
    public function getSylius_AdminUserProvider_NameBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.admin_user_provider.name_based'] = new SyliusBundleUserBundleProviderUsernameProvider_0000000042552303000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_AdminUserProvider_NameBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\UsernameProvider('Sylius\\Component\\Core\\Model\\AdminUser', $this->get('sylius.repository.admin_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.attribute_type.checkbox' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\CheckboxAttributeType A Sylius\Component\Attribute\AttributeType\CheckboxAttributeType instance
     */
    protected function getSylius_AttributeType_CheckboxService()
    {
        return $this->services['sylius.attribute_type.checkbox'] = new \Sylius\Component\Attribute\AttributeType\CheckboxAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\DateAttributeType A Sylius\Component\Attribute\AttributeType\DateAttributeType instance
     */
    protected function getSylius_AttributeType_DateService()
    {
        return $this->services['sylius.attribute_type.date'] = new \Sylius\Component\Attribute\AttributeType\DateAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\DatetimeAttributeType A Sylius\Component\Attribute\AttributeType\DatetimeAttributeType instance
     */
    protected function getSylius_AttributeType_DatetimeService()
    {
        return $this->services['sylius.attribute_type.datetime'] = new \Sylius\Component\Attribute\AttributeType\DatetimeAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.integer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\IntegerAttributeType A Sylius\Component\Attribute\AttributeType\IntegerAttributeType instance
     */
    protected function getSylius_AttributeType_IntegerService()
    {
        return $this->services['sylius.attribute_type.integer'] = new \Sylius\Component\Attribute\AttributeType\IntegerAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.percent' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\PercentAttributeType A Sylius\Component\Attribute\AttributeType\PercentAttributeType instance
     */
    protected function getSylius_AttributeType_PercentService()
    {
        return $this->services['sylius.attribute_type.percent'] = new \Sylius\Component\Attribute\AttributeType\PercentAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.select' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\SelectAttributeType A Sylius\Component\Attribute\AttributeType\SelectAttributeType instance
     */
    protected function getSylius_AttributeType_SelectService()
    {
        return $this->services['sylius.attribute_type.select'] = new \Sylius\Component\Attribute\AttributeType\SelectAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.text' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\TextAttributeType A Sylius\Component\Attribute\AttributeType\TextAttributeType instance
     */
    protected function getSylius_AttributeType_TextService()
    {
        return $this->services['sylius.attribute_type.text'] = new \Sylius\Component\Attribute\AttributeType\TextAttributeType();
    }

    /**
     * Gets the 'sylius.attribute_type.textarea' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\AttributeType\TextareaAttributeType A Sylius\Component\Attribute\AttributeType\TextareaAttributeType instance
     */
    protected function getSylius_AttributeType_TextareaService()
    {
        return $this->services['sylius.attribute_type.textarea'] = new \Sylius\Component\Attribute\AttributeType\TextareaAttributeType();
    }

    /**
     * Gets the 'sylius.availability_checker.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Inventory\Checker\AvailabilityChecker A Sylius\Component\Inventory\Checker\AvailabilityChecker instance
     */
    protected function getSylius_AvailabilityChecker_DefaultService()
    {
        return $this->services['sylius.availability_checker.default'] = new \Sylius\Component\Inventory\Checker\AvailabilityChecker();
    }

    /**
     * Gets the 'sylius.average_rating_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Review\Calculator\AverageRatingCalculator A Sylius\Component\Review\Calculator\AverageRatingCalculator instance
     */
    protected function getSylius_AverageRatingCalculatorService()
    {
        return $this->services['sylius.average_rating_calculator'] = new \Sylius\Component\Review\Calculator\AverageRatingCalculator();
    }

    /**
     * Gets the 'sylius.behat.email_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Test\Services\EmailChecker A Sylius\Component\Core\Test\Services\EmailChecker instance
     */
    protected function getSylius_Behat_EmailCheckerService()
    {
        return $this->services['sylius.behat.email_checker'] = new \Sylius\Component\Core\Test\Services\EmailChecker((__DIR__.'/spool'));
    }

    /**
     * Gets the 'sylius.behat.factory.default_channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Test\Services\DefaultChannelFactory A Sylius\Component\Core\Test\Services\DefaultChannelFactory instance
     */
    protected function getSylius_Behat_Factory_DefaultChannelService()
    {
        return $this->services['sylius.behat.factory.default_channel'] = new \Sylius\Component\Core\Test\Services\DefaultChannelFactory($this->get('sylius.factory.channel'), $this->get('sylius.factory.currency'), $this->get('sylius.factory.locale'), $this->get('sylius.repository.channel'), $this->get('sylius.repository.currency'), $this->get('sylius.repository.locale'), 'en_US');
    }

    /**
     * Gets the 'sylius.behat.factory.default_united_states_channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Test\Services\DefaultUnitedStatesChannelFactory A Sylius\Component\Core\Test\Services\DefaultUnitedStatesChannelFactory instance
     */
    protected function getSylius_Behat_Factory_DefaultUnitedStatesChannelService()
    {
        return $this->services['sylius.behat.factory.default_united_states_channel'] = new \Sylius\Component\Core\Test\Services\DefaultUnitedStatesChannelFactory($this->get('sylius.repository.channel'), $this->get('sylius.repository.country'), $this->get('sylius.repository.currency'), $this->get('sylius.repository.locale'), $this->get('sylius.repository.zone'), $this->get('sylius.factory.channel'), $this->get('sylius.factory.country'), $this->get('sylius.factory.currency'), $this->get('sylius.factory.locale'), $this->get('sylius.factory.zone'), 'en_US');
    }

    /**
     * Gets the 'sylius.calculator.product_variant_price' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Calculator\ProductVariantPriceCalculator A Sylius\Component\Core\Calculator\ProductVariantPriceCalculator instance
     */
    protected function getSylius_Calculator_ProductVariantPriceService()
    {
        return $this->services['sylius.calculator.product_variant_price'] = new \Sylius\Component\Core\Calculator\ProductVariantPriceCalculator();
    }

    /**
     * Gets the 'sylius.canonicalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Canonicalizer\Canonicalizer A Sylius\Component\User\Canonicalizer\Canonicalizer instance
     */
    protected function getSylius_CanonicalizerService()
    {
        return $this->services['sylius.canonicalizer'] = new \Sylius\Component\User\Canonicalizer\Canonicalizer();
    }

    /**
     * Gets the 'sylius.checker.order_payment_method_selection_requirement' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Checker\OrderPaymentMethodSelectionRequirementChecker A Sylius\Component\Core\Checker\OrderPaymentMethodSelectionRequirementChecker instance
     */
    protected function getSylius_Checker_OrderPaymentMethodSelectionRequirementService()
    {
        return $this->services['sylius.checker.order_payment_method_selection_requirement'] = new \Sylius\Component\Core\Checker\OrderPaymentMethodSelectionRequirementChecker($this->get('sylius.payment_methods_resolver'));
    }

    /**
     * Gets the 'sylius.checker.order_shipping_method_selection_requirement' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Checker\OrderShippingMethodSelectionRequirementChecker A Sylius\Component\Core\Checker\OrderShippingMethodSelectionRequirementChecker instance
     */
    protected function getSylius_Checker_OrderShippingMethodSelectionRequirementService()
    {
        return $this->services['sylius.checker.order_shipping_method_selection_requirement'] = new \Sylius\Component\Core\Checker\OrderShippingMethodSelectionRequirementChecker($this->get('sylius.shipping_methods_resolver'));
    }

    /**
     * Gets the 'sylius.checker.product_variants_parity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Product\Checker\ProductVariantsParityChecker A Sylius\Component\Product\Checker\ProductVariantsParityChecker instance
     */
    protected function getSylius_Checker_ProductVariantsParityService()
    {
        return $this->services['sylius.checker.product_variants_parity'] = new \Sylius\Component\Product\Checker\ProductVariantsParityChecker();
    }

    /**
     * Gets the 'sylius.commands_provider.database_setup' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Provider\DatabaseSetupCommandsProvider A Sylius\Bundle\CoreBundle\Installer\Provider\DatabaseSetupCommandsProvider instance
     */
    protected function getSylius_CommandsProvider_DatabaseSetupService()
    {
        return $this->services['sylius.commands_provider.database_setup'] = new \Sylius\Bundle\CoreBundle\Installer\Provider\DatabaseSetupCommandsProvider($this->get('doctrine'));
    }

    /**
     * Gets the 'sylius.console.command.resource_debug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Command\DebugResourceCommand A Sylius\Bundle\ResourceBundle\Command\DebugResourceCommand instance
     */
    protected function getSylius_Console_Command_ResourceDebugService()
    {
        return $this->services['sylius.console.command.resource_debug'] = new \Sylius\Bundle\ResourceBundle\Command\DebugResourceCommand(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'});
    }

    /**
     * Gets the 'sylius.context.cart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Order\Context\CompositeCartContext A Sylius\Component\Order\Context\CompositeCartContext instance
     */
    protected function getSylius_Context_CartService()
    {
        $this->services['sylius.context.cart'] = $instance = new \Sylius\Component\Order\Context\CompositeCartContext();

        $instance->addContext($this->get('sylius.context.cart.new'), -999);
        $instance->addContext($this->get('sylius.context.cart.session_and_channel_based'), -777);
        $instance->addContext($this->get('sylius.context.cart.customer_and_channel_based'), -555);

        return $instance;
    }

    /**
     * Gets the 'sylius.context.cart.customer_and_channel_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Context\CustomerAndChannelBasedCartContext A Sylius\Bundle\CoreBundle\Context\CustomerAndChannelBasedCartContext instance
     */
    protected function getSylius_Context_Cart_CustomerAndChannelBasedService()
    {
        return $this->services['sylius.context.cart.customer_and_channel_based'] = new \Sylius\Bundle\CoreBundle\Context\CustomerAndChannelBasedCartContext($this->get('sylius.context.customer'), $this->get('sylius.context.channel'), $this->get('sylius.repository.order'));
    }

    /**
     * Gets the 'sylius.context.cart.new' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Cart\Context\ShopBasedCartContext A Sylius\Component\Core\Cart\Context\ShopBasedCartContext instance
     */
    protected function getSylius_Context_Cart_NewService()
    {
        return $this->services['sylius.context.cart.new'] = new \Sylius\Component\Core\Cart\Context\ShopBasedCartContext(new \Sylius\Component\Order\Context\CartContext($this->get('sylius.factory.order')), $this->get('sylius.context.shopper'));
    }

    /**
     * Gets the 'sylius.context.cart.session_and_channel_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Context\SessionAndChannelBasedCartContext A Sylius\Bundle\CoreBundle\Context\SessionAndChannelBasedCartContext instance
     */
    protected function getSylius_Context_Cart_SessionAndChannelBasedService()
    {
        return $this->services['sylius.context.cart.session_and_channel_based'] = new \Sylius\Bundle\CoreBundle\Context\SessionAndChannelBasedCartContext($this->get('session'), '_sylius.cart', $this->get('sylius.context.channel'), $this->get('sylius.repository.order'));
    }

    /**
     * Gets the 'sylius.context.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Channel\Context\CachedPerRequestChannelContext A Sylius\Component\Channel\Context\CachedPerRequestChannelContext instance
     */
    protected function getSylius_Context_ChannelService()
    {
        $a = $this->get('request_stack');
        $b = $this->get('sylius.repository.channel');

        $c = new \Sylius\Component\Channel\Context\CompositeChannelContext();
        $c->addContext(new \Sylius\Component\Channel\Context\RequestBased\ChannelContext($this->get('sylius.context.channel.request_based.resolver'), $a));
        $c->addContext(new \Sylius\Component\Channel\Context\SingleChannelContext($b), -128);
        $c->addContext(new \Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelContext(${($_ = isset($this->services['sylius.context.channel.fake_channel.code_provider']) ? $this->services['sylius.context.channel.fake_channel.code_provider'] : $this->getSylius_Context_Channel_FakeChannel_CodeProviderService()) && false ?: '_'}, $b, $a), 128);

        return $this->services['sylius.context.channel'] = new \Sylius\Component\Channel\Context\CachedPerRequestChannelContext($c, $a);
    }

    /**
     * Gets the 'sylius.context.channel.fake_channel.persister' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelPersister A Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelPersister instance
     */
    protected function getSylius_Context_Channel_FakeChannel_PersisterService()
    {
        return $this->services['sylius.context.channel.fake_channel.persister'] = new \Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelPersister(${($_ = isset($this->services['sylius.context.channel.fake_channel.code_provider']) ? $this->services['sylius.context.channel.fake_channel.code_provider'] : $this->getSylius_Context_Channel_FakeChannel_CodeProviderService()) && false ?: '_'});
    }

    /**
     * Gets the 'sylius.context.channel.request_based.resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Channel\Context\RequestBased\CompositeRequestResolver A Sylius\Component\Channel\Context\RequestBased\CompositeRequestResolver instance
     */
    protected function getSylius_Context_Channel_RequestBased_ResolverService()
    {
        $this->services['sylius.context.channel.request_based.resolver'] = $instance = new \Sylius\Component\Channel\Context\RequestBased\CompositeRequestResolver();

        $instance->addResolver(new \Sylius\Component\Channel\Context\RequestBased\HostnameBasedRequestResolver($this->get('sylius.repository.channel')));

        return $instance;
    }

    /**
     * Gets the 'sylius.context.currency.channel_aware' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Currency\Context\ChannelAwareCurrencyContext A Sylius\Component\Core\Currency\Context\ChannelAwareCurrencyContext instance
     */
    protected function getSylius_Context_Currency_ChannelAwareService()
    {
        $a = new \Sylius\Component\Currency\Context\CompositeCurrencyContext();
        $a->addContext($this->get('sylius.context.currency.storage_based'));

        return $this->services['sylius.context.currency.channel_aware'] = new \Sylius\Component\Core\Currency\Context\ChannelAwareCurrencyContext($a, $this->get('sylius.context.channel'));
    }

    /**
     * Gets the 'sylius.context.currency.storage_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Currency\Context\StorageBasedCurrencyContext A Sylius\Component\Core\Currency\Context\StorageBasedCurrencyContext instance
     */
    protected function getSylius_Context_Currency_StorageBasedService()
    {
        return $this->services['sylius.context.currency.storage_based'] = new \Sylius\Component\Core\Currency\Context\StorageBasedCurrencyContext($this->get('sylius.context.channel'), $this->get('sylius.storage.currency'));
    }

    /**
     * Gets the 'sylius.context.customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Context\CustomerContext A Sylius\Bundle\CoreBundle\Context\CustomerContext instance
     */
    protected function getSylius_Context_CustomerService()
    {
        return $this->services['sylius.context.customer'] = new \Sylius\Bundle\CoreBundle\Context\CustomerContext($this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }

    /**
     * Gets the 'sylius.context.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Locale\Context\CompositeLocaleContext A Sylius\Component\Locale\Context\CompositeLocaleContext instance
     */
    protected function getSylius_Context_LocaleService()
    {
        $this->services['sylius.context.locale'] = $instance = new \Sylius\Component\Locale\Context\CompositeLocaleContext();

        $instance->addContext($this->get('sylius.context.locale.request_based'), 64);
        $instance->addContext($this->get('sylius.context.locale.provider_based'), -128);
        $instance->addContext($this->get('sylius.context.locale.admin_based'), 128);

        return $instance;
    }

    /**
     * Gets the 'sylius.context.locale.admin_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Context\AdminBasedLocaleContext A Sylius\Bundle\AdminBundle\Context\AdminBasedLocaleContext instance
     */
    protected function getSylius_Context_Locale_AdminBasedService()
    {
        return $this->services['sylius.context.locale.admin_based'] = new \Sylius\Bundle\AdminBundle\Context\AdminBasedLocaleContext($this->get('security.token_storage'));
    }

    /**
     * Gets the 'sylius.context.locale.provider_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Locale\Context\ProviderBasedLocaleContext A Sylius\Component\Locale\Context\ProviderBasedLocaleContext instance
     */
    protected function getSylius_Context_Locale_ProviderBasedService()
    {
        return $this->services['sylius.context.locale.provider_based'] = new \Sylius\Component\Locale\Context\ProviderBasedLocaleContext($this->get('sylius.locale_provider.channel_based'));
    }

    /**
     * Gets the 'sylius.context.locale.request_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\LocaleBundle\Context\RequestBasedLocaleContext A Sylius\Bundle\LocaleBundle\Context\RequestBasedLocaleContext instance
     */
    protected function getSylius_Context_Locale_RequestBasedService()
    {
        return $this->services['sylius.context.locale.request_based'] = new \Sylius\Bundle\LocaleBundle\Context\RequestBasedLocaleContext($this->get('request_stack'), $this->get('sylius.locale_provider.channel_based'));
    }

    /**
     * Gets the 'sylius.context.shopper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Component\Core\Context\ShopperContext A Sylius\Component\Core\Context\ShopperContext instance
     */
    public function getSylius_Context_ShopperService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.context.shopper'] = new SyliusComponentCoreContextShopperContext_000000004255328b000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Context_ShopperService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Component\Core\Context\ShopperContext($this->get('sylius.context.channel'), $this->get('sylius.context.currency.channel_aware'), $this->get('sylius.context.locale'), $this->get('sylius.context.customer'));
    }

    /**
     * Gets the 'sylius.context.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Theme\ChannelBasedThemeContext A Sylius\Bundle\CoreBundle\Theme\ChannelBasedThemeContext instance
     */
    protected function getSylius_Context_ThemeService()
    {
        return $this->services['sylius.context.theme'] = new \Sylius\Bundle\CoreBundle\Theme\ChannelBasedThemeContext($this->get('sylius.context.channel'), $this->get('sylius.repository.theme'));
    }

    /**
     * Gets the 'sylius.controller.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_AddressService()
    {
        $this->services['sylius.controller.address'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.address'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.address'), $this->get('sylius.factory.address'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.address_log_entry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_AddressLogEntryService()
    {
        $this->services['sylius.controller.address_log_entry'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.address_log_entry'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.address_log_entry'), $this->get('sylius.factory.address_log_entry'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.adjustment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_AdjustmentService()
    {
        $this->services['sylius.controller.adjustment'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.adjustment'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.adjustment'), $this->get('sylius.factory.adjustment'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.admin.dashboard' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Controller\DashboardController A Sylius\Bundle\AdminBundle\Controller\DashboardController instance
     */
    protected function getSylius_Controller_Admin_DashboardService()
    {
        return $this->services['sylius.controller.admin.dashboard'] = new \Sylius\Bundle\AdminBundle\Controller\DashboardController($this->get('sylius.dashboard.statistics_provider'), $this->get('sylius.repository.channel'), $this->get('templating'), $this->get('router'));
    }

    /**
     * Gets the 'sylius.controller.admin.notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Controller\NotificationController A Sylius\Bundle\AdminBundle\Controller\NotificationController instance
     */
    protected function getSylius_Controller_Admin_NotificationService()
    {
        return $this->services['sylius.controller.admin.notification'] = new \Sylius\Bundle\AdminBundle\Controller\NotificationController(new \GuzzleHttp\Client(), new \Http\Message\MessageFactory\GuzzleMessageFactory(), 'http://gus.sylius.com/version');
    }

    /**
     * Gets the 'sylius.controller.admin_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Controller\UserController A Sylius\Bundle\UserBundle\Controller\UserController instance
     */
    protected function getSylius_Controller_AdminUserService()
    {
        $this->services['sylius.controller.admin_user'] = $instance = new \Sylius\Bundle\UserBundle\Controller\UserController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.admin_user'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.admin_user'), $this->get('sylius.factory.admin_user'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ChannelService()
    {
        $this->services['sylius.controller.channel'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.channel'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.channel'), $this->get('sylius.factory.channel'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.channel_pricing' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ChannelPricingService()
    {
        $this->services['sylius.controller.channel_pricing'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.channel_pricing'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.channel_pricing'), $this->get('sylius.factory.channel_pricing'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_CountryService()
    {
        $this->services['sylius.controller.country'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.country'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.country'), $this->get('sylius.factory.country'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_CurrencyService()
    {
        $this->services['sylius.controller.currency'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.currency'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.currency'), $this->get('sylius.factory.currency'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_CustomerService()
    {
        $this->services['sylius.controller.customer'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.customer'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.customer'), $this->get('sylius.factory.customer'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.customer_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_CustomerGroupService()
    {
        $this->services['sylius.controller.customer_group'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.customer_group'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.customer_group'), $this->get('sylius.factory.customer_group'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.customer_statistics' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Controller\CustomerStatisticsController A Sylius\Bundle\AdminBundle\Controller\CustomerStatisticsController instance
     */
    protected function getSylius_Controller_CustomerStatisticsService()
    {
        return $this->services['sylius.controller.customer_statistics'] = new \Sylius\Bundle\AdminBundle\Controller\CustomerStatisticsController($this->get('sylius.customer_statistics_provider'), $this->get('sylius.repository.customer'), $this->get('templating'));
    }

    /**
     * Gets the 'sylius.controller.exchange_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ExchangeRateService()
    {
        $this->services['sylius.controller.exchange_rate'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.exchange_rate'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.exchange_rate'), $this->get('sylius.factory.exchange_rate'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.gateway_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_GatewayConfigService()
    {
        $this->services['sylius.controller.gateway_config'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.gateway_config'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.gateway_config'), $this->get('sylius.factory.gateway_config'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.impersonate_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Controller\ImpersonateUserController A Sylius\Bundle\AdminBundle\Controller\ImpersonateUserController instance
     */
    protected function getSylius_Controller_ImpersonateUserService()
    {
        return $this->services['sylius.controller.impersonate_user'] = new \Sylius\Bundle\AdminBundle\Controller\ImpersonateUserController(new \Sylius\Bundle\CoreBundle\Security\UserImpersonator($this->get('session'), 'shop'), $this->get('security.authorization_checker'), $this->get('sylius.shop_user_provider.email_or_name_based'), $this->get('router'), 'ROLE_ADMINISTRATION_ACCESS');
    }

    /**
     * Gets the 'sylius.controller.inventory_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_InventoryUnitService()
    {
        $this->services['sylius.controller.inventory_unit'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.inventory_unit'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.inventory_unit'), $this->get('sylius.factory.inventory_unit'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_LocaleService()
    {
        $this->services['sylius.controller.locale'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.locale'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.locale'), $this->get('sylius.factory.locale'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.oauth_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_OauthUserService()
    {
        $this->services['sylius.controller.oauth_user'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.oauth_user'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.oauth_user'), $this->get('sylius.factory.oauth_user'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Controller\OrderController A Sylius\Bundle\CoreBundle\Controller\OrderController instance
     */
    protected function getSylius_Controller_OrderService()
    {
        $this->services['sylius.controller.order'] = $instance = new \Sylius\Bundle\CoreBundle\Controller\OrderController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.order'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.order'), $this->get('sylius.factory.order'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.order_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Controller\OrderItemController A Sylius\Bundle\OrderBundle\Controller\OrderItemController instance
     */
    protected function getSylius_Controller_OrderItemService()
    {
        $this->services['sylius.controller.order_item'] = $instance = new \Sylius\Bundle\OrderBundle\Controller\OrderItemController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.order_item'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.order_item'), $this->get('sylius.factory.cart_item'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.order_item_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_OrderItemUnitService()
    {
        $this->services['sylius.controller.order_item_unit'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.order_item_unit'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.order_item_unit'), $this->get('sylius.factory.order_item_unit'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_PaymentService()
    {
        $this->services['sylius.controller.payment'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.payment'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.payment'), $this->get('sylius.factory.payment'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Controller\PaymentMethodController A Sylius\Bundle\CoreBundle\Controller\PaymentMethodController instance
     */
    protected function getSylius_Controller_PaymentMethodService()
    {
        $this->services['sylius.controller.payment_method'] = $instance = new \Sylius\Bundle\CoreBundle\Controller\PaymentMethodController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.payment_method'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.payment_method'), $this->get('sylius.factory.payment_method'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.payment_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_PaymentMethodTranslationService()
    {
        $this->services['sylius.controller.payment_method_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.payment_method_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.payment_method_translation'), $this->get('sylius.factory.payment_method_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.payment_security_token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_PaymentSecurityTokenService()
    {
        $this->services['sylius.controller.payment_security_token'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.payment_security_token'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.payment_security_token'), $this->get('sylius.factory.payment_security_token'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.payum' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Controller\PayumController A Sylius\Bundle\PayumBundle\Controller\PayumController instance
     */
    protected function getSylius_Controller_PayumService()
    {
        return $this->services['sylius.controller.payum'] = new \Sylius\Bundle\PayumBundle\Controller\PayumController($this->get('payum'), $this->get('sylius.repository.order'), $this->get('sylius.form_registry.payum_gateway_config'), $this->get("sylius.resource_registry")->get("sylius.order"), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('router'));
    }

    /**
     * Gets the 'sylius.controller.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductService()
    {
        $this->services['sylius.controller.product'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product'), $this->get('sylius.factory.product'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductAssociationService()
    {
        $this->services['sylius.controller.product_association'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_association'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_association'), $this->get('sylius.factory.product_association'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_association_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductAssociationTypeService()
    {
        $this->services['sylius.controller.product_association_type'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_association_type'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_association_type'), $this->get('sylius.factory.product_association_type'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_association_type_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductAssociationTypeTranslationService()
    {
        $this->services['sylius.controller.product_association_type_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_association_type_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_association_type_translation'), $this->get('sylius.factory.product_association_type_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Controller\ProductAttributeController A Sylius\Bundle\ProductBundle\Controller\ProductAttributeController instance
     */
    protected function getSylius_Controller_ProductAttributeService()
    {
        $this->services['sylius.controller.product_attribute'] = $instance = new \Sylius\Bundle\ProductBundle\Controller\ProductAttributeController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_attribute'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_attribute'), $this->get('sylius.factory.product_attribute'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_attribute_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductAttributeTranslationService()
    {
        $this->services['sylius.controller.product_attribute_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_attribute_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_attribute_translation'), $this->get('sylius.factory.product_attribute_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductAttributeValueService()
    {
        $this->services['sylius.controller.product_attribute_value'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_attribute_value'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_attribute_value'), $this->get('sylius.factory.product_attribute_value'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductImageService()
    {
        $this->services['sylius.controller.product_image'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_image'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_image'), $this->get('sylius.factory.product_image'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductOptionService()
    {
        $this->services['sylius.controller.product_option'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_option'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_option'), $this->get('sylius.factory.product_option'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_option_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductOptionTranslationService()
    {
        $this->services['sylius.controller.product_option_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_option_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_option_translation'), $this->get('sylius.factory.product_option_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_option_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductOptionValueService()
    {
        $this->services['sylius.controller.product_option_value'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_option_value'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_option_value'), $this->get('sylius.factory.product_option_value'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_option_value_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductOptionValueTranslationService()
    {
        $this->services['sylius.controller.product_option_value_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_option_value_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_option_value_translation'), $this->get('sylius.factory.product_option_value_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductReviewService()
    {
        $this->services['sylius.controller.product_review'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_review'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_review'), $this->get('sylius.factory.product_review'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_slug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Controller\ProductSlugController A Sylius\Bundle\ProductBundle\Controller\ProductSlugController instance
     */
    protected function getSylius_Controller_ProductSlugService()
    {
        $this->services['sylius.controller.product_slug'] = $instance = new \Sylius\Bundle\ProductBundle\Controller\ProductSlugController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Controller\ProductTaxonController A Sylius\Bundle\CoreBundle\Controller\ProductTaxonController instance
     */
    protected function getSylius_Controller_ProductTaxonService()
    {
        $this->services['sylius.controller.product_taxon'] = $instance = new \Sylius\Bundle\CoreBundle\Controller\ProductTaxonController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_taxon'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_taxon'), $this->get('sylius.factory.product_taxon'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductTranslationService()
    {
        $this->services['sylius.controller.product_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_translation'), $this->get('sylius.factory.product_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_variant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Controller\ProductVariantController A Sylius\Bundle\CoreBundle\Controller\ProductVariantController instance
     */
    protected function getSylius_Controller_ProductVariantService()
    {
        $this->services['sylius.controller.product_variant'] = $instance = new \Sylius\Bundle\CoreBundle\Controller\ProductVariantController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_variant'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_variant'), $this->get('sylius.factory.product_variant'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.product_variant_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ProductVariantTranslationService()
    {
        $this->services['sylius.controller.product_variant_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.product_variant_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.product_variant_translation'), $this->get('sylius.factory.product_variant_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_PromotionService()
    {
        $this->services['sylius.controller.promotion'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.promotion'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.promotion'), $this->get('sylius.factory.promotion'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_PromotionActionService()
    {
        $this->services['sylius.controller.promotion_action'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.promotion_action'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.promotion_action'), $this->get('sylius.factory.promotion_action'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.promotion_coupon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Controller\PromotionCouponController A Sylius\Bundle\PromotionBundle\Controller\PromotionCouponController instance
     */
    protected function getSylius_Controller_PromotionCouponService()
    {
        $this->services['sylius.controller.promotion_coupon'] = $instance = new \Sylius\Bundle\PromotionBundle\Controller\PromotionCouponController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.promotion_coupon'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.promotion_coupon'), $this->get('sylius.factory.promotion_coupon'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.promotion_rule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_PromotionRuleService()
    {
        $this->services['sylius.controller.promotion_rule'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.promotion_rule'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.promotion_rule'), $this->get('sylius.factory.promotion_rule'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.province' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Controller\ProvinceController A Sylius\Bundle\AddressingBundle\Controller\ProvinceController instance
     */
    protected function getSylius_Controller_ProvinceService()
    {
        $this->services['sylius.controller.province'] = $instance = new \Sylius\Bundle\AddressingBundle\Controller\ProvinceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.province'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.province'), $this->get('sylius.factory.province'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UiBundle\Controller\SecurityController A Sylius\Bundle\UiBundle\Controller\SecurityController instance
     */
    protected function getSylius_Controller_SecurityService()
    {
        return $this->services['sylius.controller.security'] = new \Sylius\Bundle\UiBundle\Controller\SecurityController($this->get('security.authentication_utils'), $this->get('form.factory'), $this->get('templating'));
    }

    /**
     * Gets the 'sylius.controller.shipment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ShipmentService()
    {
        $this->services['sylius.controller.shipment'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.shipment'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.shipment'), $this->get('sylius.factory.shipment'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.shipment_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ShipmentUnitService()
    {
        $this->services['sylius.controller.shipment_unit'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.shipment_unit'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.shipment_unit'), $this->get('sylius.factory.shipment_unit'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.shipping_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ShippingCategoryService()
    {
        $this->services['sylius.controller.shipping_category'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.shipping_category'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.shipping_category'), $this->get('sylius.factory.shipping_category'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ShippingMethodService()
    {
        $this->services['sylius.controller.shipping_method'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.shipping_method'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.shipping_method'), $this->get('sylius.factory.shipping_method'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.shipping_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ShippingMethodTranslationService()
    {
        $this->services['sylius.controller.shipping_method_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.shipping_method_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.shipping_method_translation'), $this->get('sylius.factory.shipping_method_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.shop.contact' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\Controller\ContactController A Sylius\Bundle\ShopBundle\Controller\ContactController instance
     */
    protected function getSylius_Controller_Shop_ContactService()
    {
        return $this->services['sylius.controller.shop.contact'] = new \Sylius\Bundle\ShopBundle\Controller\ContactController($this->get('router'), $this->get('form.factory'), $this->get('templating'), $this->get('sylius.context.channel'), $this->get('sylius.context.customer'), $this->get('sylius.email_manager.contact'));
    }

    /**
     * Gets the 'sylius.controller.shop.currency_switch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\Controller\CurrencySwitchController A Sylius\Bundle\ShopBundle\Controller\CurrencySwitchController instance
     */
    protected function getSylius_Controller_Shop_CurrencySwitchService()
    {
        return $this->services['sylius.controller.shop.currency_switch'] = new \Sylius\Bundle\ShopBundle\Controller\CurrencySwitchController($this->get('templating'), $this->get('sylius.context.currency.channel_aware'), $this->get('sylius.storage.currency'), $this->get('sylius.context.channel'));
    }

    /**
     * Gets the 'sylius.controller.shop.homepage' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\Controller\HomepageController A Sylius\Bundle\ShopBundle\Controller\HomepageController instance
     */
    protected function getSylius_Controller_Shop_HomepageService()
    {
        return $this->services['sylius.controller.shop.homepage'] = new \Sylius\Bundle\ShopBundle\Controller\HomepageController($this->get('templating'));
    }

    /**
     * Gets the 'sylius.controller.shop.locale_switch' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\Controller\LocaleSwitchController A Sylius\Bundle\ShopBundle\Controller\LocaleSwitchController instance
     */
    protected function getSylius_Controller_Shop_LocaleSwitchService()
    {
        return $this->services['sylius.controller.shop.locale_switch'] = new \Sylius\Bundle\ShopBundle\Controller\LocaleSwitchController($this->get('templating'), $this->get('sylius.context.locale'), $this->get('sylius.locale_provider.channel_based'), new \Sylius\Bundle\ShopBundle\Locale\UrlBasedLocaleSwitcher($this->get('router')));
    }

    /**
     * Gets the 'sylius.controller.shop.security_widget' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\Controller\SecurityWidgetController A Sylius\Bundle\ShopBundle\Controller\SecurityWidgetController instance
     */
    protected function getSylius_Controller_Shop_SecurityWidgetService()
    {
        return $this->services['sylius.controller.shop.security_widget'] = new \Sylius\Bundle\ShopBundle\Controller\SecurityWidgetController($this->get('templating'));
    }

    /**
     * Gets the 'sylius.controller.shop_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Controller\UserController A Sylius\Bundle\UserBundle\Controller\UserController instance
     */
    protected function getSylius_Controller_ShopUserService()
    {
        $this->services['sylius.controller.shop_user'] = $instance = new \Sylius\Bundle\UserBundle\Controller\UserController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.shop_user'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.shop_user'), $this->get('sylius.factory.shop_user'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.tax_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_TaxCategoryService()
    {
        $this->services['sylius.controller.tax_category'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.tax_category'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.tax_category'), $this->get('sylius.factory.tax_category'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_TaxRateService()
    {
        $this->services['sylius.controller.tax_rate'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.tax_rate'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.tax_rate'), $this->get('sylius.factory.tax_rate'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_TaxonService()
    {
        $this->services['sylius.controller.taxon'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.taxon'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.taxon'), $this->get('sylius.factory.taxon'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.taxon_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_TaxonImageService()
    {
        $this->services['sylius.controller.taxon_image'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.taxon_image'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.taxon_image'), $this->get('sylius.factory.taxon_image'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.taxon_slug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxonomyBundle\Controller\TaxonSlugController A Sylius\Bundle\TaxonomyBundle\Controller\TaxonSlugController instance
     */
    protected function getSylius_Controller_TaxonSlugService()
    {
        $this->services['sylius.controller.taxon_slug'] = $instance = new \Sylius\Bundle\TaxonomyBundle\Controller\TaxonSlugController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.taxon_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_TaxonTranslationService()
    {
        $this->services['sylius.controller.taxon_translation'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.taxon_translation'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.taxon_translation'), $this->get('sylius.factory.taxon_translation'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.user_security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Controller\SecurityController A Sylius\Bundle\UserBundle\Controller\SecurityController instance
     */
    protected function getSylius_Controller_UserSecurityService()
    {
        $this->services['sylius.controller.user_security'] = $instance = new \Sylius\Bundle\UserBundle\Controller\SecurityController();

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.zone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ZoneService()
    {
        $this->services['sylius.controller.zone'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.zone'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.zone'), $this->get('sylius.factory.zone'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.controller.zone_member' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceController A Sylius\Bundle\ResourceBundle\Controller\ResourceController instance
     */
    protected function getSylius_Controller_ZoneMemberService()
    {
        $this->services['sylius.controller.zone_member'] = $instance = new \Sylius\Bundle\ResourceBundle\Controller\ResourceController(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}->get('sylius.zone_member'), ${($_ = isset($this->services['sylius.resource_controller.request_configuration_factory']) ? $this->services['sylius.resource_controller.request_configuration_factory'] : $this->getSylius_ResourceController_RequestConfigurationFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.view_handler']) ? $this->services['sylius.resource_controller.view_handler'] : $this->getSylius_ResourceController_ViewHandlerService()) && false ?: '_'}, $this->get('sylius.repository.zone_member'), $this->get('sylius.factory.zone_member'), ${($_ = isset($this->services['sylius.resource_controller.new_resource_factory']) ? $this->services['sylius.resource_controller.new_resource_factory'] : $this->getSylius_ResourceController_NewResourceFactoryService()) && false ?: '_'}, $this->get('doctrine.orm.default_entity_manager'), ${($_ = isset($this->services['sylius.resource_controller.single_resource_provider']) ? $this->services['sylius.resource_controller.single_resource_provider'] : $this->getSylius_ResourceController_SingleResourceProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.resources_collection_provider']) ? $this->services['sylius.resource_controller.resources_collection_provider'] : $this->getSylius_ResourceController_ResourcesCollectionProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.form_factory']) ? $this->services['sylius.resource_controller.form_factory'] : $this->getSylius_ResourceController_FormFactoryService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.redirect_handler']) ? $this->services['sylius.resource_controller.redirect_handler'] : $this->getSylius_ResourceController_RedirectHandlerService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.flash_helper']) ? $this->services['sylius.resource_controller.flash_helper'] : $this->getSylius_ResourceController_FlashHelperService()) && false ?: '_'}, $this->get('sylius.resource_controller.authorization_checker'), ${($_ = isset($this->services['sylius.resource_controller.event_dispatcher']) ? $this->services['sylius.resource_controller.event_dispatcher'] : $this->getSylius_ResourceController_EventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.custom_resource_controller.resource_update_handler']) ? $this->services['sylius.custom_resource_controller.resource_update_handler'] : $this->getSylius_CustomResourceController_ResourceUpdateHandlerService()) && false ?: '_'});

        $instance->setContainer($this);

        return $instance;
    }

    /**
     * Gets the 'sylius.converter.country_name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Addressing\Converter\CountryNameConverter A Sylius\Component\Addressing\Converter\CountryNameConverter instance
     */
    protected function getSylius_Converter_CountryNameService()
    {
        return $this->services['sylius.converter.country_name'] = new \Sylius\Component\Addressing\Converter\CountryNameConverter();
    }

    /**
     * Gets the 'sylius.currency_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Currency\Converter\CurrencyConverter A Sylius\Component\Currency\Converter\CurrencyConverter instance
     */
    protected function getSylius_CurrencyConverterService()
    {
        return $this->services['sylius.currency_converter'] = new \Sylius\Component\Currency\Converter\CurrencyConverter($this->get('sylius.repository.exchange_rate'));
    }

    /**
     * Gets the 'sylius.currency_name_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Currency\Converter\CurrencyNameConverter A Sylius\Component\Currency\Converter\CurrencyNameConverter instance
     */
    protected function getSylius_CurrencyNameConverterService()
    {
        return $this->services['sylius.currency_name_converter'] = new \Sylius\Component\Currency\Converter\CurrencyNameConverter();
    }

    /**
     * Gets the 'sylius.custom_grid_renderer.twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigGridRenderer A Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigGridRenderer instance
     */
    protected function getSylius_CustomGridRenderer_TwigService()
    {
        $a = $this->get('twig');

        $b = new \Sylius\Bundle\GridBundle\Form\Registry\FormTypeRegistry();
        $b->add('string', 'default', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\StringFilterType');
        $b->add('boolean', 'default', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\BooleanFilterType');
        $b->add('date', 'default', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\DateFilterType');
        $b->add('entity', 'default', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\EntityFilterType');
        $b->add('money', 'default', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\MoneyFilterType');
        $b->add('exists', 'default', 'Sylius\\Bundle\\GridBundle\\Form\\Type\\Filter\\ExistsFilterType');

        return $this->services['sylius.custom_grid_renderer.twig'] = new \Sylius\Bundle\ResourceBundle\Grid\Renderer\TwigGridRenderer(new \Sylius\Bundle\GridBundle\Renderer\TwigGridRenderer($a, $this->get('sylius.registry.grid_field'), $this->get('form.factory'), $b, 'SyliusGridBundle::_grid.html.twig', array('default' => '@SyliusUi/Grid/Action/default.html.twig', 'create' => '@SyliusUi/Grid/Action/create.html.twig', 'delete' => '@SyliusUi/Grid/Action/delete.html.twig', 'show' => '@SyliusUi/Grid/Action/show.html.twig', 'update' => '@SyliusUi/Grid/Action/update.html.twig', 'apply_transition' => '@SyliusUi/Grid/Action/applyTransition.html.twig', 'links' => '@SyliusUi/Grid/Action/links.html.twig', 'archive' => '@SyliusUi/Grid/Action/archive.html.twig', 'create_payment_method' => '@SyliusAdmin/PaymentMethod/Grid/Action/create.html.twig', 'create_product_attribute' => '@SyliusAdmin/ProductAttribute/Grid/Action/create.html.twig', 'generate_variants' => '@SyliusAdmin/Product/Grid/Action/generateVariants.html.twig', 'update_product_positions' => '@SyliusAdmin/Product/Grid/Action/updatePositions.html.twig', 'update_product_variant_positions' => '@SyliusAdmin/ProductVariant/Grid/Action/updatePositions.html.twig'), array('string' => '@SyliusUi/Grid/Filter/string.html.twig', 'boolean' => '@SyliusUi/Grid/Filter/boolean.html.twig', 'date' => '@SyliusUi/Grid/Filter/date.html.twig', 'entity' => '@SyliusUi/Grid/Filter/entity.html.twig', 'money' => '@SyliusUi/Grid/Filter/money.html.twig', 'exists' => '@SyliusUi/Grid/Filter/exists.html.twig')), $a, new \Sylius\Bundle\ResourceBundle\Grid\Parser\OptionsParser($this, ${($_ = isset($this->services['sylius.expression_language']) ? $this->services['sylius.expression_language'] : $this->getSylius_ExpressionLanguageService()) && false ?: '_'}, $this->get('property_accessor')), array('default' => '@SyliusUi/Grid/Action/default.html.twig', 'create' => '@SyliusUi/Grid/Action/create.html.twig', 'delete' => '@SyliusUi/Grid/Action/delete.html.twig', 'show' => '@SyliusUi/Grid/Action/show.html.twig', 'update' => '@SyliusUi/Grid/Action/update.html.twig', 'apply_transition' => '@SyliusUi/Grid/Action/applyTransition.html.twig', 'links' => '@SyliusUi/Grid/Action/links.html.twig', 'archive' => '@SyliusUi/Grid/Action/archive.html.twig', 'create_payment_method' => '@SyliusAdmin/PaymentMethod/Grid/Action/create.html.twig', 'create_product_attribute' => '@SyliusAdmin/ProductAttribute/Grid/Action/create.html.twig', 'generate_variants' => '@SyliusAdmin/Product/Grid/Action/generateVariants.html.twig', 'update_product_positions' => '@SyliusAdmin/Product/Grid/Action/updatePositions.html.twig', 'update_product_variant_positions' => '@SyliusAdmin/ProductVariant/Grid/Action/updatePositions.html.twig'));
    }

    /**
     * Gets the 'sylius.customer_ip_assigner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Assigner\CustomerIpAssigner A Sylius\Bundle\CoreBundle\Assigner\CustomerIpAssigner instance
     */
    protected function getSylius_CustomerIpAssignerService()
    {
        return $this->services['sylius.customer_ip_assigner'] = new \Sylius\Bundle\CoreBundle\Assigner\CustomerIpAssigner();
    }

    /**
     * Gets the 'sylius.customer_order_addresses_saver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Customer\CustomerOrderAddressesSaver A Sylius\Component\Core\Customer\CustomerOrderAddressesSaver instance
     */
    protected function getSylius_CustomerOrderAddressesSaverService()
    {
        return $this->services['sylius.customer_order_addresses_saver'] = new \Sylius\Component\Core\Customer\CustomerOrderAddressesSaver($this->get('sylius.customer_unique_address_adder'));
    }

    /**
     * Gets the 'sylius.customer_statistics_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Customer\Statistics\CustomerStatisticsProvider A Sylius\Component\Core\Customer\Statistics\CustomerStatisticsProvider instance
     */
    protected function getSylius_CustomerStatisticsProviderService()
    {
        return $this->services['sylius.customer_statistics_provider'] = new \Sylius\Component\Core\Customer\Statistics\CustomerStatisticsProvider($this->get('sylius.repository.order'), $this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.customer_unique_address_adder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Customer\CustomerUniqueAddressAdder A Sylius\Component\Core\Customer\CustomerUniqueAddressAdder instance
     */
    protected function getSylius_CustomerUniqueAddressAdderService()
    {
        return $this->services['sylius.customer_unique_address_adder'] = new \Sylius\Component\Core\Customer\CustomerUniqueAddressAdder($this->get('sylius.address_comparator'));
    }

    /**
     * Gets the 'sylius.dashboard.statistics_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Dashboard\DashboardStatisticsProvider A Sylius\Component\Core\Dashboard\DashboardStatisticsProvider instance
     */
    protected function getSylius_Dashboard_StatisticsProviderService()
    {
        return $this->services['sylius.dashboard.statistics_provider'] = new \Sylius\Component\Core\Dashboard\DashboardStatisticsProvider($this->get('sylius.repository.order'), $this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.doctrine.orm.event_subscriber.load_metadata.attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AttributeBundle\Doctrine\ORM\Subscriber\LoadMetadataSubscriber A Sylius\Bundle\AttributeBundle\Doctrine\ORM\Subscriber\LoadMetadataSubscriber instance
     */
    protected function getSylius_Doctrine_Orm_EventSubscriber_LoadMetadata_AttributeService()
    {
        return $this->services['sylius.doctrine.orm.event_subscriber.load_metadata.attribute'] = new \Sylius\Bundle\AttributeBundle\Doctrine\ORM\Subscriber\LoadMetadataSubscriber(array('product' => array('subject' => 'Sylius\\Component\\Core\\Model\\Product', 'attribute' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttribute', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeInterface', 'controller' => 'Sylius\\Bundle\\ProductBundle\\Controller\\ProductAttributeController', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeType', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory'))), 'attribute_value' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValue', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValueInterface', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeValueType', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')))));
    }

    /**
     * Gets the 'sylius.doctrine.orm.event_subscriber.load_metadata.review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ReviewBundle\Doctrine\ORM\Subscriber\LoadMetadataSubscriber A Sylius\Bundle\ReviewBundle\Doctrine\ORM\Subscriber\LoadMetadataSubscriber instance
     */
    protected function getSylius_Doctrine_Orm_EventSubscriber_LoadMetadata_ReviewService()
    {
        return $this->services['sylius.doctrine.orm.event_subscriber.load_metadata.review'] = new \Sylius\Bundle\ReviewBundle\Doctrine\ORM\Subscriber\LoadMetadataSubscriber(array('product' => array('subject' => 'Sylius\\Component\\Core\\Model\\Product', 'review' => array('classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ProductReview', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductReviewRepository', 'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ProductReviewType', 'interface' => 'Sylius\\Component\\Review\\Model\\ReviewInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')), 'reviewer' => array('classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Customer', 'interface' => 'Sylius\\Component\\Review\\Model\\ReviewerInterface', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')))));
    }

    /**
     * Gets the 'sylius.email_manager.contact' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EmailManager\ContactEmailManager A Sylius\Bundle\ShopBundle\EmailManager\ContactEmailManager instance
     */
    protected function getSylius_EmailManager_ContactService()
    {
        return $this->services['sylius.email_manager.contact'] = new \Sylius\Bundle\ShopBundle\EmailManager\ContactEmailManager($this->get('sylius.email_sender'));
    }

    /**
     * Gets the 'sylius.email_manager.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EmailManager\OrderEmailManager A Sylius\Bundle\ShopBundle\EmailManager\OrderEmailManager instance
     */
    protected function getSylius_EmailManager_OrderService()
    {
        return $this->services['sylius.email_manager.order'] = new \Sylius\Bundle\ShopBundle\EmailManager\OrderEmailManager($this->get('sylius.email_sender'));
    }

    /**
     * Gets the 'sylius.email_manager.shipment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\EmailManager\ShipmentEmailManager A Sylius\Bundle\AdminBundle\EmailManager\ShipmentEmailManager instance
     */
    protected function getSylius_EmailManager_ShipmentService()
    {
        return $this->services['sylius.email_manager.shipment'] = new \Sylius\Bundle\AdminBundle\EmailManager\ShipmentEmailManager($this->get('sylius.email_sender'));
    }

    /**
     * Gets the 'sylius.email_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Mailer\Provider\EmailProvider A Sylius\Component\Mailer\Provider\EmailProvider instance
     */
    protected function getSylius_EmailProviderService()
    {
        return $this->services['sylius.email_provider'] = new \Sylius\Component\Mailer\Provider\EmailProvider($this->get('sylius.factory.email'), array('shipment_confirmation' => array('subject' => 'sylius.emails.shipment_confirmation.subject', 'template' => 'SyliusAdminBundle:Email:shipmentConfirmation.html.twig', 'enabled' => true)));
    }

    /**
     * Gets the 'sylius.email_renderer.adapter.twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\MailerBundle\Renderer\Adapter\EmailTwigAdapter A Sylius\Bundle\MailerBundle\Renderer\Adapter\EmailTwigAdapter instance
     */
    protected function getSylius_EmailRenderer_Adapter_TwigService()
    {
        $this->services['sylius.email_renderer.adapter.twig'] = $instance = new \Sylius\Bundle\MailerBundle\Renderer\Adapter\EmailTwigAdapter($this->get('twig'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'sylius.email_sender' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Mailer\Sender\Sender A Sylius\Component\Mailer\Sender\Sender instance
     */
    protected function getSylius_EmailSenderService()
    {
        return $this->services['sylius.email_sender'] = new \Sylius\Component\Mailer\Sender\Sender($this->get('sylius.email_renderer.adapter.twig'), $this->get('sylius.email_sender.adapter.swiftmailer'), $this->get('sylius.email_provider'), $this->get('sylius.mailer.default_settings_provider'));
    }

    /**
     * Gets the 'sylius.email_sender.adapter.swiftmailer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\MailerBundle\Sender\Adapter\SwiftMailerAdapter A Sylius\Bundle\MailerBundle\Sender\Adapter\SwiftMailerAdapter instance
     */
    protected function getSylius_EmailSender_Adapter_SwiftmailerService()
    {
        $this->services['sylius.email_sender.adapter.swiftmailer'] = $instance = new \Sylius\Bundle\MailerBundle\Sender\Adapter\SwiftMailerAdapter($this->get('swiftmailer.mailer.default'));

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'sylius.event_subscriber.orm_mapped_super_class' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber A Sylius\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber instance
     */
    protected function getSylius_EventSubscriber_OrmMappedSuperClassService()
    {
        return $this->services['sylius.event_subscriber.orm_mapped_super_class'] = new \Sylius\Bundle\ResourceBundle\EventListener\ORMMappedSuperClassSubscriber(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'});
    }

    /**
     * Gets the 'sylius.event_subscriber.orm_repository_class' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber A Sylius\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber instance
     */
    protected function getSylius_EventSubscriber_OrmRepositoryClassService()
    {
        return $this->services['sylius.event_subscriber.orm_repository_class'] = new \Sylius\Bundle\ResourceBundle\EventListener\ORMRepositoryClassSubscriber(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'});
    }

    /**
     * Gets the 'sylius.event_subscriber.resource_delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\EventListener\ResourceDeleteSubscriber A Sylius\Bundle\AdminBundle\EventListener\ResourceDeleteSubscriber instance
     */
    protected function getSylius_EventSubscriber_ResourceDeleteService()
    {
        return $this->services['sylius.event_subscriber.resource_delete'] = new \Sylius\Bundle\AdminBundle\EventListener\ResourceDeleteSubscriber($this->get('router'), $this->get('session'));
    }

    /**
     * Gets the 'sylius.expired_carts_remover' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Remover\ExpiredCartsRemover A Sylius\Bundle\OrderBundle\Remover\ExpiredCartsRemover instance
     */
    protected function getSylius_ExpiredCartsRemoverService()
    {
        return $this->services['sylius.expired_carts_remover'] = new \Sylius\Bundle\OrderBundle\Remover\ExpiredCartsRemover($this->get('sylius.repository.order'), $this->get('doctrine.orm.default_entity_manager'), $this->get('debug.event_dispatcher'), '2 days');
    }

    /**
     * Gets the 'sylius.factory.add_to_cart_command' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Factory\AddToCartCommandFactory A Sylius\Bundle\OrderBundle\Factory\AddToCartCommandFactory instance
     */
    protected function getSylius_Factory_AddToCartCommandService()
    {
        return $this->services['sylius.factory.add_to_cart_command'] = new \Sylius\Bundle\OrderBundle\Factory\AddToCartCommandFactory();
    }

    /**
     * Gets the 'sylius.factory.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Factory\AddressFactory A Sylius\Component\Core\Factory\AddressFactory instance
     */
    protected function getSylius_Factory_AddressService()
    {
        return $this->services['sylius.factory.address'] = new \Sylius\Component\Core\Factory\AddressFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Address'));
    }

    /**
     * Gets the 'sylius.factory.address_log_entry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_AddressLogEntryService()
    {
        return $this->services['sylius.factory.address_log_entry'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\AddressLogEntry');
    }

    /**
     * Gets the 'sylius.factory.adjustment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Order\Factory\AdjustmentFactory A Sylius\Component\Order\Factory\AdjustmentFactory instance
     */
    protected function getSylius_Factory_AdjustmentService()
    {
        return $this->services['sylius.factory.adjustment'] = new \Sylius\Component\Order\Factory\AdjustmentFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Order\\Model\\Adjustment'));
    }

    /**
     * Gets the 'sylius.factory.admin_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_AdminUserService()
    {
        return $this->services['sylius.factory.admin_user'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\AdminUser');
    }

    /**
     * Gets the 'sylius.factory.cart_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Factory\CartItemFactory A Sylius\Component\Core\Factory\CartItemFactory instance
     */
    protected function getSylius_Factory_CartItemService()
    {
        return $this->services['sylius.factory.cart_item'] = new \Sylius\Component\Core\Factory\CartItemFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\OrderItem'), $this->get('sylius.product_variant_resolver.default'));
    }

    /**
     * Gets the 'sylius.factory.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Channel\Factory\ChannelFactory A Sylius\Component\Channel\Factory\ChannelFactory instance
     */
    protected function getSylius_Factory_ChannelService()
    {
        return $this->services['sylius.factory.channel'] = new \Sylius\Component\Channel\Factory\ChannelFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Channel'));
    }

    /**
     * Gets the 'sylius.factory.channel_pricing' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ChannelPricingService()
    {
        return $this->services['sylius.factory.channel_pricing'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ChannelPricing');
    }

    /**
     * Gets the 'sylius.factory.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_CountryService()
    {
        return $this->services['sylius.factory.country'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\Country');
    }

    /**
     * Gets the 'sylius.factory.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_CurrencyService()
    {
        return $this->services['sylius.factory.currency'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Currency\\Model\\Currency');
    }

    /**
     * Gets the 'sylius.factory.customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_CustomerService()
    {
        return $this->services['sylius.factory.customer'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Customer');
    }

    /**
     * Gets the 'sylius.factory.customer_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_CustomerGroupService()
    {
        return $this->services['sylius.factory.customer_group'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Customer\\Model\\CustomerGroup');
    }

    /**
     * Gets the 'sylius.factory.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Mailer\Factory\EmailFactory A Sylius\Component\Mailer\Factory\EmailFactory instance
     */
    protected function getSylius_Factory_EmailService()
    {
        return $this->services['sylius.factory.email'] = new \Sylius\Component\Mailer\Factory\EmailFactory();
    }

    /**
     * Gets the 'sylius.factory.exchange_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ExchangeRateService()
    {
        return $this->services['sylius.factory.exchange_rate'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Currency\\Model\\ExchangeRate');
    }

    /**
     * Gets the 'sylius.factory.gateway_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_GatewayConfigService()
    {
        return $this->services['sylius.factory.gateway_config'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig');
    }

    /**
     * Gets the 'sylius.factory.inventory_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_InventoryUnitService()
    {
        return $this->services['sylius.factory.inventory_unit'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\OrderItemUnit');
    }

    /**
     * Gets the 'sylius.factory.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_LocaleService()
    {
        return $this->services['sylius.factory.locale'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Locale\\Model\\Locale');
    }

    /**
     * Gets the 'sylius.factory.oauth_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_OauthUserService()
    {
        return $this->services['sylius.factory.oauth_user'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\User\\Model\\UserOAuth');
    }

    /**
     * Gets the 'sylius.factory.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_OrderService()
    {
        return $this->services['sylius.factory.order'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Order');
    }

    /**
     * Gets the 'sylius.factory.order_item_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Order\Factory\OrderItemUnitFactory A Sylius\Component\Order\Factory\OrderItemUnitFactory instance
     */
    protected function getSylius_Factory_OrderItemUnitService()
    {
        return $this->services['sylius.factory.order_item_unit'] = new \Sylius\Component\Order\Factory\OrderItemUnitFactory('Sylius\\Component\\Core\\Model\\OrderItemUnit');
    }

    /**
     * Gets the 'sylius.factory.order_sequence' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_OrderSequenceService()
    {
        return $this->services['sylius.factory.order_sequence'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\OrderSequence');
    }

    /**
     * Gets the 'sylius.factory.payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Payment\Factory\PaymentFactory A Sylius\Component\Payment\Factory\PaymentFactory instance
     */
    protected function getSylius_Factory_PaymentService()
    {
        return $this->services['sylius.factory.payment'] = new \Sylius\Component\Payment\Factory\PaymentFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Payment'));
    }

    /**
     * Gets the 'sylius.factory.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Factory\PaymentMethodFactory A Sylius\Component\Core\Factory\PaymentMethodFactory instance
     */
    protected function getSylius_Factory_PaymentMethodService()
    {
        return $this->services['sylius.factory.payment_method'] = new \Sylius\Component\Core\Factory\PaymentMethodFactory(new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\PaymentMethod'), $this->get('sylius.translation_locale_provider.admin')), $this->get('sylius.factory.gateway_config'));
    }

    /**
     * Gets the 'sylius.factory.payment_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_PaymentMethodTranslationService()
    {
        return $this->services['sylius.factory.payment_method_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation');
    }

    /**
     * Gets the 'sylius.factory.payment_security_token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_PaymentSecurityTokenService()
    {
        return $this->services['sylius.factory.payment_security_token'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken');
    }

    /**
     * Gets the 'sylius.factory.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Product\Factory\ProductFactory A Sylius\Component\Product\Factory\ProductFactory instance
     */
    protected function getSylius_Factory_ProductService()
    {
        return $this->services['sylius.factory.product'] = new \Sylius\Component\Product\Factory\ProductFactory(new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Product'), $this->get('sylius.translation_locale_provider.admin')), $this->get('sylius.factory.product_variant'));
    }

    /**
     * Gets the 'sylius.factory.product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductAssociationService()
    {
        return $this->services['sylius.factory.product_association'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductAssociation');
    }

    /**
     * Gets the 'sylius.factory.product_association_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\TranslatableFactory A Sylius\Component\Resource\Factory\TranslatableFactory instance
     */
    protected function getSylius_Factory_ProductAssociationTypeService()
    {
        return $this->services['sylius.factory.product_association_type'] = new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductAssociationType'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.factory.product_association_type_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductAssociationTypeTranslationService()
    {
        return $this->services['sylius.factory.product_association_type_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation');
    }

    /**
     * Gets the 'sylius.factory.product_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Attribute\Factory\AttributeFactory A Sylius\Component\Attribute\Factory\AttributeFactory instance
     */
    protected function getSylius_Factory_ProductAttributeService()
    {
        $a = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Attribute\\AttributeType\\AttributeTypeInterface', 'attribute type');
        $a->register('text', $this->get('sylius.attribute_type.text'));
        $a->register('textarea', $this->get('sylius.attribute_type.textarea'));
        $a->register('checkbox', $this->get('sylius.attribute_type.checkbox'));
        $a->register('integer', $this->get('sylius.attribute_type.integer'));
        $a->register('percent', $this->get('sylius.attribute_type.percent'));
        $a->register('datetime', $this->get('sylius.attribute_type.datetime'));
        $a->register('date', $this->get('sylius.attribute_type.date'));
        $a->register('select', $this->get('sylius.attribute_type.select'));

        return $this->services['sylius.factory.product_attribute'] = new \Sylius\Component\Attribute\Factory\AttributeFactory(new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductAttribute'), $this->get('sylius.translation_locale_provider.admin')), $a);
    }

    /**
     * Gets the 'sylius.factory.product_attribute_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductAttributeTranslationService()
    {
        return $this->services['sylius.factory.product_attribute_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductAttributeTranslation');
    }

    /**
     * Gets the 'sylius.factory.product_attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductAttributeValueService()
    {
        return $this->services['sylius.factory.product_attribute_value'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductAttributeValue');
    }

    /**
     * Gets the 'sylius.factory.product_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductImageService()
    {
        return $this->services['sylius.factory.product_image'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ProductImage');
    }

    /**
     * Gets the 'sylius.factory.product_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\TranslatableFactory A Sylius\Component\Resource\Factory\TranslatableFactory instance
     */
    protected function getSylius_Factory_ProductOptionService()
    {
        return $this->services['sylius.factory.product_option'] = new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductOption'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.factory.product_option_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductOptionTranslationService()
    {
        return $this->services['sylius.factory.product_option_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductOptionTranslation');
    }

    /**
     * Gets the 'sylius.factory.product_option_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\TranslatableFactory A Sylius\Component\Resource\Factory\TranslatableFactory instance
     */
    protected function getSylius_Factory_ProductOptionValueService()
    {
        return $this->services['sylius.factory.product_option_value'] = new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductOptionValue'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.factory.product_option_value_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductOptionValueTranslationService()
    {
        return $this->services['sylius.factory.product_option_value_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation');
    }

    /**
     * Gets the 'sylius.factory.product_review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Review\Factory\ReviewFactory A Sylius\Component\Review\Factory\ReviewFactory instance
     */
    protected function getSylius_Factory_ProductReviewService()
    {
        return $this->services['sylius.factory.product_review'] = new \Sylius\Component\Review\Factory\ReviewFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ProductReview'));
    }

    /**
     * Gets the 'sylius.factory.product_reviewer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductReviewerService()
    {
        return $this->services['sylius.factory.product_reviewer'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Customer');
    }

    /**
     * Gets the 'sylius.factory.product_taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductTaxonService()
    {
        return $this->services['sylius.factory.product_taxon'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ProductTaxon');
    }

    /**
     * Gets the 'sylius.factory.product_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductTranslationService()
    {
        return $this->services['sylius.factory.product_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ProductTranslation');
    }

    /**
     * Gets the 'sylius.factory.product_variant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Product\Factory\ProductVariantFactory A Sylius\Component\Product\Factory\ProductVariantFactory instance
     */
    protected function getSylius_Factory_ProductVariantService()
    {
        return $this->services['sylius.factory.product_variant'] = new \Sylius\Component\Product\Factory\ProductVariantFactory(new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ProductVariant'), $this->get('sylius.translation_locale_provider.admin')));
    }

    /**
     * Gets the 'sylius.factory.product_variant_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProductVariantTranslationService()
    {
        return $this->services['sylius.factory.product_variant_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Product\\Model\\ProductVariantTranslation');
    }

    /**
     * Gets the 'sylius.factory.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_PromotionService()
    {
        return $this->services['sylius.factory.promotion'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Promotion');
    }

    /**
     * Gets the 'sylius.factory.promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Factory\PromotionActionFactory A Sylius\Component\Core\Factory\PromotionActionFactory instance
     */
    protected function getSylius_Factory_PromotionActionService()
    {
        return $this->services['sylius.factory.promotion_action'] = new \Sylius\Component\Core\Factory\PromotionActionFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Promotion\\Model\\PromotionAction'));
    }

    /**
     * Gets the 'sylius.factory.promotion_coupon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Factory\PromotionCouponFactory A Sylius\Component\Promotion\Factory\PromotionCouponFactory instance
     */
    protected function getSylius_Factory_PromotionCouponService()
    {
        return $this->services['sylius.factory.promotion_coupon'] = new \Sylius\Component\Promotion\Factory\PromotionCouponFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\PromotionCoupon'));
    }

    /**
     * Gets the 'sylius.factory.promotion_rule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Factory\PromotionRuleFactory A Sylius\Component\Core\Factory\PromotionRuleFactory instance
     */
    protected function getSylius_Factory_PromotionRuleService()
    {
        return $this->services['sylius.factory.promotion_rule'] = new \Sylius\Component\Core\Factory\PromotionRuleFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Promotion\\Model\\PromotionRule'));
    }

    /**
     * Gets the 'sylius.factory.province' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ProvinceService()
    {
        return $this->services['sylius.factory.province'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\Province');
    }

    /**
     * Gets the 'sylius.factory.shipment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ShipmentService()
    {
        return $this->services['sylius.factory.shipment'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Shipment');
    }

    /**
     * Gets the 'sylius.factory.shipment_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ShipmentUnitService()
    {
        return $this->services['sylius.factory.shipment_unit'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\OrderItemUnit');
    }

    /**
     * Gets the 'sylius.factory.shipping_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ShippingCategoryService()
    {
        return $this->services['sylius.factory.shipping_category'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Shipping\\Model\\ShippingCategory');
    }

    /**
     * Gets the 'sylius.factory.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\TranslatableFactory A Sylius\Component\Resource\Factory\TranslatableFactory instance
     */
    protected function getSylius_Factory_ShippingMethodService()
    {
        return $this->services['sylius.factory.shipping_method'] = new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ShippingMethod'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.factory.shipping_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ShippingMethodTranslationService()
    {
        return $this->services['sylius.factory.shipping_method_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation');
    }

    /**
     * Gets the 'sylius.factory.shop_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ShopUserService()
    {
        return $this->services['sylius.factory.shop_user'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\ShopUser');
    }

    /**
     * Gets the 'sylius.factory.tax_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_TaxCategoryService()
    {
        return $this->services['sylius.factory.tax_category'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Taxation\\Model\\TaxCategory');
    }

    /**
     * Gets the 'sylius.factory.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_TaxRateService()
    {
        return $this->services['sylius.factory.tax_rate'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\TaxRate');
    }

    /**
     * Gets the 'sylius.factory.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Taxonomy\Factory\TaxonFactory A Sylius\Component\Taxonomy\Factory\TaxonFactory instance
     */
    protected function getSylius_Factory_TaxonService()
    {
        return $this->services['sylius.factory.taxon'] = new \Sylius\Component\Taxonomy\Factory\TaxonFactory(new \Sylius\Component\Resource\Factory\TranslatableFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\Taxon'), $this->get('sylius.translation_locale_provider.admin')));
    }

    /**
     * Gets the 'sylius.factory.taxon_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_TaxonImageService()
    {
        return $this->services['sylius.factory.taxon_image'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Core\\Model\\TaxonImage');
    }

    /**
     * Gets the 'sylius.factory.taxon_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_TaxonTranslationService()
    {
        return $this->services['sylius.factory.taxon_translation'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation');
    }

    /**
     * Gets the 'sylius.factory.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Factory\ThemeFactory A Sylius\Bundle\ThemeBundle\Factory\ThemeFactory instance
     */
    protected function getSylius_Factory_ThemeService()
    {
        return $this->services['sylius.factory.theme'] = new \Sylius\Bundle\ThemeBundle\Factory\ThemeFactory();
    }

    /**
     * Gets the 'sylius.factory.zone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Addressing\Factory\ZoneFactory A Sylius\Component\Addressing\Factory\ZoneFactory instance
     */
    protected function getSylius_Factory_ZoneService()
    {
        return $this->services['sylius.factory.zone'] = new \Sylius\Component\Addressing\Factory\ZoneFactory(new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\Zone'), $this->get('sylius.factory.zone_member'));
    }

    /**
     * Gets the 'sylius.factory.zone_member' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Factory\Factory A Sylius\Component\Resource\Factory\Factory instance
     */
    protected function getSylius_Factory_ZoneMemberService()
    {
        return $this->services['sylius.factory.zone_member'] = new \Sylius\Component\Resource\Factory\Factory('Sylius\\Component\\Addressing\\Model\\ZoneMember');
    }

    /**
     * Gets the 'sylius.fixture.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\AddressFixture A Sylius\Bundle\CoreBundle\Fixture\AddressFixture instance
     */
    protected function getSylius_Fixture_AddressService()
    {
        return $this->services['sylius.fixture.address'] = new \Sylius\Bundle\CoreBundle\Fixture\AddressFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.address'));
    }

    /**
     * Gets the 'sylius.fixture.admin_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\AdminUserFixture A Sylius\Bundle\CoreBundle\Fixture\AdminUserFixture instance
     */
    protected function getSylius_Fixture_AdminUserService()
    {
        return $this->services['sylius.fixture.admin_user'] = new \Sylius\Bundle\CoreBundle\Fixture\AdminUserFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.admin_user'));
    }

    /**
     * Gets the 'sylius.fixture.book_product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\BookProductFixture A Sylius\Bundle\CoreBundle\Fixture\BookProductFixture instance
     */
    protected function getSylius_Fixture_BookProductService()
    {
        return $this->services['sylius.fixture.book_product'] = new \Sylius\Bundle\CoreBundle\Fixture\BookProductFixture($this->get('sylius.fixture.taxon'), $this->get('sylius.fixture.product_attribute'), $this->get('sylius.fixture.product'));
    }

    /**
     * Gets the 'sylius.fixture.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ChannelFixture A Sylius\Bundle\CoreBundle\Fixture\ChannelFixture instance
     */
    protected function getSylius_Fixture_ChannelService()
    {
        return $this->services['sylius.fixture.channel'] = new \Sylius\Bundle\CoreBundle\Fixture\ChannelFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.channel'));
    }

    /**
     * Gets the 'sylius.fixture.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\CurrencyFixture A Sylius\Bundle\CoreBundle\Fixture\CurrencyFixture instance
     */
    protected function getSylius_Fixture_CurrencyService()
    {
        return $this->services['sylius.fixture.currency'] = new \Sylius\Bundle\CoreBundle\Fixture\CurrencyFixture($this->get('sylius.factory.currency'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.fixture.customer_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\CustomerGroupFixture A Sylius\Bundle\CoreBundle\Fixture\CustomerGroupFixture instance
     */
    protected function getSylius_Fixture_CustomerGroupService()
    {
        return $this->services['sylius.fixture.customer_group'] = new \Sylius\Bundle\CoreBundle\Fixture\CustomerGroupFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.customer_group'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\AddressExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\AddressExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_AddressService()
    {
        return $this->services['sylius.fixture.example_factory.address'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\AddressExampleFactory($this->get('sylius.factory.address'), $this->get('sylius.repository.country'), $this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.admin_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\AdminUserExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\AdminUserExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_AdminUserService()
    {
        return $this->services['sylius.fixture.example_factory.admin_user'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\AdminUserExampleFactory($this->get('sylius.factory.admin_user'), 'en_US');
    }

    /**
     * Gets the 'sylius.fixture.example_factory.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ChannelExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ChannelExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ChannelService()
    {
        return $this->services['sylius.fixture.example_factory.channel'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ChannelExampleFactory($this->get('sylius.factory.channel'), $this->get('sylius.repository.locale'), $this->get('sylius.repository.currency'), $this->get('sylius.repository.zone'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.customer_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\CustomerGroupExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\CustomerGroupExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_CustomerGroupService()
    {
        return $this->services['sylius.fixture.example_factory.customer_group'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\CustomerGroupExampleFactory($this->get('sylius.factory.customer_group'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\PaymentMethodExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\PaymentMethodExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_PaymentMethodService()
    {
        return $this->services['sylius.fixture.example_factory.payment_method'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\PaymentMethodExampleFactory($this->get('sylius.factory.payment_method'), $this->get('sylius.repository.locale'), $this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ProductExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ProductService()
    {
        return $this->services['sylius.fixture.example_factory.product'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductExampleFactory($this->get('sylius.factory.product'), $this->get('sylius.factory.product_variant'), $this->get('sylius.factory.channel_pricing'), $this->get('sylius.generator.product_variant'), $this->get('sylius.factory.product_attribute_value'), $this->get('sylius.factory.product_image'), $this->get('sylius.factory.product_taxon'), $this->get('sylius.image_uploader'), $this->get('sylius.generator.slug'), $this->get('sylius.repository.taxon'), $this->get('sylius.repository.product_attribute'), $this->get('sylius.repository.product_option'), $this->get('sylius.repository.channel'), $this->get('sylius.repository.locale'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAssociationExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAssociationExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ProductAssociationService()
    {
        return $this->services['sylius.fixture.example_factory.product_association'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAssociationExampleFactory($this->get('sylius.factory.product_association'), $this->get('sylius.repository.product_association_type'), $this->get('sylius.repository.product'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.product_association_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAssociationTypeExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAssociationTypeExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ProductAssociationTypeService()
    {
        return $this->services['sylius.fixture.example_factory.product_association_type'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAssociationTypeExampleFactory($this->get('sylius.factory.product_association_type'), $this->get('sylius.repository.locale'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.product_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAttributeExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAttributeExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ProductAttributeService()
    {
        return $this->services['sylius.fixture.example_factory.product_attribute'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductAttributeExampleFactory($this->get('sylius.factory.product_attribute'), $this->get('sylius.repository.locale'), array('text' => 'Text', 'textarea' => 'Textarea', 'checkbox' => 'Checkbox', 'integer' => 'Integer', 'percent' => 'Percent', 'datetime' => 'Datetime', 'date' => 'Date', 'select' => 'Select'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.product_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductOptionExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ProductOptionExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ProductOptionService()
    {
        return $this->services['sylius.fixture.example_factory.product_option'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductOptionExampleFactory($this->get('sylius.factory.product_option'), $this->get('sylius.factory.product_option_value'), $this->get('sylius.repository.locale'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.product_review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductReviewExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ProductReviewExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ProductReviewService()
    {
        return $this->services['sylius.fixture.example_factory.product_review'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ProductReviewExampleFactory($this->get('sylius.factory.product_review'), $this->get('sylius.repository.product'), $this->get('sylius.repository.customer'), $this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_PromotionService()
    {
        return $this->services['sylius.fixture.example_factory.promotion'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionExampleFactory($this->get('sylius.factory.promotion'), $this->get('sylius.fixture.example_factory.promotion_rule'), $this->get('sylius.fixture.example_factory.promotion_action'), $this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionActionExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionActionExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_PromotionActionService()
    {
        return $this->services['sylius.fixture.example_factory.promotion_action'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionActionExampleFactory($this->get('sylius.factory.promotion_action'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.promotion_rule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionRuleExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionRuleExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_PromotionRuleService()
    {
        return $this->services['sylius.fixture.example_factory.promotion_rule'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\PromotionRuleExampleFactory($this->get('sylius.factory.promotion_rule'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.shipping_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ShippingCategoryExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ShippingCategoryExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ShippingCategoryService()
    {
        return $this->services['sylius.fixture.example_factory.shipping_category'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ShippingCategoryExampleFactory($this->get('sylius.factory.shipping_category'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ShippingMethodExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ShippingMethodExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ShippingMethodService()
    {
        return $this->services['sylius.fixture.example_factory.shipping_method'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ShippingMethodExampleFactory($this->get('sylius.factory.shipping_method'), $this->get('sylius.repository.zone'), $this->get('sylius.repository.shipping_category'), $this->get('sylius.repository.locale'), $this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.shop_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\ShopUserExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\ShopUserExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_ShopUserService()
    {
        return $this->services['sylius.fixture.example_factory.shop_user'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\ShopUserExampleFactory($this->get('sylius.factory.shop_user'), $this->get('sylius.factory.customer'), $this->get('sylius.repository.customer_group'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.tax_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\TaxCategoryExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\TaxCategoryExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_TaxCategoryService()
    {
        return $this->services['sylius.fixture.example_factory.tax_category'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\TaxCategoryExampleFactory($this->get('sylius.factory.tax_category'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\TaxRateExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\TaxRateExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_TaxRateService()
    {
        return $this->services['sylius.fixture.example_factory.tax_rate'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\TaxRateExampleFactory($this->get('sylius.factory.tax_rate'), $this->get('sylius.repository.zone'), $this->get('sylius.repository.tax_category'));
    }

    /**
     * Gets the 'sylius.fixture.example_factory.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\Factory\TaxonExampleFactory A Sylius\Bundle\CoreBundle\Fixture\Factory\TaxonExampleFactory instance
     */
    protected function getSylius_Fixture_ExampleFactory_TaxonService()
    {
        return $this->services['sylius.fixture.example_factory.taxon'] = new \Sylius\Bundle\CoreBundle\Fixture\Factory\TaxonExampleFactory($this->get('sylius.factory.taxon'), $this->get('sylius.repository.taxon'), $this->get('sylius.repository.locale'), $this->get('sylius.generator.taxon_slug'));
    }

    /**
     * Gets the 'sylius.fixture.geographical' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\GeographicalFixture A Sylius\Bundle\CoreBundle\Fixture\GeographicalFixture instance
     */
    protected function getSylius_Fixture_GeographicalService()
    {
        $a = $this->get('doctrine.orm.default_entity_manager');

        return $this->services['sylius.fixture.geographical'] = new \Sylius\Bundle\CoreBundle\Fixture\GeographicalFixture($this->get('sylius.factory.country'), $a, $this->get('sylius.factory.province'), $a, $this->get('sylius.factory.zone'), $a);
    }

    /**
     * Gets the 'sylius.fixture.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\LocaleFixture A Sylius\Bundle\CoreBundle\Fixture\LocaleFixture instance
     */
    protected function getSylius_Fixture_LocaleService()
    {
        return $this->services['sylius.fixture.locale'] = new \Sylius\Bundle\CoreBundle\Fixture\LocaleFixture($this->get('sylius.factory.locale'), $this->get('doctrine.orm.default_entity_manager'), 'en_US');
    }

    /**
     * Gets the 'sylius.fixture.mug_product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\MugProductFixture A Sylius\Bundle\CoreBundle\Fixture\MugProductFixture instance
     */
    protected function getSylius_Fixture_MugProductService()
    {
        return $this->services['sylius.fixture.mug_product'] = new \Sylius\Bundle\CoreBundle\Fixture\MugProductFixture($this->get('sylius.fixture.taxon'), $this->get('sylius.fixture.product_attribute'), $this->get('sylius.fixture.product_option'), $this->get('sylius.fixture.product'));
    }

    /**
     * Gets the 'sylius.fixture.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\OrderFixture A Sylius\Bundle\CoreBundle\Fixture\OrderFixture instance
     */
    protected function getSylius_Fixture_OrderService()
    {
        return $this->services['sylius.fixture.order'] = new \Sylius\Bundle\CoreBundle\Fixture\OrderFixture($this->get('sylius.factory.order'), $this->get('sylius.factory.cart_item'), $this->get('sylius.order_item_quantity_modifier.limiting'), $this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.repository.channel'), $this->get('sylius.repository.customer'), $this->get('sylius.repository.product'), $this->get('sylius.repository.country'), $this->get('sylius.repository.payment_method'), $this->get('sylius.repository.shipping_method'), $this->get('sylius.factory.address'), $this->get('sm.factory'), $this->get('sylius.checker.order_shipping_method_selection_requirement'), $this->get('sylius.checker.order_payment_method_selection_requirement'));
    }

    /**
     * Gets the 'sylius.fixture.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\PaymentMethodFixture A Sylius\Bundle\CoreBundle\Fixture\PaymentMethodFixture instance
     */
    protected function getSylius_Fixture_PaymentMethodService()
    {
        return $this->services['sylius.fixture.payment_method'] = new \Sylius\Bundle\CoreBundle\Fixture\PaymentMethodFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.payment_method'));
    }

    /**
     * Gets the 'sylius.fixture.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ProductFixture A Sylius\Bundle\CoreBundle\Fixture\ProductFixture instance
     */
    protected function getSylius_Fixture_ProductService()
    {
        return $this->services['sylius.fixture.product'] = new \Sylius\Bundle\CoreBundle\Fixture\ProductFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.product'));
    }

    /**
     * Gets the 'sylius.fixture.product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ProductAssociationFixture A Sylius\Bundle\CoreBundle\Fixture\ProductAssociationFixture instance
     */
    protected function getSylius_Fixture_ProductAssociationService()
    {
        return $this->services['sylius.fixture.product_association'] = new \Sylius\Bundle\CoreBundle\Fixture\ProductAssociationFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.product_association'));
    }

    /**
     * Gets the 'sylius.fixture.product_association_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ProductAssociationTypeFixture A Sylius\Bundle\CoreBundle\Fixture\ProductAssociationTypeFixture instance
     */
    protected function getSylius_Fixture_ProductAssociationTypeService()
    {
        return $this->services['sylius.fixture.product_association_type'] = new \Sylius\Bundle\CoreBundle\Fixture\ProductAssociationTypeFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.product_association_type'));
    }

    /**
     * Gets the 'sylius.fixture.product_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ProductAttributeFixture A Sylius\Bundle\CoreBundle\Fixture\ProductAttributeFixture instance
     */
    protected function getSylius_Fixture_ProductAttributeService()
    {
        return $this->services['sylius.fixture.product_attribute'] = new \Sylius\Bundle\CoreBundle\Fixture\ProductAttributeFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.product_attribute'), array('text' => 'Text', 'textarea' => 'Textarea', 'checkbox' => 'Checkbox', 'integer' => 'Integer', 'percent' => 'Percent', 'datetime' => 'Datetime', 'date' => 'Date', 'select' => 'Select'));
    }

    /**
     * Gets the 'sylius.fixture.product_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ProductOptionFixture A Sylius\Bundle\CoreBundle\Fixture\ProductOptionFixture instance
     */
    protected function getSylius_Fixture_ProductOptionService()
    {
        return $this->services['sylius.fixture.product_option'] = new \Sylius\Bundle\CoreBundle\Fixture\ProductOptionFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.product_option'));
    }

    /**
     * Gets the 'sylius.fixture.product_review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ProductReviewFixture A Sylius\Bundle\CoreBundle\Fixture\ProductReviewFixture instance
     */
    protected function getSylius_Fixture_ProductReviewService()
    {
        return $this->services['sylius.fixture.product_review'] = new \Sylius\Bundle\CoreBundle\Fixture\ProductReviewFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.product_review'));
    }

    /**
     * Gets the 'sylius.fixture.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\PromotionFixture A Sylius\Bundle\CoreBundle\Fixture\PromotionFixture instance
     */
    protected function getSylius_Fixture_PromotionService()
    {
        return $this->services['sylius.fixture.promotion'] = new \Sylius\Bundle\CoreBundle\Fixture\PromotionFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.promotion'));
    }

    /**
     * Gets the 'sylius.fixture.shipping_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ShippingCategoryFixture A Sylius\Bundle\CoreBundle\Fixture\ShippingCategoryFixture instance
     */
    protected function getSylius_Fixture_ShippingCategoryService()
    {
        return $this->services['sylius.fixture.shipping_category'] = new \Sylius\Bundle\CoreBundle\Fixture\ShippingCategoryFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.shipping_category'));
    }

    /**
     * Gets the 'sylius.fixture.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ShippingMethodFixture A Sylius\Bundle\CoreBundle\Fixture\ShippingMethodFixture instance
     */
    protected function getSylius_Fixture_ShippingMethodService()
    {
        return $this->services['sylius.fixture.shipping_method'] = new \Sylius\Bundle\CoreBundle\Fixture\ShippingMethodFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.shipping_method'));
    }

    /**
     * Gets the 'sylius.fixture.shop_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\ShopUserFixture A Sylius\Bundle\CoreBundle\Fixture\ShopUserFixture instance
     */
    protected function getSylius_Fixture_ShopUserService()
    {
        return $this->services['sylius.fixture.shop_user'] = new \Sylius\Bundle\CoreBundle\Fixture\ShopUserFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.shop_user'));
    }

    /**
     * Gets the 'sylius.fixture.similar_product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\SimilarProductAssociationFixture A Sylius\Bundle\CoreBundle\Fixture\SimilarProductAssociationFixture instance
     */
    protected function getSylius_Fixture_SimilarProductAssociationService()
    {
        return $this->services['sylius.fixture.similar_product_association'] = new \Sylius\Bundle\CoreBundle\Fixture\SimilarProductAssociationFixture($this->get('sylius.fixture.product_association_type'), $this->get('sylius.fixture.product_association'), $this->get('sylius.repository.product'));
    }

    /**
     * Gets the 'sylius.fixture.sticker_product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\StickerProductFixture A Sylius\Bundle\CoreBundle\Fixture\StickerProductFixture instance
     */
    protected function getSylius_Fixture_StickerProductService()
    {
        return $this->services['sylius.fixture.sticker_product'] = new \Sylius\Bundle\CoreBundle\Fixture\StickerProductFixture($this->get('sylius.fixture.taxon'), $this->get('sylius.fixture.product_attribute'), $this->get('sylius.fixture.product_option'), $this->get('sylius.fixture.product'));
    }

    /**
     * Gets the 'sylius.fixture.tax_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\TaxCategoryFixture A Sylius\Bundle\CoreBundle\Fixture\TaxCategoryFixture instance
     */
    protected function getSylius_Fixture_TaxCategoryService()
    {
        return $this->services['sylius.fixture.tax_category'] = new \Sylius\Bundle\CoreBundle\Fixture\TaxCategoryFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.tax_category'));
    }

    /**
     * Gets the 'sylius.fixture.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\TaxRateFixture A Sylius\Bundle\CoreBundle\Fixture\TaxRateFixture instance
     */
    protected function getSylius_Fixture_TaxRateService()
    {
        return $this->services['sylius.fixture.tax_rate'] = new \Sylius\Bundle\CoreBundle\Fixture\TaxRateFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.tax_rate'));
    }

    /**
     * Gets the 'sylius.fixture.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\TaxonFixture A Sylius\Bundle\CoreBundle\Fixture\TaxonFixture instance
     */
    protected function getSylius_Fixture_TaxonService()
    {
        return $this->services['sylius.fixture.taxon'] = new \Sylius\Bundle\CoreBundle\Fixture\TaxonFixture($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.fixture.example_factory.taxon'));
    }

    /**
     * Gets the 'sylius.fixture.tshirt_product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Fixture\TshirtProductFixture A Sylius\Bundle\CoreBundle\Fixture\TshirtProductFixture instance
     */
    protected function getSylius_Fixture_TshirtProductService()
    {
        return $this->services['sylius.fixture.tshirt_product'] = new \Sylius\Bundle\CoreBundle\Fixture\TshirtProductFixture($this->get('sylius.fixture.taxon'), $this->get('sylius.fixture.product_attribute'), $this->get('sylius.fixture.product_option'), $this->get('sylius.fixture.product'));
    }

    /**
     * Gets the 'sylius.form.data_mapper.order_item_quantity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Form\DataMapper\OrderItemQuantityDataMapper A Sylius\Bundle\OrderBundle\Form\DataMapper\OrderItemQuantityDataMapper instance
     */
    protected function getSylius_Form_DataMapper_OrderItemQuantityService()
    {
        return $this->services['sylius.form.data_mapper.order_item_quantity'] = new \Sylius\Bundle\OrderBundle\Form\DataMapper\OrderItemQuantityDataMapper($this->get('sylius.order_item_quantity_modifier.limiting'), new \Symfony\Component\Form\Extension\Core\DataMapper\PropertyPathMapper($this->get('property_accessor')));
    }

    /**
     * Gets the 'sylius.form.event_subscriber.build_promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\EventSubscriber\BuildChannelBasedPromotionActionFormSubscriber A Sylius\Bundle\CoreBundle\Form\EventSubscriber\BuildChannelBasedPromotionActionFormSubscriber instance
     */
    protected function getSylius_Form_EventSubscriber_BuildPromotionActionService()
    {
        return $this->services['sylius.form.event_subscriber.build_promotion_action'] = new \Sylius\Bundle\CoreBundle\Form\EventSubscriber\BuildChannelBasedPromotionActionFormSubscriber($this->get('sylius.registry_promotion_action'), $this->get('form.factory'), $this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.form.event_subscriber.build_promotion_rule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\EventSubscriber\BuildChannelBasedPromotionRuleFormSubscriber A Sylius\Bundle\CoreBundle\Form\EventSubscriber\BuildChannelBasedPromotionRuleFormSubscriber instance
     */
    protected function getSylius_Form_EventSubscriber_BuildPromotionRuleService()
    {
        return $this->services['sylius.form.event_subscriber.build_promotion_rule'] = new \Sylius\Bundle\CoreBundle\Form\EventSubscriber\BuildChannelBasedPromotionRuleFormSubscriber($this->get('sylius.registry_promotion_rule_checker'), $this->get('form.factory'), $this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.form.event_subscriber.product_variant_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\EventSubscriber\GenerateProductVariantsSubscriber A Sylius\Bundle\ProductBundle\Form\EventSubscriber\GenerateProductVariantsSubscriber instance
     */
    protected function getSylius_Form_EventSubscriber_ProductVariantGeneratorService()
    {
        return $this->services['sylius.form.event_subscriber.product_variant_generator'] = new \Sylius\Bundle\ProductBundle\Form\EventSubscriber\GenerateProductVariantsSubscriber($this->get('sylius.generator.product_variant'));
    }

    /**
     * Gets the 'sylius.form.event_subscriber.set_customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\EventSubscriber\SetCustomerFormSubscriber A Sylius\Bundle\CoreBundle\Form\EventSubscriber\SetCustomerFormSubscriber instance
     */
    protected function getSylius_Form_EventSubscriber_SetCustomerService()
    {
        return $this->services['sylius.form.event_subscriber.set_customer'] = new \Sylius\Bundle\CoreBundle\Form\EventSubscriber\SetCustomerFormSubscriber($this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.form.extension.type.cart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\CartTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\CartTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_CartService()
    {
        return $this->services['sylius.form.extension.type.cart'] = new \Sylius\Bundle\CoreBundle\Form\Extension\CartTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.cart_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\CartItemTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\CartItemTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_CartItemService()
    {
        return $this->services['sylius.form.extension.type.cart_item'] = new \Sylius\Bundle\CoreBundle\Form\Extension\CartItemTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\ChannelTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\ChannelTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_ChannelService()
    {
        return $this->services['sylius.form.extension.type.channel'] = new \Sylius\Bundle\CoreBundle\Form\Extension\ChannelTypeExtension($this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.form.extension.type.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension A Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_CollectionService()
    {
        return $this->services['sylius.form.extension.type.collection'] = new \Sylius\Bundle\ResourceBundle\Form\Extension\CollectionTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\CountryTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\CountryTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_CountryService()
    {
        return $this->services['sylius.form.extension.type.country'] = new \Sylius\Bundle\CoreBundle\Form\Extension\CountryTypeExtension($this->get('sylius.repository.country'));
    }

    /**
     * Gets the 'sylius.form.extension.type.customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\CustomerTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\CustomerTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_CustomerService()
    {
        return $this->services['sylius.form.extension.type.customer'] = new \Sylius\Bundle\CoreBundle\Form\Extension\CustomerTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.gateway_config.crypted' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Form\Extension\CryptedGatewayConfigTypeExtension A Sylius\Bundle\PayumBundle\Form\Extension\CryptedGatewayConfigTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_GatewayConfig_CryptedService()
    {
        return $this->services['sylius.form.extension.type.gateway_config.crypted'] = new \Sylius\Bundle\PayumBundle\Form\Extension\CryptedGatewayConfigTypeExtension(NULL);
    }

    /**
     * Gets the 'sylius.form.extension.type.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\LocaleTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\LocaleTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_LocaleService()
    {
        return $this->services['sylius.form.extension.type.locale'] = new \Sylius\Bundle\CoreBundle\Form\Extension\LocaleTypeExtension($this->get('sylius.repository.locale'));
    }

    /**
     * Gets the 'sylius.form.extension.type.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\OrderTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\OrderTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_OrderService()
    {
        return $this->services['sylius.form.extension.type.order'] = new \Sylius\Bundle\CoreBundle\Form\Extension\OrderTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\PaymentMethodTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\PaymentMethodTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_PaymentMethodService()
    {
        return $this->services['sylius.form.extension.type.payment_method'] = new \Sylius\Bundle\CoreBundle\Form\Extension\PaymentMethodTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\ProductTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\ProductTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_ProductService()
    {
        return $this->services['sylius.form.extension.type.product'] = new \Sylius\Bundle\CoreBundle\Form\Extension\ProductTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.product_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\ProductTranslationTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\ProductTranslationTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_ProductTranslationService()
    {
        return $this->services['sylius.form.extension.type.product_translation'] = new \Sylius\Bundle\CoreBundle\Form\Extension\ProductTranslationTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.product_variant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\ProductVariantTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\ProductVariantTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_ProductVariantService()
    {
        return $this->services['sylius.form.extension.type.product_variant'] = new \Sylius\Bundle\CoreBundle\Form\Extension\ProductVariantTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.product_variant_generation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\ProductVariantGenerationTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\ProductVariantGenerationTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_ProductVariantGenerationService()
    {
        return $this->services['sylius.form.extension.type.product_variant_generation'] = new \Sylius\Bundle\CoreBundle\Form\Extension\ProductVariantGenerationTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\PromotionTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\PromotionTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_PromotionService()
    {
        return $this->services['sylius.form.extension.type.promotion'] = new \Sylius\Bundle\CoreBundle\Form\Extension\PromotionTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.promotion_coupon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\PromotionCouponTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\PromotionCouponTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_PromotionCouponService()
    {
        return $this->services['sylius.form.extension.type.promotion_coupon'] = new \Sylius\Bundle\CoreBundle\Form\Extension\PromotionCouponTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.promotion_filter_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\PromotionFilterCollectionTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\PromotionFilterCollectionTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_PromotionFilterCollectionService()
    {
        return $this->services['sylius.form.extension.type.promotion_filter_collection'] = new \Sylius\Bundle\CoreBundle\Form\Extension\PromotionFilterCollectionTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\ShippingMethodTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\ShippingMethodTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_ShippingMethodService()
    {
        return $this->services['sylius.form.extension.type.shipping_method'] = new \Sylius\Bundle\CoreBundle\Form\Extension\ShippingMethodTypeExtension($this->get('sylius.registry.shipping_rule_checker'), $this->get('sylius.registry.shipping_calculator'), $this->get('sylius.form_registry.shipping_calculator'));
    }

    /**
     * Gets the 'sylius.form.extension.type.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\TaxRateTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\TaxRateTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_TaxRateService()
    {
        return $this->services['sylius.form.extension.type.tax_rate'] = new \Sylius\Bundle\CoreBundle\Form\Extension\TaxRateTypeExtension();
    }

    /**
     * Gets the 'sylius.form.extension.type.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Extension\TaxonTypeExtension A Sylius\Bundle\CoreBundle\Form\Extension\TaxonTypeExtension instance
     */
    protected function getSylius_Form_Extension_Type_TaxonService()
    {
        return $this->services['sylius.form.extension.type.taxon'] = new \Sylius\Bundle\CoreBundle\Form\Extension\TaxonTypeExtension();
    }

    /**
     * Gets the 'sylius.form.type.add_to_cart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Order\AddToCartType A Sylius\Bundle\CoreBundle\Form\Type\Order\AddToCartType instance
     */
    protected function getSylius_Form_Type_AddToCartService()
    {
        return $this->services['sylius.form.type.add_to_cart'] = new \Sylius\Bundle\CoreBundle\Form\Type\Order\AddToCartType('Sylius\\Bundle\\OrderBundle\\Controller\\AddToCartCommand', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\AddressType A Sylius\Bundle\AddressingBundle\Form\Type\AddressType instance
     */
    protected function getSylius_Form_Type_AddressService()
    {
        return $this->services['sylius.form.type.address'] = new \Sylius\Bundle\AddressingBundle\Form\Type\AddressType('Sylius\\Component\\Core\\Model\\Address', array(0 => 'sylius'), new \Sylius\Bundle\AddressingBundle\Form\EventListener\BuildAddressFormSubscriber($this->get('sylius.repository.country'), $this->get('form.factory')));
    }

    /**
     * Gets the 'sylius.form.type.address_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\AddressChoiceType A Sylius\Bundle\CoreBundle\Form\Type\AddressChoiceType instance
     */
    protected function getSylius_Form_Type_AddressChoiceService()
    {
        return $this->services['sylius.form.type.address_choice'] = new \Sylius\Bundle\CoreBundle\Form\Type\AddressChoiceType($this->get('sylius.repository.address'));
    }

    /**
     * Gets the 'sylius.form.type.admin_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\User\AdminUserType A Sylius\Bundle\CoreBundle\Form\Type\User\AdminUserType instance
     */
    protected function getSylius_Form_Type_AdminUserService()
    {
        return $this->services['sylius.form.type.admin_user'] = new \Sylius\Bundle\CoreBundle\Form\Type\User\AdminUserType('Sylius\\Component\\Core\\Model\\AdminUser', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.attribute_type_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AttributeBundle\Form\Type\AttributeTypeChoiceType A Sylius\Bundle\AttributeBundle\Form\Type\AttributeTypeChoiceType instance
     */
    protected function getSylius_Form_Type_AttributeTypeChoiceService()
    {
        return $this->services['sylius.form.type.attribute_type_choice'] = new \Sylius\Bundle\AttributeBundle\Form\Type\AttributeTypeChoiceType(array('text' => 'Text', 'textarea' => 'Textarea', 'checkbox' => 'Checkbox', 'integer' => 'Integer', 'percent' => 'Percent', 'datetime' => 'Datetime', 'date' => 'Date', 'select' => 'Select'));
    }

    /**
     * Gets the 'sylius.form.type.autocomplete_product_taxon_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Taxon\ProductTaxonAutocompleteChoiceType A Sylius\Bundle\CoreBundle\Form\Type\Taxon\ProductTaxonAutocompleteChoiceType instance
     */
    protected function getSylius_Form_Type_AutocompleteProductTaxonChoiceService()
    {
        return $this->services['sylius.form.type.autocomplete_product_taxon_choice'] = new \Sylius\Bundle\CoreBundle\Form\Type\Taxon\ProductTaxonAutocompleteChoiceType($this->get('sylius.factory.product_taxon'), $this->get('sylius.repository.product_taxon'));
    }

    /**
     * Gets the 'sylius.form.type.cart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Form\Type\CartType A Sylius\Bundle\OrderBundle\Form\Type\CartType instance
     */
    protected function getSylius_Form_Type_CartService()
    {
        return $this->services['sylius.form.type.cart'] = new \Sylius\Bundle\OrderBundle\Form\Type\CartType('Sylius\\Component\\Core\\Model\\Order', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.cart_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Form\Type\CartItemType A Sylius\Bundle\OrderBundle\Form\Type\CartItemType instance
     */
    protected function getSylius_Form_Type_CartItemService()
    {
        return $this->services['sylius.form.type.cart_item'] = new \Sylius\Bundle\OrderBundle\Form\Type\CartItemType('Sylius\\Component\\Core\\Model\\OrderItem', array(0 => 'sylius'), $this->get('sylius.form.data_mapper.order_item_quantity'));
    }

    /**
     * Gets the 'sylius.form.type.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ChannelBundle\Form\Type\ChannelType A Sylius\Bundle\ChannelBundle\Form\Type\ChannelType instance
     */
    protected function getSylius_Form_Type_ChannelService()
    {
        return $this->services['sylius.form.type.channel'] = new \Sylius\Bundle\ChannelBundle\Form\Type\ChannelType('Sylius\\Component\\Core\\Model\\Channel', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.channel_based_shipping_calculator.flat_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Shipping\Calculator\ChannelBasedFlatRateConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Shipping\Calculator\ChannelBasedFlatRateConfigurationType instance
     */
    protected function getSylius_Form_Type_ChannelBasedShippingCalculator_FlatRateService()
    {
        return $this->services['sylius.form.type.channel_based_shipping_calculator.flat_rate'] = new \Sylius\Bundle\CoreBundle\Form\Type\Shipping\Calculator\ChannelBasedFlatRateConfigurationType();
    }

    /**
     * Gets the 'sylius.form.type.channel_based_shipping_calculator.per_unit_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Shipping\Calculator\ChannelBasedPerUnitRateConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Shipping\Calculator\ChannelBasedPerUnitRateConfigurationType instance
     */
    protected function getSylius_Form_Type_ChannelBasedShippingCalculator_PerUnitRateService()
    {
        return $this->services['sylius.form.type.channel_based_shipping_calculator.per_unit_rate'] = new \Sylius\Bundle\CoreBundle\Form\Type\Shipping\Calculator\ChannelBasedPerUnitRateConfigurationType();
    }

    /**
     * Gets the 'sylius.form.type.channel_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ChannelBundle\Form\Type\ChannelChoiceType A Sylius\Bundle\ChannelBundle\Form\Type\ChannelChoiceType instance
     */
    protected function getSylius_Form_Type_ChannelChoiceService()
    {
        return $this->services['sylius.form.type.channel_choice'] = new \Sylius\Bundle\ChannelBundle\Form\Type\ChannelChoiceType($this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.form.type.channel_pricing' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Product\ChannelPricingType A Sylius\Bundle\CoreBundle\Form\Type\Product\ChannelPricingType instance
     */
    protected function getSylius_Form_Type_ChannelPricingService()
    {
        return $this->services['sylius.form.type.channel_pricing'] = new \Sylius\Bundle\CoreBundle\Form\Type\Product\ChannelPricingType('Sylius\\Component\\Core\\Model\\ChannelPricing', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.channels_collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\ChannelCollectionType A Sylius\Bundle\CoreBundle\Form\Type\ChannelCollectionType instance
     */
    protected function getSylius_Form_Type_ChannelsCollectionService()
    {
        return $this->services['sylius.form.type.channels_collection'] = new \Sylius\Bundle\CoreBundle\Form\Type\ChannelCollectionType($this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.form.type.checkout_address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Checkout\AddressType A Sylius\Bundle\CoreBundle\Form\Type\Checkout\AddressType instance
     */
    protected function getSylius_Form_Type_CheckoutAddressService()
    {
        return $this->services['sylius.form.type.checkout_address'] = new \Sylius\Bundle\CoreBundle\Form\Type\Checkout\AddressType('Sylius\\Component\\Core\\Model\\Order', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.checkout_complete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Checkout\CompleteType A Sylius\Bundle\CoreBundle\Form\Type\Checkout\CompleteType instance
     */
    protected function getSylius_Form_Type_CheckoutCompleteService()
    {
        return $this->services['sylius.form.type.checkout_complete'] = new \Sylius\Bundle\CoreBundle\Form\Type\Checkout\CompleteType('Sylius\\Component\\Core\\Model\\Order', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.checkout_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Checkout\PaymentType A Sylius\Bundle\CoreBundle\Form\Type\Checkout\PaymentType instance
     */
    protected function getSylius_Form_Type_CheckoutPaymentService()
    {
        return $this->services['sylius.form.type.checkout_payment'] = new \Sylius\Bundle\CoreBundle\Form\Type\Checkout\PaymentType('Sylius\\Component\\Core\\Model\\Payment', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.checkout_select_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Checkout\SelectPaymentType A Sylius\Bundle\CoreBundle\Form\Type\Checkout\SelectPaymentType instance
     */
    protected function getSylius_Form_Type_CheckoutSelectPaymentService()
    {
        return $this->services['sylius.form.type.checkout_select_payment'] = new \Sylius\Bundle\CoreBundle\Form\Type\Checkout\SelectPaymentType('Sylius\\Component\\Core\\Model\\Order', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.checkout_select_shipping' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Checkout\SelectShippingType A Sylius\Bundle\CoreBundle\Form\Type\Checkout\SelectShippingType instance
     */
    protected function getSylius_Form_Type_CheckoutSelectShippingService()
    {
        return $this->services['sylius.form.type.checkout_select_shipping'] = new \Sylius\Bundle\CoreBundle\Form\Type\Checkout\SelectShippingType('Sylius\\Component\\Core\\Model\\Order', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.checkout_shipment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Checkout\ShipmentType A Sylius\Bundle\CoreBundle\Form\Type\Checkout\ShipmentType instance
     */
    protected function getSylius_Form_Type_CheckoutShipmentService()
    {
        return $this->services['sylius.form.type.checkout_shipment'] = new \Sylius\Bundle\CoreBundle\Form\Type\Checkout\ShipmentType('Sylius\\Component\\Core\\Model\\Shipment', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\CountryType A Sylius\Bundle\AddressingBundle\Form\Type\CountryType instance
     */
    protected function getSylius_Form_Type_CountryService()
    {
        return $this->services['sylius.form.type.country'] = new \Sylius\Bundle\AddressingBundle\Form\Type\CountryType('Sylius\\Component\\Addressing\\Model\\Country', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.country_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\CountryChoiceType A Sylius\Bundle\AddressingBundle\Form\Type\CountryChoiceType instance
     */
    protected function getSylius_Form_Type_CountryChoiceService()
    {
        return $this->services['sylius.form.type.country_choice'] = new \Sylius\Bundle\AddressingBundle\Form\Type\CountryChoiceType($this->get('sylius.repository.country'));
    }

    /**
     * Gets the 'sylius.form.type.country_code_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\CountryCodeChoiceType A Sylius\Bundle\AddressingBundle\Form\Type\CountryCodeChoiceType instance
     */
    protected function getSylius_Form_Type_CountryCodeChoiceService()
    {
        return $this->services['sylius.form.type.country_code_choice'] = new \Sylius\Bundle\AddressingBundle\Form\Type\CountryCodeChoiceType($this->get('sylius.repository.country'));
    }

    /**
     * Gets the 'sylius.form.type.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CurrencyBundle\Form\Type\CurrencyType A Sylius\Bundle\CurrencyBundle\Form\Type\CurrencyType instance
     */
    protected function getSylius_Form_Type_CurrencyService()
    {
        return $this->services['sylius.form.type.currency'] = new \Sylius\Bundle\CurrencyBundle\Form\Type\CurrencyType('Sylius\\Component\\Currency\\Model\\Currency', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.currency_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CurrencyBundle\Form\Type\CurrencyChoiceType A Sylius\Bundle\CurrencyBundle\Form\Type\CurrencyChoiceType instance
     */
    protected function getSylius_Form_Type_CurrencyChoiceService()
    {
        return $this->services['sylius.form.type.currency_choice'] = new \Sylius\Bundle\CurrencyBundle\Form\Type\CurrencyChoiceType($this->get('sylius.repository.currency'));
    }

    /**
     * Gets the 'sylius.form.type.customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CustomerBundle\Form\Type\CustomerType A Sylius\Bundle\CustomerBundle\Form\Type\CustomerType instance
     */
    protected function getSylius_Form_Type_CustomerService()
    {
        return $this->services['sylius.form.type.customer'] = new \Sylius\Bundle\CustomerBundle\Form\Type\CustomerType('Sylius\\Component\\Core\\Model\\Customer', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.customer_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CustomerBundle\Form\Type\CustomerChoiceType A Sylius\Bundle\CustomerBundle\Form\Type\CustomerChoiceType instance
     */
    protected function getSylius_Form_Type_CustomerChoiceService()
    {
        return $this->services['sylius.form.type.customer_choice'] = new \Sylius\Bundle\CustomerBundle\Form\Type\CustomerChoiceType($this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.form.type.customer_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupType A Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupType instance
     */
    protected function getSylius_Form_Type_CustomerGroupService()
    {
        return $this->services['sylius.form.type.customer_group'] = new \Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupType('Sylius\\Component\\Customer\\Model\\CustomerGroup', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.customer_group_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupChoiceType A Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupChoiceType instance
     */
    protected function getSylius_Form_Type_CustomerGroupChoiceService()
    {
        return $this->services['sylius.form.type.customer_group_choice'] = new \Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupChoiceType($this->get('sylius.repository.customer_group'));
    }

    /**
     * Gets the 'sylius.form.type.customer_group_code_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupCodeChoiceType A Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupCodeChoiceType instance
     */
    protected function getSylius_Form_Type_CustomerGroupCodeChoiceService()
    {
        return $this->services['sylius.form.type.customer_group_code_choice'] = new \Sylius\Bundle\CustomerBundle\Form\Type\CustomerGroupCodeChoiceType($this->get('sylius.repository.customer_group'));
    }

    /**
     * Gets the 'sylius.form.type.customer_guest' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerGuestType A Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerGuestType instance
     */
    protected function getSylius_Form_Type_CustomerGuestService()
    {
        return $this->services['sylius.form.type.customer_guest'] = new \Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerGuestType('Sylius\\Component\\Core\\Model\\Customer', array(0 => 'sylius_customer_guest'), $this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.form.type.customer_profile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CustomerBundle\Form\Type\CustomerProfileType A Sylius\Bundle\CustomerBundle\Form\Type\CustomerProfileType instance
     */
    protected function getSylius_Form_Type_CustomerProfileService()
    {
        return $this->services['sylius.form.type.customer_profile'] = new \Sylius\Bundle\CustomerBundle\Form\Type\CustomerProfileType('Sylius\\Component\\Core\\Model\\Customer', array(0 => 'sylius', 1 => 'sylius_customer_profile'));
    }

    /**
     * Gets the 'sylius.form.type.customer_registration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerRegistrationType A Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerRegistrationType instance
     */
    protected function getSylius_Form_Type_CustomerRegistrationService()
    {
        return $this->services['sylius.form.type.customer_registration'] = new \Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerRegistrationType('Sylius\\Component\\Core\\Model\\Customer', array(0 => 'sylius', 1 => 'sylius_user_registration', 2 => 'sylius_customer_profile'), $this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.form.type.customer_simple_registration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerSimpleRegistrationType A Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerSimpleRegistrationType instance
     */
    protected function getSylius_Form_Type_CustomerSimpleRegistrationService()
    {
        return $this->services['sylius.form.type.customer_simple_registration'] = new \Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerSimpleRegistrationType('Sylius\\Component\\Core\\Model\\Customer', array(0 => 'sylius', 1 => 'sylius_user_registration'), $this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.form.type.data_transformer.product_variants_to_codes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\DataTransformer\ProductVariantsToCodesTransformer A Sylius\Bundle\CoreBundle\Form\DataTransformer\ProductVariantsToCodesTransformer instance
     */
    protected function getSylius_Form_Type_DataTransformer_ProductVariantsToCodesService()
    {
        return $this->services['sylius.form.type.data_transformer.product_variants_to_codes'] = new \Sylius\Bundle\CoreBundle\Form\DataTransformer\ProductVariantsToCodesTransformer($this->get('sylius.repository.product_variant'));
    }

    /**
     * Gets the 'sylius.form.type.data_transformer.products_to_codes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\DataTransformer\ProductsToCodesTransformer A Sylius\Bundle\CoreBundle\Form\DataTransformer\ProductsToCodesTransformer instance
     */
    protected function getSylius_Form_Type_DataTransformer_ProductsToCodesService()
    {
        return $this->services['sylius.form.type.data_transformer.products_to_codes'] = new \Sylius\Bundle\CoreBundle\Form\DataTransformer\ProductsToCodesTransformer($this->get('sylius.repository.product'));
    }

    /**
     * Gets the 'sylius.form.type.data_transformer.products_to_product_associations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\DataTransformer\ProductsToProductAssociationsTransformer A Sylius\Bundle\ProductBundle\Form\DataTransformer\ProductsToProductAssociationsTransformer instance
     */
    protected function getSylius_Form_Type_DataTransformer_ProductsToProductAssociationsService()
    {
        return $this->services['sylius.form.type.data_transformer.products_to_product_associations'] = new \Sylius\Bundle\ProductBundle\Form\DataTransformer\ProductsToProductAssociationsTransformer($this->get('sylius.factory.product_association'), $this->get('sylius.repository.product'), $this->get('sylius.repository.product_association_type'));
    }

    /**
     * Gets the 'sylius.form.type.data_transformer.taxons_to_codes' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\DataTransformer\TaxonsToCodesTransformer A Sylius\Bundle\CoreBundle\Form\DataTransformer\TaxonsToCodesTransformer instance
     */
    protected function getSylius_Form_Type_DataTransformer_TaxonsToCodesService()
    {
        return $this->services['sylius.form.type.data_transformer.taxons_to_codes'] = new \Sylius\Bundle\CoreBundle\Form\DataTransformer\TaxonsToCodesTransformer($this->get('sylius.repository.taxon'));
    }

    /**
     * Gets the 'sylius.form.type.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType A Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType instance
     */
    protected function getSylius_Form_Type_DefaultService()
    {
        $a = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Bundle\\ResourceBundle\\Form\\Builder\\DefaultFormBuilderInterface', 'form builder');
        $a->register('doctrine/orm', new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\Form\Builder\DefaultFormBuilder($this->get('doctrine.orm.default_entity_manager')));

        return $this->services['sylius.form.type.default'] = new \Sylius\Bundle\ResourceBundle\Form\Type\DefaultResourceType(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}, $a);
    }

    /**
     * Gets the 'sylius.form.type.exchange_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CurrencyBundle\Form\Type\ExchangeRateType A Sylius\Bundle\CurrencyBundle\Form\Type\ExchangeRateType instance
     */
    protected function getSylius_Form_Type_ExchangeRateService()
    {
        return $this->services['sylius.form.type.exchange_rate'] = new \Sylius\Bundle\CurrencyBundle\Form\Type\ExchangeRateType('Sylius\\Component\\Currency\\Model\\ExchangeRate', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.gateway_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Form\Type\GatewayConfigType A Sylius\Bundle\PayumBundle\Form\Type\GatewayConfigType instance
     */
    protected function getSylius_Form_Type_GatewayConfigService()
    {
        return $this->services['sylius.form.type.gateway_config'] = new \Sylius\Bundle\PayumBundle\Form\Type\GatewayConfigType('Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig', array(0 => 'sylius'), $this->get('sylius.form_registry.payum_gateway_config'));
    }

    /**
     * Gets the 'sylius.form.type.gateway_configuration.paypal' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Form\Type\PaypalGatewayConfigurationType A Sylius\Bundle\PayumBundle\Form\Type\PaypalGatewayConfigurationType instance
     */
    protected function getSylius_Form_Type_GatewayConfiguration_PaypalService()
    {
        return $this->services['sylius.form.type.gateway_configuration.paypal'] = new \Sylius\Bundle\PayumBundle\Form\Type\PaypalGatewayConfigurationType();
    }

    /**
     * Gets the 'sylius.form.type.gateway_configuration.stripe' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Form\Type\StripeGatewayConfigurationType A Sylius\Bundle\PayumBundle\Form\Type\StripeGatewayConfigurationType instance
     */
    protected function getSylius_Form_Type_GatewayConfiguration_StripeService()
    {
        return $this->services['sylius.form.type.gateway_configuration.stripe'] = new \Sylius\Bundle\PayumBundle\Form\Type\StripeGatewayConfigurationType();
    }

    /**
     * Gets the 'sylius.form.type.grid_filter.boolean' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType A Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType instance
     */
    protected function getSylius_Form_Type_GridFilter_BooleanService()
    {
        return $this->services['sylius.form.type.grid_filter.boolean'] = new \Sylius\Bundle\GridBundle\Form\Type\Filter\BooleanFilterType();
    }

    /**
     * Gets the 'sylius.form.type.grid_filter.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType A Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType instance
     */
    protected function getSylius_Form_Type_GridFilter_DateService()
    {
        return $this->services['sylius.form.type.grid_filter.date'] = new \Sylius\Bundle\GridBundle\Form\Type\Filter\DateFilterType();
    }

    /**
     * Gets the 'sylius.form.type.grid_filter.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType A Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType instance
     */
    protected function getSylius_Form_Type_GridFilter_EntityService()
    {
        return $this->services['sylius.form.type.grid_filter.entity'] = new \Sylius\Bundle\GridBundle\Form\Type\Filter\EntityFilterType();
    }

    /**
     * Gets the 'sylius.form.type.grid_filter.exists' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType A Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType instance
     */
    protected function getSylius_Form_Type_GridFilter_ExistsService()
    {
        return $this->services['sylius.form.type.grid_filter.exists'] = new \Sylius\Bundle\GridBundle\Form\Type\Filter\ExistsFilterType();
    }

    /**
     * Gets the 'sylius.form.type.grid_filter.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType A Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType instance
     */
    protected function getSylius_Form_Type_GridFilter_MoneyService()
    {
        return $this->services['sylius.form.type.grid_filter.money'] = new \Sylius\Bundle\GridBundle\Form\Type\Filter\MoneyFilterType();
    }

    /**
     * Gets the 'sylius.form.type.grid_filter.string' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType A Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType instance
     */
    protected function getSylius_Form_Type_GridFilter_StringService()
    {
        return $this->services['sylius.form.type.grid_filter.string'] = new \Sylius\Bundle\GridBundle\Form\Type\Filter\StringFilterType();
    }

    /**
     * Gets the 'sylius.form.type.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\LocaleBundle\Form\Type\LocaleType A Sylius\Bundle\LocaleBundle\Form\Type\LocaleType instance
     */
    protected function getSylius_Form_Type_LocaleService()
    {
        return $this->services['sylius.form.type.locale'] = new \Sylius\Bundle\LocaleBundle\Form\Type\LocaleType('Sylius\\Component\\Locale\\Model\\Locale', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.locale_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\LocaleBundle\Form\Type\LocaleChoiceType A Sylius\Bundle\LocaleBundle\Form\Type\LocaleChoiceType instance
     */
    protected function getSylius_Form_Type_LocaleChoiceService()
    {
        return $this->services['sylius.form.type.locale_choice'] = new \Sylius\Bundle\LocaleBundle\Form\Type\LocaleChoiceType($this->get('sylius.repository.locale'));
    }

    /**
     * Gets the 'sylius.form.type.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\MoneyBundle\Form\Type\MoneyType A Sylius\Bundle\MoneyBundle\Form\Type\MoneyType instance
     */
    protected function getSylius_Form_Type_MoneyService()
    {
        return $this->services['sylius.form.type.money'] = new \Sylius\Bundle\MoneyBundle\Form\Type\MoneyType();
    }

    /**
     * Gets the 'sylius.form.type.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Form\Type\OrderType A Sylius\Bundle\OrderBundle\Form\Type\OrderType instance
     */
    protected function getSylius_Form_Type_OrderService()
    {
        return $this->services['sylius.form.type.order'] = new \Sylius\Bundle\OrderBundle\Form\Type\OrderType('Sylius\\Component\\Core\\Model\\Order', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.order_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Form\Type\OrderItemType A Sylius\Bundle\OrderBundle\Form\Type\OrderItemType instance
     */
    protected function getSylius_Form_Type_OrderItemService()
    {
        return $this->services['sylius.form.type.order_item'] = new \Sylius\Bundle\OrderBundle\Form\Type\OrderItemType('Sylius\\Component\\Core\\Model\\OrderItem', array(0 => 'sylius'), $this->get('sylius.form.data_mapper.order_item_quantity'));
    }

    /**
     * Gets the 'sylius.form.type.payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PaymentBundle\Form\Type\PaymentType A Sylius\Bundle\PaymentBundle\Form\Type\PaymentType instance
     */
    protected function getSylius_Form_Type_PaymentService()
    {
        return $this->services['sylius.form.type.payment'] = new \Sylius\Bundle\PaymentBundle\Form\Type\PaymentType('Sylius\\Component\\Core\\Model\\Payment', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.payment_gateway_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PaymentBundle\Form\Type\PaymentGatewayChoiceType A Sylius\Bundle\PaymentBundle\Form\Type\PaymentGatewayChoiceType instance
     */
    protected function getSylius_Form_Type_PaymentGatewayChoiceService()
    {
        return $this->services['sylius.form.type.payment_gateway_choice'] = new \Sylius\Bundle\PaymentBundle\Form\Type\PaymentGatewayChoiceType(array('offline' => 'sylius.payum_gateway.offline'));
    }

    /**
     * Gets the 'sylius.form.type.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodType A Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodType instance
     */
    protected function getSylius_Form_Type_PaymentMethodService()
    {
        return $this->services['sylius.form.type.payment_method'] = new \Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodType('Sylius\\Component\\Core\\Model\\PaymentMethod', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.payment_method_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodChoiceType A Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodChoiceType instance
     */
    protected function getSylius_Form_Type_PaymentMethodChoiceService()
    {
        return $this->services['sylius.form.type.payment_method_choice'] = new \Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodChoiceType($this->get('sylius.payment_methods_resolver'), $this->get('sylius.repository.payment_method'));
    }

    /**
     * Gets the 'sylius.form.type.payment_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodTranslationType A Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodTranslationType instance
     */
    protected function getSylius_Form_Type_PaymentMethodTranslationService()
    {
        return $this->services['sylius.form.type.payment_method_translation'] = new \Sylius\Bundle\PaymentBundle\Form\Type\PaymentMethodTranslationType('Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductType A Sylius\Bundle\ProductBundle\Form\Type\ProductType instance
     */
    protected function getSylius_Form_Type_ProductService()
    {
        return $this->services['sylius.form.type.product'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductType('Sylius\\Component\\Core\\Model\\Product', array(0 => 'sylius'), $this->get('sylius.product_variant_resolver.default'), $this->get('sylius.factory.product_attribute_value'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.form.type.product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationType A Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationType instance
     */
    protected function getSylius_Form_Type_ProductAssociationService()
    {
        return $this->services['sylius.form.type.product_association'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationType('Sylius\\Component\\Product\\Model\\ProductAssociation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_association_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeType A Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeType instance
     */
    protected function getSylius_Form_Type_ProductAssociationTypeService()
    {
        return $this->services['sylius.form.type.product_association_type'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeType('Sylius\\Component\\Product\\Model\\ProductAssociationType', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_association_type_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeChoiceType A Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeChoiceType instance
     */
    protected function getSylius_Form_Type_ProductAssociationTypeChoiceService()
    {
        return $this->services['sylius.form.type.product_association_type_choice'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeChoiceType($this->get('sylius.repository.product_association_type'));
    }

    /**
     * Gets the 'sylius.form.type.product_association_type_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeTranslationType A Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeTranslationType instance
     */
    protected function getSylius_Form_Type_ProductAssociationTypeTranslationService()
    {
        return $this->services['sylius.form.type.product_association_type_translation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationTypeTranslationType('Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeType A Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeType instance
     */
    protected function getSylius_Form_Type_ProductAttributeService()
    {
        return $this->services['sylius.form.type.product_attribute'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeType('Sylius\\Component\\Product\\Model\\ProductAttribute', array(0 => 'sylius'), 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType', $this->get('sylius.form_registry.attribute_type'));
    }

    /**
     * Gets the 'sylius.form.type.product_attribute_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeChoiceType A Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeChoiceType instance
     */
    protected function getSylius_Form_Type_ProductAttributeChoiceService()
    {
        return $this->services['sylius.form.type.product_attribute_choice'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeChoiceType($this->get('sylius.repository.product_attribute'));
    }

    /**
     * Gets the 'sylius.form.type.product_attribute_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeTranslationType A Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeTranslationType instance
     */
    protected function getSylius_Form_Type_ProductAttributeTranslationService()
    {
        return $this->services['sylius.form.type.product_attribute_translation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeTranslationType('Sylius\\Component\\Product\\Model\\ProductAttributeTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeValueType A Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeValueType instance
     */
    protected function getSylius_Form_Type_ProductAttributeValueService()
    {
        return $this->services['sylius.form.type.product_attribute_value'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAttributeValueType('Sylius\\Component\\Product\\Model\\ProductAttributeValue', array(0 => 'sylius'), 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeChoiceType', $this->get('sylius.repository.product_attribute'), $this->get('sylius.repository.locale'), $this->get('sylius.form_registry.attribute_type'));
    }

    /**
     * Gets the 'sylius.form.type.product_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductChoiceType A Sylius\Bundle\ProductBundle\Form\Type\ProductChoiceType instance
     */
    protected function getSylius_Form_Type_ProductChoiceService()
    {
        return $this->services['sylius.form.type.product_choice'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductChoiceType($this->get('sylius.repository.product'));
    }

    /**
     * Gets the 'sylius.form.type.product_code_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductCodeChoiceType A Sylius\Bundle\ProductBundle\Form\Type\ProductCodeChoiceType instance
     */
    protected function getSylius_Form_Type_ProductCodeChoiceService()
    {
        return $this->services['sylius.form.type.product_code_choice'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductCodeChoiceType($this->get('sylius.repository.product'));
    }

    /**
     * Gets the 'sylius.form.type.product_generate_variants' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductGenerateVariantsType A Sylius\Bundle\ProductBundle\Form\Type\ProductGenerateVariantsType instance
     */
    protected function getSylius_Form_Type_ProductGenerateVariantsService()
    {
        return $this->services['sylius.form.type.product_generate_variants'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductGenerateVariantsType('Sylius\\Component\\Core\\Model\\Product', array(0 => 'sylius'), $this->get('sylius.form.event_subscriber.product_variant_generator'));
    }

    /**
     * Gets the 'sylius.form.type.product_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Product\ProductImageType A Sylius\Bundle\CoreBundle\Form\Type\Product\ProductImageType instance
     */
    protected function getSylius_Form_Type_ProductImageService()
    {
        return $this->services['sylius.form.type.product_image'] = new \Sylius\Bundle\CoreBundle\Form\Type\Product\ProductImageType('Sylius\\Component\\Core\\Model\\ProductImage', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionType A Sylius\Bundle\ProductBundle\Form\Type\ProductOptionType instance
     */
    protected function getSylius_Form_Type_ProductOptionService()
    {
        return $this->services['sylius.form.type.product_option'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionType('Sylius\\Component\\Product\\Model\\ProductOption', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_option_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionChoiceType A Sylius\Bundle\ProductBundle\Form\Type\ProductOptionChoiceType instance
     */
    protected function getSylius_Form_Type_ProductOptionChoiceService()
    {
        return $this->services['sylius.form.type.product_option_choice'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionChoiceType($this->get('sylius.repository.product_option'));
    }

    /**
     * Gets the 'sylius.form.type.product_option_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionTranslationType A Sylius\Bundle\ProductBundle\Form\Type\ProductOptionTranslationType instance
     */
    protected function getSylius_Form_Type_ProductOptionTranslationService()
    {
        return $this->services['sylius.form.type.product_option_translation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionTranslationType('Sylius\\Component\\Product\\Model\\ProductOptionTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_option_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionValueType A Sylius\Bundle\ProductBundle\Form\Type\ProductOptionValueType instance
     */
    protected function getSylius_Form_Type_ProductOptionValueService()
    {
        return $this->services['sylius.form.type.product_option_value'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionValueType('Sylius\\Component\\Product\\Model\\ProductOptionValue', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_option_value_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionValueTranslationType A Sylius\Bundle\ProductBundle\Form\Type\ProductOptionValueTranslationType instance
     */
    protected function getSylius_Form_Type_ProductOptionValueTranslationService()
    {
        return $this->services['sylius.form.type.product_option_value_translation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductOptionValueTranslationType('Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Product\ProductReviewType A Sylius\Bundle\CoreBundle\Form\Type\Product\ProductReviewType instance
     */
    protected function getSylius_Form_Type_ProductReviewService()
    {
        return $this->services['sylius.form.type.product_review'] = new \Sylius\Bundle\CoreBundle\Form\Type\Product\ProductReviewType('Sylius\\Component\\Core\\Model\\ProductReview', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductTranslationType A Sylius\Bundle\ProductBundle\Form\Type\ProductTranslationType instance
     */
    protected function getSylius_Form_Type_ProductTranslationService()
    {
        return $this->services['sylius.form.type.product_translation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductTranslationType('Sylius\\Component\\Core\\Model\\ProductTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_variant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductVariantType A Sylius\Bundle\ProductBundle\Form\Type\ProductVariantType instance
     */
    protected function getSylius_Form_Type_ProductVariantService()
    {
        return $this->services['sylius.form.type.product_variant'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductVariantType('Sylius\\Component\\Core\\Model\\ProductVariant', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_variant_generation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductVariantGenerationType A Sylius\Bundle\ProductBundle\Form\Type\ProductVariantGenerationType instance
     */
    protected function getSylius_Form_Type_ProductVariantGenerationService()
    {
        return $this->services['sylius.form.type.product_variant_generation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductVariantGenerationType('Sylius\\Component\\Core\\Model\\ProductVariant', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.product_variant_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductVariantTranslationType A Sylius\Bundle\ProductBundle\Form\Type\ProductVariantTranslationType instance
     */
    protected function getSylius_Form_Type_ProductVariantTranslationService()
    {
        return $this->services['sylius.form.type.product_variant_translation'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductVariantTranslationType('Sylius\\Component\\Product\\Model\\ProductVariantTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionType instance
     */
    protected function getSylius_Form_Type_PromotionService()
    {
        return $this->services['sylius.form.type.promotion'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionType('Sylius\\Component\\Core\\Model\\Promotion', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionType instance
     */
    protected function getSylius_Form_Type_PromotionActionService()
    {
        return $this->services['sylius.form.type.promotion_action'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionType('Sylius\\Component\\Promotion\\Model\\PromotionAction', array(0 => 'sylius'), $this->get('sylius.form_registry.promotion_action'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_action.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionCollectionType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionCollectionType instance
     */
    protected function getSylius_Form_Type_PromotionAction_CollectionService()
    {
        return $this->services['sylius.form.type.promotion_action.collection'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionCollectionType($this->get('sylius.registry_promotion_action'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_action.filter.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Filter\ProductFilterConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Promotion\Filter\ProductFilterConfigurationType instance
     */
    protected function getSylius_Form_Type_PromotionAction_Filter_ProductService()
    {
        return $this->services['sylius.form.type.promotion_action.filter.product'] = new \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Filter\ProductFilterConfigurationType($this->get('sylius.form.type.data_transformer.products_to_codes'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_action.filter.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Filter\TaxonFilterConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Promotion\Filter\TaxonFilterConfigurationType instance
     */
    protected function getSylius_Form_Type_PromotionAction_Filter_TaxonService()
    {
        return $this->services['sylius.form.type.promotion_action.filter.taxon'] = new \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Filter\TaxonFilterConfigurationType($this->get('sylius.form.type.data_transformer.taxons_to_codes'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_action_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionChoiceType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionChoiceType instance
     */
    protected function getSylius_Form_Type_PromotionActionChoiceService()
    {
        return $this->services['sylius.form.type.promotion_action_choice'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionActionChoiceType(array('order_fixed_discount' => 'Order fixed discount', 'unit_fixed_discount' => 'Item fixed discount', 'order_percentage_discount' => 'Order percentage discount', 'unit_percentage_discount' => 'Item percentage discount', 'shipping_percentage_discount' => 'Shipping percentage discount'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_coupon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponType instance
     */
    protected function getSylius_Form_Type_PromotionCouponService()
    {
        return $this->services['sylius.form.type.promotion_coupon'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponType('Sylius\\Component\\Core\\Model\\PromotionCoupon', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_coupon_generator_instruction' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponGeneratorInstructionType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponGeneratorInstructionType instance
     */
    protected function getSylius_Form_Type_PromotionCouponGeneratorInstructionService()
    {
        return $this->services['sylius.form.type.promotion_coupon_generator_instruction'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponGeneratorInstructionType('Sylius\\Component\\Promotion\\Generator\\PromotionCouponGeneratorInstruction');
    }

    /**
     * Gets the 'sylius.form.type.promotion_coupon_to_code' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponToCodeType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponToCodeType instance
     */
    protected function getSylius_Form_Type_PromotionCouponToCodeService()
    {
        return $this->services['sylius.form.type.promotion_coupon_to_code'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionCouponToCodeType($this->get('sylius.repository.promotion_coupon'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleType instance
     */
    protected function getSylius_Form_Type_PromotionRuleService()
    {
        return $this->services['sylius.form.type.promotion_rule'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleType('Sylius\\Component\\Promotion\\Model\\PromotionRule', array(0 => 'sylius'), $this->get('sylius.form_registry.promotion_rule_checker'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule.collection' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleCollectionType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleCollectionType instance
     */
    protected function getSylius_Form_Type_PromotionRule_CollectionService()
    {
        return $this->services['sylius.form.type.promotion_rule.collection'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleCollectionType($this->get('sylius.registry_promotion_rule_checker'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule.contains_product_configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\ContainsProductConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\ContainsProductConfigurationType instance
     */
    protected function getSylius_Form_Type_PromotionRule_ContainsProductConfigurationService()
    {
        return $this->services['sylius.form.type.promotion_rule.contains_product_configuration'] = new \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\ContainsProductConfigurationType($this->get('sylius.repository.product'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule.customer_group_configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\CustomerGroupConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\CustomerGroupConfigurationType instance
     */
    protected function getSylius_Form_Type_PromotionRule_CustomerGroupConfigurationService()
    {
        return $this->services['sylius.form.type.promotion_rule.customer_group_configuration'] = new \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\CustomerGroupConfigurationType();
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule.has_taxon_configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\HasTaxonConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\HasTaxonConfigurationType instance
     */
    protected function getSylius_Form_Type_PromotionRule_HasTaxonConfigurationService()
    {
        return $this->services['sylius.form.type.promotion_rule.has_taxon_configuration'] = new \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\HasTaxonConfigurationType($this->get('sylius.form.type.data_transformer.taxons_to_codes'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule.total_of_items_from_taxon_configuration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\TotalOfItemsFromTaxonConfigurationType A Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\TotalOfItemsFromTaxonConfigurationType instance
     */
    protected function getSylius_Form_Type_PromotionRule_TotalOfItemsFromTaxonConfigurationService()
    {
        return $this->services['sylius.form.type.promotion_rule.total_of_items_from_taxon_configuration'] = new \Sylius\Bundle\CoreBundle\Form\Type\Promotion\Rule\TotalOfItemsFromTaxonConfigurationType($this->get('sylius.repository.taxon'));
    }

    /**
     * Gets the 'sylius.form.type.promotion_rule_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleChoiceType A Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleChoiceType instance
     */
    protected function getSylius_Form_Type_PromotionRuleChoiceService()
    {
        return $this->services['sylius.form.type.promotion_rule_choice'] = new \Sylius\Bundle\PromotionBundle\Form\Type\PromotionRuleChoiceType(array('item_total' => 'Item total', 'cart_quantity' => 'Cart quantity', 'customer_group' => 'Customer group', 'nth_order' => 'Nth order', 'shipping_country' => 'Shipping country', 'has_taxon' => 'Has at least one from taxons', 'total_of_items_from_taxon' => 'Total price of items from taxon', 'contains_product' => 'Contains product'));
    }

    /**
     * Gets the 'sylius.form.type.province' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ProvinceType A Sylius\Bundle\AddressingBundle\Form\Type\ProvinceType instance
     */
    protected function getSylius_Form_Type_ProvinceService()
    {
        return $this->services['sylius.form.type.province'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ProvinceType('Sylius\\Component\\Addressing\\Model\\Province', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.province_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ProvinceChoiceType A Sylius\Bundle\AddressingBundle\Form\Type\ProvinceChoiceType instance
     */
    protected function getSylius_Form_Type_ProvinceChoiceService()
    {
        return $this->services['sylius.form.type.province_choice'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ProvinceChoiceType($this->get('sylius.repository.province'));
    }

    /**
     * Gets the 'sylius.form.type.province_code_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ProvinceCodeChoiceType A Sylius\Bundle\AddressingBundle\Form\Type\ProvinceCodeChoiceType instance
     */
    protected function getSylius_Form_Type_ProvinceCodeChoiceService()
    {
        return $this->services['sylius.form.type.province_code_choice'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ProvinceCodeChoiceType($this->get('sylius.repository.province'));
    }

    /**
     * Gets the 'sylius.form.type.resource_autocomplete_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType A Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType instance
     */
    protected function getSylius_Form_Type_ResourceAutocompleteChoiceService()
    {
        $a = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Resource\\Repository\\RepositoryInterface', 'resource repository');
        $a->register('sylius.order', $this->get('sylius.repository.order'));
        $a->register('sylius.order_item', $this->get('sylius.repository.order_item'));
        $a->register('sylius.order_item_unit', $this->get('sylius.repository.order_item_unit'));
        $a->register('sylius.order_sequence', $this->get('sylius.repository.order_sequence'));
        $a->register('sylius.adjustment', $this->get('sylius.repository.adjustment'));
        $a->register('sylius.currency', $this->get('sylius.repository.currency'));
        $a->register('sylius.exchange_rate', $this->get('sylius.repository.exchange_rate'));
        $a->register('sylius.locale', $this->get('sylius.repository.locale'));
        $a->register('sylius.product', $this->get('sylius.repository.product'));
        $a->register('sylius.product_translation', $this->get('sylius.repository.product_translation'));
        $a->register('sylius.product_variant', $this->get('sylius.repository.product_variant'));
        $a->register('sylius.product_variant_translation', $this->get('sylius.repository.product_variant_translation'));
        $a->register('sylius.product_option', $this->get('sylius.repository.product_option'));
        $a->register('sylius.product_option_translation', $this->get('sylius.repository.product_option_translation'));
        $a->register('sylius.product_association_type', $this->get('sylius.repository.product_association_type'));
        $a->register('sylius.product_association_type_translation', $this->get('sylius.repository.product_association_type_translation'));
        $a->register('sylius.product_option_value', $this->get('sylius.repository.product_option_value'));
        $a->register('sylius.product_option_value_translation', $this->get('sylius.repository.product_option_value_translation'));
        $a->register('sylius.product_association', $this->get('sylius.repository.product_association'));
        $a->register('sylius.channel', $this->get('sylius.repository.channel'));
        $a->register('sylius.product_attribute', $this->get('sylius.repository.product_attribute'));
        $a->register('sylius.product_attribute_translation', $this->get('sylius.repository.product_attribute_translation'));
        $a->register('sylius.product_attribute_value', $this->get('sylius.repository.product_attribute_value'));
        $a->register('sylius.tax_rate', $this->get('sylius.repository.tax_rate'));
        $a->register('sylius.tax_category', $this->get('sylius.repository.tax_category'));
        $a->register('sylius.shipment', $this->get('sylius.repository.shipment'));
        $a->register('sylius.shipment_unit', $this->get('sylius.repository.shipment_unit'));
        $a->register('sylius.shipping_method', $this->get('sylius.repository.shipping_method'));
        $a->register('sylius.shipping_method_translation', $this->get('sylius.repository.shipping_method_translation'));
        $a->register('sylius.shipping_category', $this->get('sylius.repository.shipping_category'));
        $a->register('sylius.payment', $this->get('sylius.repository.payment'));
        $a->register('sylius.payment_method', $this->get('sylius.repository.payment_method'));
        $a->register('sylius.payment_method_translation', $this->get('sylius.repository.payment_method_translation'));
        $a->register('sylius.promotion_subject', $this->get('sylius.repository.promotion_subject'));
        $a->register('sylius.promotion', $this->get('sylius.repository.promotion'));
        $a->register('sylius.promotion_coupon', $this->get('sylius.repository.promotion_coupon'));
        $a->register('sylius.promotion_rule', $this->get('sylius.repository.promotion_rule'));
        $a->register('sylius.promotion_action', $this->get('sylius.repository.promotion_action'));
        $a->register('sylius.address', $this->get('sylius.repository.address'));
        $a->register('sylius.address_log_entry', $this->get('sylius.repository.address_log_entry'));
        $a->register('sylius.country', $this->get('sylius.repository.country'));
        $a->register('sylius.province', $this->get('sylius.repository.province'));
        $a->register('sylius.zone', $this->get('sylius.repository.zone'));
        $a->register('sylius.zone_member', $this->get('sylius.repository.zone_member'));
        $a->register('sylius.inventory_unit', $this->get('sylius.repository.inventory_unit'));
        $a->register('sylius.taxon', $this->get('sylius.repository.taxon'));
        $a->register('sylius.taxon_translation', $this->get('sylius.repository.taxon_translation'));
        $a->register('sylius.admin_user', $this->get('sylius.repository.admin_user'));
        $a->register('sylius.shop_user', $this->get('sylius.repository.shop_user'));
        $a->register('sylius.oauth_user', $this->get('sylius.repository.oauth_user'));
        $a->register('sylius.customer', $this->get('sylius.repository.customer'));
        $a->register('sylius.customer_group', $this->get('sylius.repository.customer_group'));
        $a->register('sylius.product_review', $this->get('sylius.repository.product_review'));
        $a->register('sylius.product_reviewer', $this->get('sylius.repository.product_reviewer'));
        $a->register('sylius.product_taxon', $this->get('sylius.repository.product_taxon'));
        $a->register('sylius.product_image', $this->get('sylius.repository.product_image'));
        $a->register('sylius.taxon_image', $this->get('sylius.repository.taxon_image'));
        $a->register('sylius.channel_pricing', $this->get('sylius.repository.channel_pricing'));
        $a->register('sylius.payment_security_token', $this->get('sylius.repository.payment_security_token'));
        $a->register('sylius.gateway_config', $this->get('sylius.repository.gateway_config'));

        return $this->services['sylius.form.type.resource_autocomplete_choice'] = new \Sylius\Bundle\ResourceBundle\Form\Type\ResourceAutocompleteChoiceType($a);
    }

    /**
     * Gets the 'sylius.form.type.resource_translations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType A Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType instance
     */
    protected function getSylius_Form_Type_ResourceTranslationsService()
    {
        return $this->services['sylius.form.type.resource_translations'] = new \Sylius\Bundle\ResourceBundle\Form\Type\ResourceTranslationsType($this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.form.type.security_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UiBundle\Form\Type\SecurityLoginType A Sylius\Bundle\UiBundle\Form\Type\SecurityLoginType instance
     */
    protected function getSylius_Form_Type_SecurityLoginService()
    {
        return $this->services['sylius.form.type.security_login'] = new \Sylius\Bundle\UiBundle\Form\Type\SecurityLoginType();
    }

    /**
     * Gets the 'sylius.form.type.shipment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShipmentType A Sylius\Bundle\ShippingBundle\Form\Type\ShipmentType instance
     */
    protected function getSylius_Form_Type_ShipmentService()
    {
        return $this->services['sylius.form.type.shipment'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShipmentType('Sylius\\Component\\Core\\Model\\Shipment', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.shipment_ship' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShipmentShipType A Sylius\Bundle\ShippingBundle\Form\Type\ShipmentShipType instance
     */
    protected function getSylius_Form_Type_ShipmentShipService()
    {
        return $this->services['sylius.form.type.shipment_ship'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShipmentShipType('Sylius\\Component\\Core\\Model\\Shipment', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.shipping_calculator_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\CalculatorChoiceType A Sylius\Bundle\ShippingBundle\Form\Type\CalculatorChoiceType instance
     */
    protected function getSylius_Form_Type_ShippingCalculatorChoiceService()
    {
        return $this->services['sylius.form.type.shipping_calculator_choice'] = new \Sylius\Bundle\ShippingBundle\Form\Type\CalculatorChoiceType(array('flat_rate' => 'sylius.form.shipping_calculator.flat_rate_configuration.label', 'per_unit_rate' => 'sylius.form.shipping_calculator.per_unit_rate_configuration.label'));
    }

    /**
     * Gets the 'sylius.form.type.shipping_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShippingCategoryType A Sylius\Bundle\ShippingBundle\Form\Type\ShippingCategoryType instance
     */
    protected function getSylius_Form_Type_ShippingCategoryService()
    {
        return $this->services['sylius.form.type.shipping_category'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShippingCategoryType('Sylius\\Component\\Shipping\\Model\\ShippingCategory', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.shipping_category_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShippingCategoryChoiceType A Sylius\Bundle\ShippingBundle\Form\Type\ShippingCategoryChoiceType instance
     */
    protected function getSylius_Form_Type_ShippingCategoryChoiceService()
    {
        return $this->services['sylius.form.type.shipping_category_choice'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShippingCategoryChoiceType($this->get('sylius.repository.shipping_category'));
    }

    /**
     * Gets the 'sylius.form.type.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodType A Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodType instance
     */
    protected function getSylius_Form_Type_ShippingMethodService()
    {
        return $this->services['sylius.form.type.shipping_method'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodType('Sylius\\Component\\Core\\Model\\ShippingMethod', array(0 => 'sylius'), 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodTranslationType', $this->get('sylius.registry.shipping_calculator'), $this->get('sylius.form_registry.shipping_calculator'));
    }

    /**
     * Gets the 'sylius.form.type.shipping_method_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodChoiceType A Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodChoiceType instance
     */
    protected function getSylius_Form_Type_ShippingMethodChoiceService()
    {
        return $this->services['sylius.form.type.shipping_method_choice'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodChoiceType($this->get('sylius.shipping_methods_resolver'), $this->get('sylius.registry.shipping_calculator'), $this->get('sylius.repository.shipping_method'));
    }

    /**
     * Gets the 'sylius.form.type.shipping_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodTranslationType A Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodTranslationType instance
     */
    protected function getSylius_Form_Type_ShippingMethodTranslationService()
    {
        return $this->services['sylius.form.type.shipping_method_translation'] = new \Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodTranslationType('Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.shop_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\User\ShopUserType A Sylius\Bundle\CoreBundle\Form\Type\User\ShopUserType instance
     */
    protected function getSylius_Form_Type_ShopUserService()
    {
        return $this->services['sylius.form.type.shop_user'] = new \Sylius\Bundle\CoreBundle\Form\Type\User\ShopUserType('Sylius\\Component\\Core\\Model\\ShopUser', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.shop_user_registration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\User\ShopUserRegistrationType A Sylius\Bundle\CoreBundle\Form\Type\User\ShopUserRegistrationType instance
     */
    protected function getSylius_Form_Type_ShopUserRegistrationService()
    {
        return $this->services['sylius.form.type.shop_user_registration'] = new \Sylius\Bundle\CoreBundle\Form\Type\User\ShopUserRegistrationType('Sylius\\Component\\Core\\Model\\ShopUser', array(0 => 'sylius', 1 => 'sylius_user_registration'));
    }

    /**
     * Gets the 'sylius.form.type.sylius_product_associations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationsType A Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationsType instance
     */
    protected function getSylius_Form_Type_SyliusProductAssociationsService()
    {
        return $this->services['sylius.form.type.sylius_product_associations'] = new \Sylius\Bundle\ProductBundle\Form\Type\ProductAssociationsType($this->get('sylius.repository.product_association_type'), $this->get('sylius.form.type.data_transformer.products_to_product_associations'));
    }

    /**
     * Gets the 'sylius.form.type.tax_calculation_strategy_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\TaxCalculationStrategyChoiceType A Sylius\Bundle\CoreBundle\Form\Type\TaxCalculationStrategyChoiceType instance
     */
    protected function getSylius_Form_Type_TaxCalculationStrategyChoiceService()
    {
        return $this->services['sylius.form.type.tax_calculation_strategy_choice'] = new \Sylius\Bundle\CoreBundle\Form\Type\TaxCalculationStrategyChoiceType(array('order_items_based' => 'Order items based', 'order_item_units_based' => 'Order item units based'));
    }

    /**
     * Gets the 'sylius.form.type.tax_calculator_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxationBundle\Form\Type\TaxCalculatorChoiceType A Sylius\Bundle\TaxationBundle\Form\Type\TaxCalculatorChoiceType instance
     */
    protected function getSylius_Form_Type_TaxCalculatorChoiceService()
    {
        return $this->services['sylius.form.type.tax_calculator_choice'] = new \Sylius\Bundle\TaxationBundle\Form\Type\TaxCalculatorChoiceType(array('default' => 'default'));
    }

    /**
     * Gets the 'sylius.form.type.tax_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxationBundle\Form\Type\TaxCategoryType A Sylius\Bundle\TaxationBundle\Form\Type\TaxCategoryType instance
     */
    protected function getSylius_Form_Type_TaxCategoryService()
    {
        return $this->services['sylius.form.type.tax_category'] = new \Sylius\Bundle\TaxationBundle\Form\Type\TaxCategoryType('Sylius\\Component\\Taxation\\Model\\TaxCategory', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.tax_category_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxationBundle\Form\Type\TaxCategoryChoiceType A Sylius\Bundle\TaxationBundle\Form\Type\TaxCategoryChoiceType instance
     */
    protected function getSylius_Form_Type_TaxCategoryChoiceService()
    {
        return $this->services['sylius.form.type.tax_category_choice'] = new \Sylius\Bundle\TaxationBundle\Form\Type\TaxCategoryChoiceType($this->get('sylius.repository.tax_category'));
    }

    /**
     * Gets the 'sylius.form.type.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxationBundle\Form\Type\TaxRateType A Sylius\Bundle\TaxationBundle\Form\Type\TaxRateType instance
     */
    protected function getSylius_Form_Type_TaxRateService()
    {
        return $this->services['sylius.form.type.tax_rate'] = new \Sylius\Bundle\TaxationBundle\Form\Type\TaxRateType('Sylius\\Component\\Core\\Model\\TaxRate', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonType A Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonType instance
     */
    protected function getSylius_Form_Type_TaxonService()
    {
        return $this->services['sylius.form.type.taxon'] = new \Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonType('Sylius\\Component\\Core\\Model\\Taxon', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.taxon_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Form\Type\Taxon\TaxonImageType A Sylius\Bundle\CoreBundle\Form\Type\Taxon\TaxonImageType instance
     */
    protected function getSylius_Form_Type_TaxonImageService()
    {
        return $this->services['sylius.form.type.taxon_image'] = new \Sylius\Bundle\CoreBundle\Form\Type\Taxon\TaxonImageType('Sylius\\Component\\Core\\Model\\TaxonImage');
    }

    /**
     * Gets the 'sylius.form.type.taxon_position' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonPositionType A Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonPositionType instance
     */
    protected function getSylius_Form_Type_TaxonPositionService()
    {
        return $this->services['sylius.form.type.taxon_position'] = new \Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonPositionType('Sylius\\Component\\Core\\Model\\Taxon', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.taxon_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonTranslationType A Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonTranslationType instance
     */
    protected function getSylius_Form_Type_TaxonTranslationService()
    {
        return $this->services['sylius.form.type.taxon_translation'] = new \Sylius\Bundle\TaxonomyBundle\Form\Type\TaxonTranslationType('Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.user_change_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Form\Type\UserChangePasswordType A Sylius\Bundle\UserBundle\Form\Type\UserChangePasswordType instance
     */
    protected function getSylius_Form_Type_UserChangePasswordService()
    {
        return $this->services['sylius.form.type.user_change_password'] = new \Sylius\Bundle\UserBundle\Form\Type\UserChangePasswordType('Sylius\\Bundle\\UserBundle\\Form\\Model\\ChangePassword', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.user_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Form\Type\UserLoginType A Sylius\Bundle\UserBundle\Form\Type\UserLoginType instance
     */
    protected function getSylius_Form_Type_UserLoginService()
    {
        return $this->services['sylius.form.type.user_login'] = new \Sylius\Bundle\UserBundle\Form\Type\UserLoginType();
    }

    /**
     * Gets the 'sylius.form.type.user_request_password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Form\Type\UserRequestPasswordResetType A Sylius\Bundle\UserBundle\Form\Type\UserRequestPasswordResetType instance
     */
    protected function getSylius_Form_Type_UserRequestPasswordResetService()
    {
        return $this->services['sylius.form.type.user_request_password_reset'] = new \Sylius\Bundle\UserBundle\Form\Type\UserRequestPasswordResetType('Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordResetRequest', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.user_reset_password' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Form\Type\UserResetPasswordType A Sylius\Bundle\UserBundle\Form\Type\UserResetPasswordType instance
     */
    protected function getSylius_Form_Type_UserResetPasswordService()
    {
        return $this->services['sylius.form.type.user_reset_password'] = new \Sylius\Bundle\UserBundle\Form\Type\UserResetPasswordType('Sylius\\Bundle\\UserBundle\\Form\\Model\\PasswordReset', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form.type.zone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ZoneType A Sylius\Bundle\AddressingBundle\Form\Type\ZoneType instance
     */
    protected function getSylius_Form_Type_ZoneService()
    {
        return $this->services['sylius.form.type.zone'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ZoneType('Sylius\\Component\\Addressing\\Model\\Zone', array(0 => 'sylius'), array('shipping' => 'sylius.form.zone.scopes.shipping', 'tax' => 'sylius.form.zone.scopes.tax', 'all' => 'sylius.form.zone.scopes.all'));
    }

    /**
     * Gets the 'sylius.form.type.zone_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ZoneChoiceType A Sylius\Bundle\AddressingBundle\Form\Type\ZoneChoiceType instance
     */
    protected function getSylius_Form_Type_ZoneChoiceService()
    {
        return $this->services['sylius.form.type.zone_choice'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ZoneChoiceType($this->get('sylius.repository.zone'));
    }

    /**
     * Gets the 'sylius.form.type.zone_code_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ZoneCodeChoiceType A Sylius\Bundle\AddressingBundle\Form\Type\ZoneCodeChoiceType instance
     */
    protected function getSylius_Form_Type_ZoneCodeChoiceService()
    {
        return $this->services['sylius.form.type.zone_code_choice'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ZoneCodeChoiceType($this->get('sylius.repository.zone'));
    }

    /**
     * Gets the 'sylius.form.type.zone_member' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Form\Type\ZoneMemberType A Sylius\Bundle\AddressingBundle\Form\Type\ZoneMemberType instance
     */
    protected function getSylius_Form_Type_ZoneMemberService()
    {
        return $this->services['sylius.form.type.zone_member'] = new \Sylius\Bundle\AddressingBundle\Form\Type\ZoneMemberType('Sylius\\Component\\Addressing\\Model\\ZoneMember', array(0 => 'sylius'));
    }

    /**
     * Gets the 'sylius.form_registry.attribute_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry A Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry instance
     */
    protected function getSylius_FormRegistry_AttributeTypeService()
    {
        $this->services['sylius.form_registry.attribute_type'] = $instance = new \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('text', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\TextAttributeType');
        $instance->add('text', 'configuration', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\Configuration\\TextAttributeConfigurationType');
        $instance->add('textarea', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\TextareaAttributeType');
        $instance->add('checkbox', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\CheckboxAttributeType');
        $instance->add('integer', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\IntegerAttributeType');
        $instance->add('percent', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\PercentAttributeType');
        $instance->add('datetime', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\DatetimeAttributeType');
        $instance->add('datetime', 'configuration', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\Configuration\\DatetimeAttributeConfigurationType');
        $instance->add('date', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\DateAttributeType');
        $instance->add('date', 'configuration', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\Configuration\\DateAttributeConfigurationType');
        $instance->add('select', 'default', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\SelectAttributeType');
        $instance->add('select', 'configuration', 'Sylius\\Bundle\\AttributeBundle\\Form\\Type\\AttributeType\\Configuration\\SelectAttributeConfigurationType');

        return $instance;
    }

    /**
     * Gets the 'sylius.form_registry.payum_gateway_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry A Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry instance
     */
    protected function getSylius_FormRegistry_PayumGatewayConfigService()
    {
        $this->services['sylius.form_registry.payum_gateway_config'] = $instance = new \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('gateway_config', 'paypal_express_checkout', 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\PaypalGatewayConfigurationType');
        $instance->add('gateway_config', 'stripe_checkout', 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\StripeGatewayConfigurationType');

        return $instance;
    }

    /**
     * Gets the 'sylius.form_registry.promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry A Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry instance
     */
    protected function getSylius_FormRegistry_PromotionActionService()
    {
        $this->services['sylius.form_registry.promotion_action'] = $instance = new \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('order_fixed_discount', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Action\\ChannelBasedFixedDiscountConfigurationType');
        $instance->add('unit_fixed_discount', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Action\\ChannelBasedUnitFixedDiscountConfigurationType');
        $instance->add('order_percentage_discount', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Action\\PercentageDiscountConfigurationType');
        $instance->add('unit_percentage_discount', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Action\\ChannelBasedUnitPercentageDiscountConfigurationType');
        $instance->add('shipping_percentage_discount', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Action\\PercentageDiscountConfigurationType');

        return $instance;
    }

    /**
     * Gets the 'sylius.form_registry.promotion_rule_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry A Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry instance
     */
    protected function getSylius_FormRegistry_PromotionRuleCheckerService()
    {
        $this->services['sylius.form_registry.promotion_rule_checker'] = $instance = new \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('item_total', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Rule\\ChannelBasedItemTotalConfigurationType');
        $instance->add('cart_quantity', 'default', 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\Rule\\CartQuantityConfigurationType');
        $instance->add('customer_group', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\CustomerGroupConfigurationType');
        $instance->add('nth_order', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\NthOrderConfigurationType');
        $instance->add('shipping_country', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\ShippingCountryConfigurationType');
        $instance->add('has_taxon', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\HasTaxonConfigurationType');
        $instance->add('total_of_items_from_taxon', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\ChannelBasedTotalOfItemsFromTaxonConfigurationType');
        $instance->add('contains_product', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Promotion\\Rule\\ContainsProductConfigurationType');

        return $instance;
    }

    /**
     * Gets the 'sylius.form_registry.shipping_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry A Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry instance
     */
    protected function getSylius_FormRegistry_ShippingCalculatorService()
    {
        $this->services['sylius.form_registry.shipping_calculator'] = $instance = new \Sylius\Bundle\ResourceBundle\Form\Registry\FormTypeRegistry();

        $instance->add('flat_rate', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Shipping\\Calculator\\ChannelBasedFlatRateConfigurationType');
        $instance->add('per_unit_rate', 'default', 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Shipping\\Calculator\\ChannelBasedPerUnitRateConfigurationType');

        return $instance;
    }

    /**
     * Gets the 'sylius.generator.product_variant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Product\Generator\ProductVariantGenerator A Sylius\Component\Product\Generator\ProductVariantGenerator instance
     */
    protected function getSylius_Generator_ProductVariantService()
    {
        return $this->services['sylius.generator.product_variant'] = new \Sylius\Component\Product\Generator\ProductVariantGenerator($this->get('sylius.factory.product_variant'), $this->get('sylius.checker.product_variants_parity'));
    }

    /**
     * Gets the 'sylius.generator.slug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Product\Generator\SlugGenerator A Sylius\Component\Product\Generator\SlugGenerator instance
     */
    protected function getSylius_Generator_SlugService()
    {
        return $this->services['sylius.generator.slug'] = new \Sylius\Component\Product\Generator\SlugGenerator();
    }

    /**
     * Gets the 'sylius.generator.taxon_slug' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Taxonomy\Generator\TaxonSlugGenerator A Sylius\Component\Taxonomy\Generator\TaxonSlugGenerator instance
     */
    protected function getSylius_Generator_TaxonSlugService()
    {
        return $this->services['sylius.generator.taxon_slug'] = new \Sylius\Component\Taxonomy\Generator\TaxonSlugGenerator($this->get('sylius.repository.taxon'));
    }

    /**
     * Gets the 'sylius.grid.array_to_definition_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Definition\ArrayToDefinitionConverter A Sylius\Component\Grid\Definition\ArrayToDefinitionConverter instance
     */
    protected function getSylius_Grid_ArrayToDefinitionConverterService()
    {
        return $this->services['sylius.grid.array_to_definition_converter'] = new \Sylius\Component\Grid\Definition\ArrayToDefinitionConverter($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.grid.data_extractor.property_access' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\DataExtractor\PropertyAccessDataExtractor A Sylius\Component\Grid\DataExtractor\PropertyAccessDataExtractor instance
     */
    protected function getSylius_Grid_DataExtractor_PropertyAccessService()
    {
        return $this->services['sylius.grid.data_extractor.property_access'] = new \Sylius\Component\Grid\DataExtractor\PropertyAccessDataExtractor($this->get('property_accessor'));
    }

    /**
     * Gets the 'sylius.grid.data_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Data\DataProvider A Sylius\Component\Grid\Data\DataProvider instance
     */
    protected function getSylius_Grid_DataProviderService()
    {
        return $this->services['sylius.grid.data_provider'] = new \Sylius\Component\Grid\Data\DataProvider($this->get('sylius.grid.data_source_provider'), $this->get('sylius.grid.filters_applicator'), $this->get('sylius.grid.sorter'));
    }

    /**
     * Gets the 'sylius.grid.data_source_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Data\DataSourceProvider A Sylius\Component\Grid\Data\DataSourceProvider instance
     */
    protected function getSylius_Grid_DataSourceProviderService()
    {
        return $this->services['sylius.grid.data_source_provider'] = new \Sylius\Component\Grid\Data\DataSourceProvider($this->get('sylius.registry.grid_driver'));
    }

    /**
     * Gets the 'sylius.grid.filters_applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filtering\FiltersApplicator A Sylius\Component\Grid\Filtering\FiltersApplicator instance
     */
    protected function getSylius_Grid_FiltersApplicatorService()
    {
        return $this->services['sylius.grid.filters_applicator'] = new \Sylius\Component\Grid\Filtering\FiltersApplicator($this->get('sylius.registry.grid_filter'), $this->get('sylius.grid.filters_criteria_resolver'));
    }

    /**
     * Gets the 'sylius.grid.filters_criteria_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filtering\FiltersCriteriaResolver A Sylius\Component\Grid\Filtering\FiltersCriteriaResolver instance
     */
    protected function getSylius_Grid_FiltersCriteriaResolverService()
    {
        return $this->services['sylius.grid.filters_criteria_resolver'] = new \Sylius\Component\Grid\Filtering\FiltersCriteriaResolver();
    }

    /**
     * Gets the 'sylius.grid.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Provider\ArrayGridProvider A Sylius\Component\Grid\Provider\ArrayGridProvider instance
     */
    protected function getSylius_Grid_ProviderService()
    {
        return $this->services['sylius.grid.provider'] = new \Sylius\Component\Grid\Provider\ArrayGridProvider($this->get('sylius.grid.array_to_definition_converter'), array('sylius_admin_address_log_entry' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Addressing\\Model\\AddressLogEntry', 'repository' => array('method' => 'createByObjectIdQueryBuilder', 'arguments' => array('objectId' => '$id')))), 'fields' => array('action' => array('type' => 'twig', 'label' => 'sylius.ui.action', 'options' => array('template' => '@SyliusUi/Grid/Field/logAction.html.twig'), 'enabled' => true, 'position' => 100), 'loggedAt' => array('type' => 'datetime', 'label' => 'sylius.ui.logged_at', 'options' => array('format' => 'd-m-Y H:i:s'), 'enabled' => true, 'position' => 100), 'data' => array('type' => 'twig', 'label' => 'sylius.ui.changes', 'options' => array('template' => '@SyliusUi/Grid/Field/logData.html.twig'), 'enabled' => true, 'position' => 100)), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50), 'filters' => array(), 'actions' => array()), 'sylius_admin_admin_user' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\AdminUser')), 'sorting' => array('createdAt' => 'desc'), 'fields' => array('firstName' => array('type' => 'string', 'label' => 'sylius.ui.first_name', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'lastName' => array('type' => 'string', 'label' => 'sylius.ui.last_name', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'username' => array('type' => 'string', 'label' => 'sylius.ui.username', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'email' => array('type' => 'string', 'label' => 'sylius.ui.email', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'createdAt' => array('type' => 'datetime', 'label' => 'sylius.ui.registration_date', 'sortable' => NULL, 'options' => array('format' => 'd-m-Y H:i'), 'enabled' => true, 'position' => 100), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'email', 1 => 'username', 2 => 'firstName', 3 => 'lastName')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'enabled' => array('type' => 'boolean', 'label' => 'sylius.ui.enabled', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_channel' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\Channel')), 'sorting' => array('nameAndDescription' => 'asc'), 'fields' => array('code' => array('type' => 'twig', 'label' => 'sylius.ui.code', 'path' => '.', 'sortable' => 'code', 'options' => array('template' => '@SyliusAdmin/Channel/Grid/Field/code.html.twig'), 'enabled' => true, 'position' => 100), 'nameAndDescription' => array('type' => 'twig', 'label' => 'sylius.ui.name', 'path' => '.', 'sortable' => 'name', 'options' => array('template' => '@SyliusUi/Grid/Field/nameAndDescription.html.twig'), 'enabled' => true, 'position' => 100), 'themeName' => array('type' => 'twig', 'label' => 'sylius.ui.theme', 'sortable' => NULL, 'options' => array('template' => '@SyliusAdmin/Channel/Grid/Field/themeName.html.twig'), 'enabled' => true, 'position' => 100), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'name')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'enabled' => array('type' => 'boolean', 'label' => 'sylius.ui.enabled', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_country' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Addressing\\Model\\Country')), 'sorting' => array('code' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'twig', 'label' => 'sylius.ui.name', 'path' => '.', 'sortable' => 'code', 'options' => array('template' => '@SyliusAdmin/Country/Grid/Field/name.html.twig'), 'enabled' => true, 'position' => 100), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'enabled' => array('type' => 'boolean', 'label' => 'sylius.ui.enabled', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_currency' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Currency\\Model\\Currency')), 'sorting' => array('code' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_customer' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\Customer')), 'sorting' => array('createdAt' => 'desc'), 'fields' => array('firstName' => array('type' => 'string', 'label' => 'sylius.ui.first_name', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'lastName' => array('type' => 'string', 'label' => 'sylius.ui.last_name', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'email' => array('type' => 'string', 'label' => 'sylius.ui.email', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'createdAt' => array('type' => 'datetime', 'label' => 'sylius.ui.registration_date', 'sortable' => NULL, 'options' => array('format' => 'd-m-Y H:i'), 'enabled' => true, 'position' => 100), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'path' => '.', 'options' => array('template' => '@SyliusAdmin/Customer/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100), 'verified' => array('type' => 'twig', 'label' => 'sylius.ui.verified', 'path' => '.', 'options' => array('template' => '@SyliusAdmin/Customer/Grid/Field/verified.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'email', 1 => 'firstName', 2 => 'lastName')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('show_orders' => array('type' => 'show', 'label' => 'sylius.ui.show_orders', 'options' => array('link' => array('route' => 'sylius_admin_customer_order_index', 'parameters' => array('id' => 'resource.id'))), 'enabled' => true, 'position' => 100), 'show' => array('type' => 'show', 'enabled' => true, 'position' => 100, 'options' => array()), 'update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_customer_group' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Customer\\Model\\CustomerGroup')), 'sorting' => array('name' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_customer_order' => array('extends' => 'sylius_admin_order', 'driver' => array('options' => array('repository' => array('method' => 'createByCustomerIdQueryBuilder', 'arguments' => array('customerId' => '$id'))), 'name' => 'doctrine/orm'), 'filters' => array('customer' => array('type' => 'string', 'enabled' => false, 'position' => 100, 'options' => array(), 'form_options' => array())), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50), 'fields' => array(), 'actions' => array()), 'sylius_admin_exchange_rate' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Currency\\Model\\ExchangeRate')), 'sorting' => array('id' => 'desc'), 'fields' => array('id' => array('type' => 'string', 'enabled' => false, 'sortable' => NULL, 'position' => 100, 'options' => array()), 'sourceCurrency' => array('type' => 'twig', 'label' => 'sylius.ui.base_currency', 'path' => '.', 'options' => array('template' => '@SyliusAdmin/ExchangeRate/Grid/Field/sourceCurrencyName.html.twig'), 'enabled' => true, 'position' => 100), 'targetCurrency' => array('type' => 'twig', 'label' => 'sylius.ui.target_currency', 'path' => '.', 'options' => array('template' => '@SyliusAdmin/ExchangeRate/Grid/Field/targetCurrencyName.html.twig'), 'enabled' => true, 'position' => 100), 'ratio' => array('type' => 'string', 'label' => 'sylius.ui.ratio', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('currency' => array('type' => 'entity', 'label' => 'sylius.ui.currency', 'options' => array('fields' => array(0 => 'sourceCurrency', 1 => 'targetCurrency')), 'form_options' => array('class' => 'Sylius\\Component\\Currency\\Model\\Currency', 'choice_label' => 'name'), 'enabled' => true, 'position' => 100)), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_inventory' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\ProductVariant', 'repository' => array('method' => 'createInventoryListQueryBuilder', 'arguments' => array(0 => 'en_US')))), 'fields' => array('name' => array('type' => 'twig', 'path' => '.', 'label' => 'sylius.ui.name', 'options' => array('template' => '@SyliusAdmin/ProductVariant/Grid/Field/name.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array()), 'inventory' => array('type' => 'twig', 'path' => '.', 'label' => 'sylius.ui.inventory', 'options' => array('template' => '@SyliusAdmin/ProductVariant/Grid/Field/inventory.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'options' => array('fields' => array(0 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('item' => array('update_product' => array('type' => 'update', 'label' => 'sylius.ui.edit_product', 'options' => array('link' => array('route' => 'sylius_admin_product_update', 'parameters' => array('id' => 'resource.product.id'))), 'enabled' => true, 'position' => 100), 'update' => array('type' => 'update', 'options' => array('link' => array('parameters' => array('id' => 'resource.id', 'productId' => 'resource.product.id'))), 'enabled' => true, 'position' => 100))), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_locale' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Locale\\Model\\Locale')), 'sorting' => array('code' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'twig', 'label' => 'sylius.ui.name', 'path' => '.', 'sortable' => 'code', 'options' => array('template' => '@SyliusAdmin/Locale/Grid/Field/name.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_order' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\Order', 'repository' => array('method' => 'createListQueryBuilder'))), 'sorting' => array('number' => 'desc'), 'fields' => array('channel' => array('type' => 'twig', 'label' => 'sylius.ui.channel', 'sortable' => 'channel.code', 'options' => array('template' => '@SyliusAdmin/Order/Grid/Field/channel.html.twig'), 'enabled' => true, 'position' => 100), 'number' => array('type' => 'twig', 'label' => 'sylius.ui.number', 'path' => '.', 'sortable' => NULL, 'options' => array('template' => '@SyliusAdmin/Order/Grid/Field/number.html.twig'), 'enabled' => true, 'position' => 100), 'date' => array('type' => 'datetime', 'label' => 'sylius.ui.date', 'path' => 'checkoutCompletedAt', 'sortable' => 'checkoutCompletedAt', 'options' => array('format' => 'd-m-Y H:i:s'), 'enabled' => true, 'position' => 100), 'customer' => array('type' => 'twig', 'label' => 'sylius.ui.customer', 'sortable' => 'customer.lastName', 'options' => array('template' => '@SyliusAdmin/Order/Grid/Field/customer.html.twig'), 'enabled' => true, 'position' => 100), 'state' => array('type' => 'twig', 'label' => 'sylius.ui.state', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/state.html.twig', 'vars' => array('labels' => '@SyliusAdmin/Order/Label/State')), 'enabled' => true, 'position' => 100), 'paymentState' => array('type' => 'twig', 'label' => 'sylius.ui.payment_state', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/state.html.twig', 'vars' => array('labels' => '@SyliusAdmin/Order/Label/PaymentState')), 'enabled' => true, 'position' => 100), 'shippingState' => array('type' => 'twig', 'label' => 'sylius.ui.shipping_state', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/state.html.twig', 'vars' => array('labels' => '@SyliusAdmin/Order/Label/ShippingState')), 'enabled' => true, 'position' => 100), 'total' => array('type' => 'twig', 'label' => 'sylius.ui.total', 'path' => '.', 'sortable' => 'total', 'options' => array('template' => '@SyliusAdmin/Order/Grid/Field/total.html.twig'), 'enabled' => true, 'position' => 100), 'currencyCode' => array('type' => 'string', 'label' => 'sylius.ui.currency', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('number' => array('type' => 'string', 'label' => 'sylius.ui.number', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'customer' => array('type' => 'string', 'label' => 'sylius.ui.customer', 'options' => array('fields' => array(0 => 'customer.email', 1 => 'customer.firstName', 2 => 'customer.lastName')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'date' => array('type' => 'date', 'label' => 'sylius.ui.date', 'options' => array('field' => 'checkoutCompletedAt'), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'channel' => array('type' => 'entity', 'label' => 'sylius.ui.channel', 'form_options' => array('class' => 'Sylius\\Component\\Core\\Model\\Channel'), 'enabled' => true, 'position' => 100, 'options' => array()), 'total' => array('type' => 'money', 'label' => 'sylius.ui.total', 'options' => array('currency_field' => 'currencyCode'), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('item' => array('show' => array('type' => 'show', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_payment_method' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\PaymentMethod', 'repository' => array('method' => 'createListQueryBuilder', 'arguments' => array(0 => 'en_US')))), 'sorting' => array('position' => 'asc'), 'fields' => array('position' => array('type' => 'twig', 'label' => 'sylius.ui.position', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/position.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'sortable' => 'translation.name', 'enabled' => true, 'position' => 100, 'options' => array()), 'gateway' => array('type' => 'string', 'path' => 'gatewayConfig.gatewayName', 'label' => 'sylius.ui.gateway', 'sortable' => 'gatewayConfig.gatewayName', 'enabled' => true, 'position' => 100, 'options' => array()), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'enabled' => array('type' => 'boolean', 'label' => 'sylius.ui.enabled', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create_payment_method', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_product' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\Product', 'repository' => array('method' => 'createListQueryBuilder', 'arguments' => array(0 => 'en_US', 1 => '$taxonId')))), 'sorting' => array('code' => 'asc'), 'fields' => array('image' => array('type' => 'twig', 'label' => 'sylius.ui.image', 'path' => '.', 'options' => array('template' => '@SyliusAdmin/Product/Grid/Field/image.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'sortable' => 'translation.name', 'enabled' => true, 'position' => 100, 'options' => array()), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'options' => array('template' => '@SyliusUi/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'enabled' => array('type' => 'boolean', 'label' => 'sylius.ui.enabled', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'links', 'label' => 'sylius.ui.create', 'options' => array('class' => 'primary', 'icon' => 'plus', 'header' => array('icon' => 'cube', 'label' => 'sylius.ui.type'), 'links' => array('simple' => array('label' => 'sylius.ui.simple_product', 'icon' => 'plus', 'route' => 'sylius_admin_product_create_simple'), 'configurable' => array('label' => 'sylius.ui.configurable_product', 'icon' => 'plus', 'route' => 'sylius_admin_product_create'))), 'enabled' => true, 'position' => 100)), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array())), 'subitem' => array('variants' => array('type' => 'links', 'label' => 'sylius.ui.manage_variants', 'options' => array('icon' => 'cubes', 'links' => array('index' => array('label' => 'sylius.ui.list_variants', 'icon' => 'list', 'route' => 'sylius_admin_product_variant_index', 'parameters' => array('productId' => 'resource.id')), 'create' => array('label' => 'sylius.ui.create', 'icon' => 'plus', 'route' => 'sylius_admin_product_variant_create', 'parameters' => array('productId' => 'resource.id')), 'generate' => array('label' => 'sylius.ui.generate', 'icon' => 'random', 'route' => 'sylius_admin_product_variant_generate', 'visible' => 'resource.hasOptions', 'parameters' => array('productId' => 'resource.id')))), 'enabled' => true, 'position' => 100))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_product_association_type' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Product\\Model\\ProductAssociationType', 'repository' => array('method' => 'createListQueryBuilder', 'arguments' => array(0 => 'en_US')))), 'sorting' => array('code' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'options' => array('fields' => array(0 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_product_attribute' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Product\\Model\\ProductAttribute')), 'sorting' => array('position' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'enabled' => true, 'position' => 100, 'options' => array()), 'position' => array('type' => 'string', 'enabled' => false, 'sortable' => NULL, 'position' => 100, 'options' => array()), 'type' => array('type' => 'twig', 'label' => 'sylius.ui.type', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/rawLabel.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create_product_attribute', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_product_from_taxon' => array('extends' => 'sylius_admin_product', 'sorting' => array('position' => 'asc'), 'fields' => array('position' => array('type' => 'twig', 'label' => 'sylius.ui.position', 'path' => '.', 'sortable' => 'productTaxon.position', 'options' => array('template' => '@SyliusAdmin/Product/Grid/Field/position.html.twig'), 'enabled' => true, 'position' => 100)), 'actions' => array('main' => array('update_positions' => array('type' => 'update_product_positions', 'enabled' => true, 'position' => 100, 'options' => array()))), 'driver' => array('name' => 'doctrine/orm', 'options' => array()), 'limits' => array(0 => 10, 1 => 25, 2 => 50), 'filters' => array()), 'sylius_admin_product_option' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Product\\Model\\ProductOption', 'repository' => array('method' => 'createListQueryBuilder', 'arguments' => array(0 => 'en_US')))), 'sorting' => array('position' => 'asc'), 'fields' => array('position' => array('type' => 'twig', 'label' => 'sylius.ui.position', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/position.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'sortable' => 'translation.name', 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_product_review' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\ProductReview')), 'sorting' => array('date' => 'desc'), 'fields' => array('date' => array('type' => 'datetime', 'label' => 'sylius.ui.date', 'path' => 'createdAt', 'sortable' => 'createdAt', 'options' => array('format' => 'd-m-Y H:i:s'), 'enabled' => true, 'position' => 100), 'title' => array('type' => 'string', 'label' => 'sylius.ui.title', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'rating' => array('type' => 'string', 'label' => 'sylius.ui.rating', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'status' => array('type' => 'twig', 'label' => 'sylius.ui.status', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/state.html.twig', 'vars' => array('labels' => '@SyliusAdmin/ProductReview/Label/Status')), 'enabled' => true, 'position' => 100), 'reviewSubject' => array('type' => 'string', 'label' => 'sylius.ui.product', 'enabled' => true, 'position' => 100, 'options' => array()), 'author' => array('type' => 'string', 'label' => 'sylius.ui.customer', 'enabled' => true, 'position' => 100, 'options' => array())), 'filters' => array('title' => array('type' => 'string', 'label' => 'sylius.ui.title', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'accept' => array('type' => 'apply_transition', 'label' => 'sylius.ui.accept', 'icon' => 'checkmark', 'options' => array('link' => array('route' => 'sylius_admin_product_review_accept', 'parameters' => array('id' => 'resource.id')), 'class' => 'green', 'transition' => 'accept', 'graph' => 'sylius_product_review'), 'enabled' => true, 'position' => 100), 'reject' => array('type' => 'apply_transition', 'label' => 'sylius.ui.reject', 'icon' => 'remove', 'options' => array('link' => array('route' => 'sylius_admin_product_review_reject', 'parameters' => array('id' => 'resource.id')), 'class' => 'yellow', 'transition' => 'reject', 'graph' => 'sylius_product_review'), 'enabled' => true, 'position' => 100), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_product_variant' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\ProductVariant', 'repository' => array('method' => 'createQueryBuilderByProductId', 'arguments' => array(0 => 'en_US', 1 => '$productId')))), 'sorting' => array('position' => 'asc'), 'fields' => array('name' => array('type' => 'twig', 'path' => '.', 'label' => 'sylius.ui.name', 'options' => array('template' => '@SyliusAdmin/ProductVariant/Grid/Field/name.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array()), 'inventory' => array('type' => 'twig', 'path' => '.', 'label' => 'sylius.ui.inventory', 'options' => array('template' => '@SyliusAdmin/ProductVariant/Grid/Field/inventory.html.twig'), 'enabled' => true, 'position' => 100), 'position' => array('type' => 'twig', 'label' => 'sylius.ui.position', 'path' => '.', 'sortable' => 'position', 'options' => array('template' => '@SyliusAdmin/ProductVariant/Grid/Field/position.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'options' => array('fields' => array(0 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('generate' => array('type' => 'generate_variants', 'options' => array('product' => 'expr:service(\'sylius.repository.product\').find($productId)'), 'enabled' => true, 'position' => 100), 'update_positions' => array('type' => 'update_product_variant_positions', 'enabled' => true, 'position' => 100, 'options' => array()), 'create' => array('type' => 'create', 'options' => array('link' => array('parameters' => array('productId' => '$productId'))), 'enabled' => true, 'position' => 100)), 'item' => array('update' => array('type' => 'update', 'options' => array('link' => array('parameters' => array('id' => 'resource.id', 'productId' => '$productId'))), 'enabled' => true, 'position' => 100), 'delete' => array('type' => 'delete', 'options' => array('link' => array('parameters' => array('id' => 'resource.id', 'productId' => '$productId'))), 'enabled' => true, 'position' => 100))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_promotion' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\Promotion')), 'sorting' => array('priority' => 'desc'), 'fields' => array('priority' => array('type' => 'twig', 'label' => 'sylius.ui.priority', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/position.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'twig', 'label' => 'sylius.ui.name', 'path' => '.', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/nameAndDescription.html.twig'), 'enabled' => true, 'position' => 100), 'couponBased' => array('type' => 'twig', 'label' => 'sylius.ui.coupons', 'options' => array('template' => '@SyliusUi/Grid/Field/yesNo.html.twig'), 'enabled' => true, 'position' => 100), 'usage' => array('type' => 'twig', 'label' => 'sylius.ui.usage', 'path' => '.', 'sortable' => 'used', 'options' => array('template' => '@SyliusAdmin/Promotion/Grid/Field/usage.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'name')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'couponBased' => array('type' => 'boolean', 'label' => 'sylius.ui.coupon_based', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('coupons' => array('type' => 'links', 'label' => 'sylius.ui.manage_coupons', 'options' => array('visible' => 'resource.couponBased', 'icon' => 'ticket', 'links' => array('index' => array('label' => 'sylius.ui.list_coupons', 'icon' => 'list', 'route' => 'sylius_admin_promotion_coupon_index', 'parameters' => array('promotionId' => 'resource.id')), 'create' => array('label' => 'sylius.ui.create', 'icon' => 'plus', 'route' => 'sylius_admin_promotion_coupon_create', 'parameters' => array('promotionId' => 'resource.id')), 'generate' => array('label' => 'sylius.ui.generate', 'icon' => 'random', 'route' => 'sylius_admin_promotion_coupon_generate', 'parameters' => array('promotionId' => 'resource.id')))), 'enabled' => true, 'position' => 100), 'update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_promotion_coupon' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\PromotionCoupon', 'repository' => array('method' => 'createQueryBuilderByPromotionId', 'arguments' => array('promotionId' => '$promotionId')))), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'usageLimit' => array('type' => 'string', 'label' => 'sylius.ui.usage_limit', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'perCustomerUsageLimit' => array('type' => 'string', 'label' => 'sylius.ui.per_customer_usage_limit', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'used' => array('type' => 'string', 'label' => 'sylius.ui.used', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'expiresAt' => array('type' => 'datetime', 'label' => 'sylius.ui.expires_at', 'sortable' => NULL, 'options' => array('format' => 'd-m-Y'), 'enabled' => true, 'position' => 100)), 'filters' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('generate' => array('type' => 'default', 'label' => 'sylius.ui.generate', 'icon' => 'random', 'options' => array('link' => array('route' => 'sylius_admin_promotion_coupon_generate', 'parameters' => array('promotionId' => '$promotionId'))), 'enabled' => true, 'position' => 100), 'create' => array('type' => 'create', 'options' => array('link' => array('parameters' => array('promotionId' => '$promotionId'))), 'enabled' => true, 'position' => 100)), 'item' => array('update' => array('type' => 'update', 'options' => array('link' => array('parameters' => array('id' => 'resource.id', 'promotionId' => '$promotionId'))), 'enabled' => true, 'position' => 100), 'delete' => array('type' => 'delete', 'options' => array('link' => array('parameters' => array('id' => 'resource.id', 'promotionId' => '$promotionId'))), 'enabled' => true, 'position' => 100))), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_shipping_category' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory', 'repository' => array('method' => 'createListQueryBuilder'))), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'enabled' => true, 'position' => 100, 'options' => array()), 'createdAt' => array('type' => 'datetime', 'label' => 'sylius.ui.creation_date', 'options' => array('format' => 'd-m-Y H:i'), 'enabled' => true, 'position' => 100), 'updatedAt' => array('type' => 'datetime', 'label' => 'sylius.ui.updating_date', 'options' => array('format' => 'd-m-Y H:i'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_shipping_method' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\ShippingMethod', 'repository' => array('method' => 'createListQueryBuilder', 'arguments' => array(0 => 'en_US')))), 'sorting' => array('position' => 'asc'), 'fields' => array('position' => array('type' => 'twig', 'label' => 'sylius.ui.position', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/position.html.twig'), 'enabled' => true, 'position' => 100), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'sortable' => 'translation.name', 'enabled' => true, 'position' => 100, 'options' => array()), 'zone' => array('type' => 'string', 'label' => 'sylius.ui.zone', 'enabled' => true, 'position' => 100, 'options' => array()), 'enabled' => array('type' => 'twig', 'label' => 'sylius.ui.enabled', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/enabled.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'enabled' => array('type' => 'boolean', 'label' => 'sylius.ui.enabled', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'archival' => array('type' => 'exists', 'label' => 'sylius.ui.archival', 'options' => array('field' => 'archivedAt'), 'default_value' => false, 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()), 'archive' => array('type' => 'archive', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_tax_category' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Taxation\\Model\\TaxCategory')), 'sorting' => array('nameAndDescription' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'nameAndDescription' => array('type' => 'twig', 'label' => 'sylius.ui.name', 'path' => '.', 'sortable' => 'name', 'options' => array('template' => '@SyliusUi/Grid/Field/nameAndDescription.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_tax_rate' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\TaxRate')), 'sorting' => array('name' => 'asc'), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'sortable' => NULL, 'enabled' => true, 'position' => 100, 'options' => array()), 'zone' => array('type' => 'string', 'label' => 'sylius.ui.zone', 'enabled' => true, 'position' => 100, 'options' => array()), 'category' => array('type' => 'string', 'label' => 'sylius.ui.category', 'enabled' => true, 'position' => 100, 'options' => array()), 'amount' => array('type' => 'twig', 'label' => 'sylius.ui.amount', 'sortable' => NULL, 'options' => array('template' => '@SyliusUi/Grid/Field/percent.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('search' => array('type' => 'string', 'label' => 'sylius.ui.search', 'options' => array('fields' => array(0 => 'code', 1 => 'name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'create', 'enabled' => true, 'position' => 100, 'options' => array())), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'limits' => array(0 => 10, 1 => 25, 2 => 50)), 'sylius_admin_taxon' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Core\\Model\\Taxon', 'repository' => array('method' => 'createListQueryBuilder'))), 'filters' => array('code' => array('type' => 'string', 'options' => array('fields' => array(0 => 'code')), 'enabled' => true, 'position' => 100, 'form_options' => array()), 'name' => array('type' => 'string', 'options' => array('fields' => array(0 => 'translation.name')), 'enabled' => true, 'position' => 100, 'form_options' => array())), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50), 'fields' => array(), 'actions' => array()), 'sylius_admin_zone' => array('driver' => array('name' => 'doctrine/orm', 'options' => array('class' => 'Sylius\\Component\\Addressing\\Model\\Zone')), 'fields' => array('code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array()), 'name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'enabled' => true, 'position' => 100, 'options' => array()), 'type' => array('type' => 'twig', 'label' => 'sylius.ui.type', 'options' => array('template' => '@SyliusUi/Grid/Field/label.html.twig'), 'enabled' => true, 'position' => 100)), 'filters' => array('name' => array('type' => 'string', 'label' => 'sylius.ui.name', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array()), 'code' => array('type' => 'string', 'label' => 'sylius.ui.code', 'enabled' => true, 'position' => 100, 'options' => array(), 'form_options' => array())), 'actions' => array('main' => array('create' => array('type' => 'links', 'label' => 'sylius.ui.create', 'options' => array('class' => 'primary', 'icon' => 'plus', 'header' => array('icon' => 'cube', 'label' => 'sylius.ui.type'), 'links' => array('country' => array('label' => 'sylius.ui.zone_consisting_of_countries', 'icon' => 'plus', 'route' => 'sylius_admin_zone_create', 'parameters' => array('type' => 'country')), 'province' => array('label' => 'sylius.ui.zone_consisting_of_provinces', 'icon' => 'plus', 'route' => 'sylius_admin_zone_create', 'parameters' => array('type' => 'province')), 'zone' => array('label' => 'sylius.ui.zone_consisting_of_other_zones', 'icon' => 'plus', 'route' => 'sylius_admin_zone_create', 'parameters' => array('type' => 'zone')))), 'enabled' => true, 'position' => 100)), 'item' => array('update' => array('type' => 'update', 'enabled' => true, 'position' => 100, 'options' => array()), 'delete' => array('type' => 'delete', 'enabled' => true, 'position' => 100, 'options' => array()))), 'sorting' => array(), 'limits' => array(0 => 10, 1 => 25, 2 => 50))));
    }

    /**
     * Gets the 'sylius.grid.resource_view_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Grid\View\ResourceGridViewFactory A Sylius\Bundle\ResourceBundle\Grid\View\ResourceGridViewFactory instance
     */
    protected function getSylius_Grid_ResourceViewFactoryService()
    {
        return $this->services['sylius.grid.resource_view_factory'] = new \Sylius\Bundle\ResourceBundle\Grid\View\ResourceGridViewFactory($this->get('sylius.grid.data_provider'), ${($_ = isset($this->services['sylius.resource_controller.parameters_parser']) ? $this->services['sylius.resource_controller.parameters_parser'] : $this->getSylius_ResourceController_ParametersParserService()) && false ?: '_'});
    }

    /**
     * Gets the 'sylius.grid.sorter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Sorting\Sorter A Sylius\Component\Grid\Sorting\Sorter instance
     */
    protected function getSylius_Grid_SorterService()
    {
        return $this->services['sylius.grid.sorter'] = new \Sylius\Component\Grid\Sorting\Sorter();
    }

    /**
     * Gets the 'sylius.grid.view_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\View\GridViewFactory A Sylius\Component\Grid\View\GridViewFactory instance
     */
    protected function getSylius_Grid_ViewFactoryService()
    {
        return $this->services['sylius.grid.view_factory'] = new \Sylius\Component\Grid\View\GridViewFactory($this->get('sylius.grid.data_provider'));
    }

    /**
     * Gets the 'sylius.grid_driver.doctrine.dbal' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Doctrine\DBAL\Driver A Sylius\Bundle\GridBundle\Doctrine\DBAL\Driver instance
     */
    protected function getSylius_GridDriver_Doctrine_DbalService()
    {
        return $this->services['sylius.grid_driver.doctrine.dbal'] = new \Sylius\Bundle\GridBundle\Doctrine\DBAL\Driver($this->get('doctrine.dbal.default_connection'));
    }

    /**
     * Gets the 'sylius.grid_driver.doctrine.orm' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\Doctrine\ORM\Driver A Sylius\Bundle\GridBundle\Doctrine\ORM\Driver instance
     */
    protected function getSylius_GridDriver_Doctrine_OrmService()
    {
        return $this->services['sylius.grid_driver.doctrine.orm'] = new \Sylius\Bundle\GridBundle\Doctrine\ORM\Driver($this->get('doctrine'));
    }

    /**
     * Gets the 'sylius.grid_field.datetime' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\FieldTypes\DatetimeFieldType A Sylius\Component\Grid\FieldTypes\DatetimeFieldType instance
     */
    protected function getSylius_GridField_DatetimeService()
    {
        return $this->services['sylius.grid_field.datetime'] = new \Sylius\Component\Grid\FieldTypes\DatetimeFieldType($this->get('sylius.grid.data_extractor.property_access'));
    }

    /**
     * Gets the 'sylius.grid_field.string' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\FieldTypes\StringFieldType A Sylius\Component\Grid\FieldTypes\StringFieldType instance
     */
    protected function getSylius_GridField_StringService()
    {
        return $this->services['sylius.grid_field.string'] = new \Sylius\Component\Grid\FieldTypes\StringFieldType($this->get('sylius.grid.data_extractor.property_access'));
    }

    /**
     * Gets the 'sylius.grid_field.twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\GridBundle\FieldTypes\TwigFieldType A Sylius\Bundle\GridBundle\FieldTypes\TwigFieldType instance
     */
    protected function getSylius_GridField_TwigService()
    {
        return $this->services['sylius.grid_field.twig'] = new \Sylius\Bundle\GridBundle\FieldTypes\TwigFieldType($this->get('sylius.grid.data_extractor.property_access'), $this->get('twig'));
    }

    /**
     * Gets the 'sylius.grid_filter.boolean' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filter\BooleanFilter A Sylius\Component\Grid\Filter\BooleanFilter instance
     */
    protected function getSylius_GridFilter_BooleanService()
    {
        return $this->services['sylius.grid_filter.boolean'] = new \Sylius\Component\Grid\Filter\BooleanFilter();
    }

    /**
     * Gets the 'sylius.grid_filter.date' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filter\DateFilter A Sylius\Component\Grid\Filter\DateFilter instance
     */
    protected function getSylius_GridFilter_DateService()
    {
        return $this->services['sylius.grid_filter.date'] = new \Sylius\Component\Grid\Filter\DateFilter();
    }

    /**
     * Gets the 'sylius.grid_filter.entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filter\EntityFilter A Sylius\Component\Grid\Filter\EntityFilter instance
     */
    protected function getSylius_GridFilter_EntityService()
    {
        return $this->services['sylius.grid_filter.entity'] = new \Sylius\Component\Grid\Filter\EntityFilter();
    }

    /**
     * Gets the 'sylius.grid_filter.exists' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filter\ExistsFilter A Sylius\Component\Grid\Filter\ExistsFilter instance
     */
    protected function getSylius_GridFilter_ExistsService()
    {
        return $this->services['sylius.grid_filter.exists'] = new \Sylius\Component\Grid\Filter\ExistsFilter();
    }

    /**
     * Gets the 'sylius.grid_filter.money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filter\MoneyFilter A Sylius\Component\Grid\Filter\MoneyFilter instance
     */
    protected function getSylius_GridFilter_MoneyService()
    {
        return $this->services['sylius.grid_filter.money'] = new \Sylius\Component\Grid\Filter\MoneyFilter();
    }

    /**
     * Gets the 'sylius.grid_filter.string' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Grid\Filter\StringFilter A Sylius\Component\Grid\Filter\StringFilter instance
     */
    protected function getSylius_GridFilter_StringService()
    {
        return $this->services['sylius.grid_filter.string'] = new \Sylius\Component\Grid\Filter\StringFilter();
    }

    /**
     * Gets the 'sylius.handler.shop_user_logout' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\ShopUserLogoutHandler A Sylius\Bundle\CoreBundle\EventListener\ShopUserLogoutHandler instance
     */
    protected function getSylius_Handler_ShopUserLogoutService()
    {
        return $this->services['sylius.handler.shop_user_logout'] = new \Sylius\Bundle\CoreBundle\EventListener\ShopUserLogoutHandler(${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->getSecurity_HttpUtilsService()) && false ?: '_'}, '/', $this->get('session'), $this->get('sylius.context.channel'));
    }

    /**
     * Gets the 'sylius.image_uploader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Uploader\ImageUploader A Sylius\Component\Core\Uploader\ImageUploader instance
     */
    protected function getSylius_ImageUploaderService()
    {
        return $this->services['sylius.image_uploader'] = new \Sylius\Component\Core\Uploader\ImageUploader($this->get('knp_gaufrette.filesystem_map')->get('sylius_image'));
    }

    /**
     * Gets the 'sylius.installer.checker.command_directory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Checker\CommandDirectoryChecker A Sylius\Bundle\CoreBundle\Installer\Checker\CommandDirectoryChecker instance
     */
    protected function getSylius_Installer_Checker_CommandDirectoryService()
    {
        return $this->services['sylius.installer.checker.command_directory'] = new \Sylius\Bundle\CoreBundle\Installer\Checker\CommandDirectoryChecker($this->get('filesystem'));
    }

    /**
     * Gets the 'sylius.installer.checker.sylius_requirements' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Checker\SyliusRequirementsChecker A Sylius\Bundle\CoreBundle\Installer\Checker\SyliusRequirementsChecker instance
     */
    protected function getSylius_Installer_Checker_SyliusRequirementsService()
    {
        return $this->services['sylius.installer.checker.sylius_requirements'] = new \Sylius\Bundle\CoreBundle\Installer\Checker\SyliusRequirementsChecker($this->get('sylius.requirements'));
    }

    /**
     * Gets the 'sylius.integer_distributor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Distributor\IntegerDistributor A Sylius\Component\Core\Distributor\IntegerDistributor instance
     */
    protected function getSylius_IntegerDistributorService()
    {
        return $this->services['sylius.integer_distributor'] = new \Sylius\Component\Core\Distributor\IntegerDistributor();
    }

    /**
     * Gets the 'sylius.inventory.order_inventory_operator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\Inventory\Operator\OrderInventoryOperator A Sylius\Bundle\CoreBundle\Doctrine\ORM\Inventory\Operator\OrderInventoryOperator instance
     */
    protected function getSylius_Inventory_OrderInventoryOperatorService()
    {
        return $this->services['sylius.inventory.order_inventory_operator'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\Inventory\Operator\OrderInventoryOperator(new \Sylius\Component\Core\Inventory\Operator\OrderInventoryOperator(), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.invoice_number_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Payment\RandomInvoiceNumberGenerator A Sylius\Component\Core\Payment\RandomInvoiceNumberGenerator instance
     */
    protected function getSylius_InvoiceNumberGeneratorService()
    {
        return $this->services['sylius.invoice_number_generator'] = new \Sylius\Component\Core\Payment\RandomInvoiceNumberGenerator();
    }

    /**
     * Gets the 'sylius.listener.admin_user.reloader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserReloaderListener A Sylius\Bundle\UserBundle\EventListener\UserReloaderListener instance
     */
    protected function getSylius_Listener_AdminUser_ReloaderService()
    {
        return $this->services['sylius.listener.admin_user.reloader'] = new \Sylius\Bundle\UserBundle\EventListener\UserReloaderListener($this->get('sylius.admin_user.reloader'));
    }

    /**
     * Gets the 'sylius.listener.admin_user_delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserDeleteListener A Sylius\Bundle\UserBundle\EventListener\UserDeleteListener instance
     */
    protected function getSylius_Listener_AdminUserDeleteService()
    {
        return $this->services['sylius.listener.admin_user_delete'] = new \Sylius\Bundle\UserBundle\EventListener\UserDeleteListener($this->get('security.token_storage'), $this->get('session'));
    }

    /**
     * Gets the 'sylius.listener.admin_user_last_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber A Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber instance
     */
    protected function getSylius_Listener_AdminUserLastLoginService()
    {
        return $this->services['sylius.listener.admin_user_last_login'] = new \Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Component\\Core\\Model\\AdminUser');
    }

    /**
     * Gets the 'sylius.listener.canonicalizer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\CanonicalizerListener A Sylius\Bundle\CoreBundle\EventListener\CanonicalizerListener instance
     */
    protected function getSylius_Listener_CanonicalizerService()
    {
        return $this->services['sylius.listener.canonicalizer'] = new \Sylius\Bundle\CoreBundle\EventListener\CanonicalizerListener($this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.listener.cart_blamer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener A Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener instance
     */
    protected function getSylius_Listener_CartBlamerService()
    {
        return $this->services['sylius.listener.cart_blamer'] = new \Sylius\Bundle\CoreBundle\EventListener\CartBlamerListener($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.context.cart'));
    }

    /**
     * Gets the 'sylius.listener.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\ChannelDeletionListener A Sylius\Bundle\CoreBundle\EventListener\ChannelDeletionListener instance
     */
    protected function getSylius_Listener_ChannelService()
    {
        return $this->services['sylius.listener.channel'] = new \Sylius\Bundle\CoreBundle\EventListener\ChannelDeletionListener($this->get('sylius.repository.channel'));
    }

    /**
     * Gets the 'sylius.listener.checkout_redirect' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Checkout\CheckoutRedirectListener A Sylius\Bundle\CoreBundle\Checkout\CheckoutRedirectListener instance
     */
    protected function getSylius_Listener_CheckoutRedirectService()
    {
        return $this->services['sylius.listener.checkout_redirect'] = new \Sylius\Bundle\CoreBundle\Checkout\CheckoutRedirectListener($this->get('request_stack'), $this->get('sylius.router.checkout_state'), new \Symfony\Component\HttpFoundation\RequestMatcher('/checkout/.+'));
    }

    /**
     * Gets the 'sylius.listener.default_username' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\DefaultUsernameORMListener A Sylius\Bundle\CoreBundle\EventListener\DefaultUsernameORMListener instance
     */
    protected function getSylius_Listener_DefaultUsernameService()
    {
        return $this->services['sylius.listener.default_username'] = new \Sylius\Bundle\CoreBundle\EventListener\DefaultUsernameORMListener();
    }

    /**
     * Gets the 'sylius.listener.images_upload' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\ImagesUploadListener A Sylius\Bundle\CoreBundle\EventListener\ImagesUploadListener instance
     */
    protected function getSylius_Listener_ImagesUploadService()
    {
        return $this->services['sylius.listener.images_upload'] = new \Sylius\Bundle\CoreBundle\EventListener\ImagesUploadListener($this->get('sylius.image_uploader'));
    }

    /**
     * Gets the 'sylius.listener.locking' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\LockingListener A Sylius\Bundle\CoreBundle\EventListener\LockingListener instance
     */
    protected function getSylius_Listener_LockingService()
    {
        return $this->services['sylius.listener.locking'] = new \Sylius\Bundle\CoreBundle\EventListener\LockingListener($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.listener.non_channel_request_locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\NonChannelLocaleListener A Sylius\Bundle\ShopBundle\EventListener\NonChannelLocaleListener instance
     */
    protected function getSylius_Listener_NonChannelRequestLocaleService()
    {
        return $this->services['sylius.listener.non_channel_request_locale'] = new \Sylius\Bundle\ShopBundle\EventListener\NonChannelLocaleListener($this->get('sylius.locale_provider.channel_based'), ${($_ = isset($this->services['security.firewall.map']) ? $this->services['security.firewall.map'] : $this->getSecurity_Firewall_MapService()) && false ?: '_'}, array(0 => 'shop'));
    }

    /**
     * Gets the 'sylius.listener.oauth_user.reloader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserReloaderListener A Sylius\Bundle\UserBundle\EventListener\UserReloaderListener instance
     */
    protected function getSylius_Listener_OauthUser_ReloaderService()
    {
        return $this->services['sylius.listener.oauth_user.reloader'] = new \Sylius\Bundle\UserBundle\EventListener\UserReloaderListener($this->get('sylius.oauth_user.reloader'));
    }

    /**
     * Gets the 'sylius.listener.oauth_user_delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserDeleteListener A Sylius\Bundle\UserBundle\EventListener\UserDeleteListener instance
     */
    protected function getSylius_Listener_OauthUserDeleteService()
    {
        return $this->services['sylius.listener.oauth_user_delete'] = new \Sylius\Bundle\UserBundle\EventListener\UserDeleteListener($this->get('security.token_storage'), $this->get('session'));
    }

    /**
     * Gets the 'sylius.listener.oauth_user_last_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber A Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber instance
     */
    protected function getSylius_Listener_OauthUserLastLoginService()
    {
        return $this->services['sylius.listener.oauth_user_last_login'] = new \Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Component\\User\\Model\\UserOAuth');
    }

    /**
     * Gets the 'sylius.listener.order_complete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\OrderCompleteListener A Sylius\Bundle\ShopBundle\EventListener\OrderCompleteListener instance
     */
    protected function getSylius_Listener_OrderCompleteService()
    {
        return $this->services['sylius.listener.order_complete'] = new \Sylius\Bundle\ShopBundle\EventListener\OrderCompleteListener($this->get('sylius.email_manager.order'));
    }

    /**
     * Gets the 'sylius.listener.order_customer_ip' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\OrderCustomerIpListener A Sylius\Bundle\ShopBundle\EventListener\OrderCustomerIpListener instance
     */
    protected function getSylius_Listener_OrderCustomerIpService()
    {
        return $this->services['sylius.listener.order_customer_ip'] = new \Sylius\Bundle\ShopBundle\EventListener\OrderCustomerIpListener($this->get('sylius.customer_ip_assigner'), $this->get('request_stack'));
    }

    /**
     * Gets the 'sylius.listener.order_promotion_integrity_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\OrderPromotionIntegrityChecker A Sylius\Bundle\ShopBundle\EventListener\OrderPromotionIntegrityChecker instance
     */
    protected function getSylius_Listener_OrderPromotionIntegrityCheckerService()
    {
        return $this->services['sylius.listener.order_promotion_integrity_checker'] = new \Sylius\Bundle\ShopBundle\EventListener\OrderPromotionIntegrityChecker($this->get('sylius.promotion_eligibility_checker'), $this->get('debug.event_dispatcher'), $this->get('router'));
    }

    /**
     * Gets the 'sylius.listener.order_recalculation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\OrderRecalculationListener A Sylius\Bundle\CoreBundle\EventListener\OrderRecalculationListener instance
     */
    protected function getSylius_Listener_OrderRecalculationService()
    {
        return $this->services['sylius.listener.order_recalculation'] = new \Sylius\Bundle\CoreBundle\EventListener\OrderRecalculationListener($this->get('sylius.order_processing.order_processor'));
    }

    /**
     * Gets the 'sylius.listener.order_total_integrity_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\OrderTotalIntegrityChecker A Sylius\Bundle\ShopBundle\EventListener\OrderTotalIntegrityChecker instance
     */
    protected function getSylius_Listener_OrderTotalIntegrityCheckerService()
    {
        return $this->services['sylius.listener.order_total_integrity_checker'] = new \Sylius\Bundle\ShopBundle\EventListener\OrderTotalIntegrityChecker($this->get('sylius.order_processing.order_processor'), $this->get('router'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.listener.password_updater' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\PasswordUpdaterListener A Sylius\Bundle\CoreBundle\EventListener\PasswordUpdaterListener instance
     */
    protected function getSylius_Listener_PasswordUpdaterService()
    {
        return $this->services['sylius.listener.password_updater'] = new \Sylius\Bundle\CoreBundle\EventListener\PasswordUpdaterListener($this->get('sylius.security.password_updater'));
    }

    /**
     * Gets the 'sylius.listener.product_review_change' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ReviewBundle\EventListener\ReviewChangeListener A Sylius\Bundle\ReviewBundle\EventListener\ReviewChangeListener instance
     */
    protected function getSylius_Listener_ProductReviewChangeService()
    {
        return $this->services['sylius.listener.product_review_change'] = new \Sylius\Bundle\ReviewBundle\EventListener\ReviewChangeListener($this->get('sylius.product_review.average_rating_updater'));
    }

    /**
     * Gets the 'sylius.listener.request_locale_setter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\LocaleBundle\Listener\RequestLocaleSetter A Sylius\Bundle\LocaleBundle\Listener\RequestLocaleSetter instance
     */
    protected function getSylius_Listener_RequestLocaleSetterService()
    {
        return $this->services['sylius.listener.request_locale_setter'] = new \Sylius\Bundle\LocaleBundle\Listener\RequestLocaleSetter($this->get('sylius.context.locale'), $this->get('sylius.locale_provider.channel_based'));
    }

    /**
     * Gets the 'sylius.listener.review_create' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\ReviewCreateListener A Sylius\Bundle\CoreBundle\EventListener\ReviewCreateListener instance
     */
    protected function getSylius_Listener_ReviewCreateService()
    {
        return $this->services['sylius.listener.review_create'] = new \Sylius\Bundle\CoreBundle\EventListener\ReviewCreateListener($this->get('sylius.context.customer'));
    }

    /**
     * Gets the 'sylius.listener.session_cart' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\SessionCartSubscriber A Sylius\Bundle\CoreBundle\EventListener\SessionCartSubscriber instance
     */
    protected function getSylius_Listener_SessionCartService()
    {
        return $this->services['sylius.listener.session_cart'] = new \Sylius\Bundle\CoreBundle\EventListener\SessionCartSubscriber($this->get('sylius.context.cart'), '_sylius.cart');
    }

    /**
     * Gets the 'sylius.listener.shipment_ship' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\EventListener\ShipmentShipListener A Sylius\Bundle\AdminBundle\EventListener\ShipmentShipListener instance
     */
    protected function getSylius_Listener_ShipmentShipService()
    {
        return $this->services['sylius.listener.shipment_ship'] = new \Sylius\Bundle\AdminBundle\EventListener\ShipmentShipListener($this->get('sylius.email_manager.shipment'));
    }

    /**
     * Gets the 'sylius.listener.shop_user.reloader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserReloaderListener A Sylius\Bundle\UserBundle\EventListener\UserReloaderListener instance
     */
    protected function getSylius_Listener_ShopUser_ReloaderService()
    {
        return $this->services['sylius.listener.shop_user.reloader'] = new \Sylius\Bundle\UserBundle\EventListener\UserReloaderListener($this->get('sylius.shop_user.reloader'));
    }

    /**
     * Gets the 'sylius.listener.shop_user_delete' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserDeleteListener A Sylius\Bundle\UserBundle\EventListener\UserDeleteListener instance
     */
    protected function getSylius_Listener_ShopUserDeleteService()
    {
        return $this->services['sylius.listener.shop_user_delete'] = new \Sylius\Bundle\UserBundle\EventListener\UserDeleteListener($this->get('security.token_storage'), $this->get('session'));
    }

    /**
     * Gets the 'sylius.listener.shop_user_last_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber A Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber instance
     */
    protected function getSylius_Listener_ShopUserLastLoginService()
    {
        return $this->services['sylius.listener.shop_user_last_login'] = new \Sylius\Bundle\UserBundle\EventListener\UserLastLoginSubscriber($this->get('doctrine.orm.default_entity_manager'), 'Sylius\\Component\\Core\\Model\\ShopUser');
    }

    /**
     * Gets the 'sylius.listener.simple_product_locking' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\SimpleProductLockingListener A Sylius\Bundle\CoreBundle\EventListener\SimpleProductLockingListener instance
     */
    protected function getSylius_Listener_SimpleProductLockingService()
    {
        return $this->services['sylius.listener.simple_product_locking'] = new \Sylius\Bundle\CoreBundle\EventListener\SimpleProductLockingListener($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.product_variant_resolver.default'));
    }

    /**
     * Gets the 'sylius.listener.user_cart_recalculation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\EventListener\UserCartRecalculationListener A Sylius\Bundle\CoreBundle\EventListener\UserCartRecalculationListener instance
     */
    protected function getSylius_Listener_UserCartRecalculationService()
    {
        return $this->services['sylius.listener.user_cart_recalculation'] = new \Sylius\Bundle\CoreBundle\EventListener\UserCartRecalculationListener($this->get('sylius.context.cart'), $this->get('sylius.order_processing.order_processor'));
    }

    /**
     * Gets the 'sylius.listener.user_mailer_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\UserMailerListener A Sylius\Bundle\ShopBundle\EventListener\UserMailerListener instance
     */
    protected function getSylius_Listener_UserMailerListenerService()
    {
        return $this->services['sylius.listener.user_mailer_listener'] = new \Sylius\Bundle\ShopBundle\EventListener\UserMailerListener($this->get('sylius.email_sender'), $this->get('sylius.context.channel'));
    }

    /**
     * Gets the 'sylius.listener.user_registration' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\UserRegistrationListener A Sylius\Bundle\ShopBundle\EventListener\UserRegistrationListener instance
     */
    protected function getSylius_Listener_UserRegistrationService()
    {
        return $this->services['sylius.listener.user_registration'] = new \Sylius\Bundle\ShopBundle\EventListener\UserRegistrationListener($this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.shop_user.token_generator.email_verification'), $this->get('debug.event_dispatcher'), $this->get('sylius.context.channel'), $this->get('sylius.security.user_login'), 'shop');
    }

    /**
     * Gets the 'sylius.locale_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Locale\Converter\LocaleConverter A Sylius\Component\Locale\Converter\LocaleConverter instance
     */
    protected function getSylius_LocaleConverterService()
    {
        return $this->services['sylius.locale_converter'] = new \Sylius\Component\Locale\Converter\LocaleConverter();
    }

    /**
     * Gets the 'sylius.locale_provider.channel_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Provider\ChannelBasedLocaleProvider A Sylius\Component\Core\Provider\ChannelBasedLocaleProvider instance
     */
    protected function getSylius_LocaleProvider_ChannelBasedService()
    {
        return $this->services['sylius.locale_provider.channel_based'] = new \Sylius\Component\Core\Provider\ChannelBasedLocaleProvider($this->get('sylius.context.channel'), 'en_US');
    }

    /**
     * Gets the 'sylius.mailer.default_settings_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Mailer\Provider\DefaultSettingsProvider A Sylius\Component\Mailer\Provider\DefaultSettingsProvider instance
     */
    protected function getSylius_Mailer_DefaultSettingsProviderService()
    {
        return $this->services['sylius.mailer.default_settings_provider'] = new \Sylius\Component\Mailer\Provider\DefaultSettingsProvider('Example.com', 'no-reply@example.com');
    }

    /**
     * Gets the 'sylius.money_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\MoneyBundle\Formatter\MoneyFormatter A Sylius\Bundle\MoneyBundle\Formatter\MoneyFormatter instance
     */
    protected function getSylius_MoneyFormatterService()
    {
        return $this->services['sylius.money_formatter'] = new \Sylius\Bundle\MoneyBundle\Formatter\MoneyFormatter();
    }

    /**
     * Gets the 'sylius.oauth_user.pin_generator.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniquePinGenerator A Sylius\Component\User\Security\Generator\UniquePinGenerator instance
     */
    protected function getSylius_OauthUser_PinGenerator_PasswordResetService()
    {
        return $this->services['sylius.oauth_user.pin_generator.password_reset'] = new \Sylius\Component\User\Security\Generator\UniquePinGenerator($this->get('sylius.random_generator'), $this->get('sylius.oauth_user.pin_uniqueness_checker.password_reset'), 4);
    }

    /**
     * Gets the 'sylius.oauth_user.pin_uniqueness_checker.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_OauthUser_PinUniquenessChecker_PasswordResetService()
    {
        return $this->services['sylius.oauth_user.pin_uniqueness_checker.password_reset'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.oauth_user'), 'passwordResetToken');
    }

    /**
     * Gets the 'sylius.oauth_user.reloader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Reloader\UserReloader A Sylius\Bundle\UserBundle\Reloader\UserReloader instance
     */
    protected function getSylius_OauthUser_ReloaderService()
    {
        return $this->services['sylius.oauth_user.reloader'] = new \Sylius\Bundle\UserBundle\Reloader\UserReloader($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.oauth_user.token_generator.email_verification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniqueTokenGenerator A Sylius\Component\User\Security\Generator\UniqueTokenGenerator instance
     */
    protected function getSylius_OauthUser_TokenGenerator_EmailVerificationService()
    {
        return $this->services['sylius.oauth_user.token_generator.email_verification'] = new \Sylius\Component\User\Security\Generator\UniqueTokenGenerator($this->get('sylius.random_generator'), $this->get('sylius.oauth_user.token_uniqueness_checker.email_verification'), 16);
    }

    /**
     * Gets the 'sylius.oauth_user.token_generator.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniqueTokenGenerator A Sylius\Component\User\Security\Generator\UniqueTokenGenerator instance
     */
    protected function getSylius_OauthUser_TokenGenerator_PasswordResetService()
    {
        return $this->services['sylius.oauth_user.token_generator.password_reset'] = new \Sylius\Component\User\Security\Generator\UniqueTokenGenerator($this->get('sylius.random_generator'), $this->get('sylius.oauth_user.token_uniqueness_checker.password_reset'), 16);
    }

    /**
     * Gets the 'sylius.oauth_user.token_uniqueness_checker.email_verification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_OauthUser_TokenUniquenessChecker_EmailVerificationService()
    {
        return $this->services['sylius.oauth_user.token_uniqueness_checker.email_verification'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.oauth_user'), 'emailVerificationToken');
    }

    /**
     * Gets the 'sylius.oauth_user.token_uniqueness_checker.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_OauthUser_TokenUniquenessChecker_PasswordResetService()
    {
        return $this->services['sylius.oauth_user.token_uniqueness_checker.password_reset'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.oauth_user'), 'passwordResetToken');
    }

    /**
     * Gets the 'sylius.oauth_user_provider.email_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\EmailProvider A Sylius\Bundle\UserBundle\Provider\EmailProvider instance
     */
    public function getSylius_OauthUserProvider_EmailBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.oauth_user_provider.email_based'] = new SyliusBundleUserBundleProviderEmailProvider_0000000042552338000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_OauthUserProvider_EmailBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\EmailProvider('Sylius\\Component\\User\\Model\\UserOAuth', $this->get('sylius.repository.oauth_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.oauth_user_provider.email_or_name_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider A Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider instance
     */
    public function getSylius_OauthUserProvider_EmailOrNameBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.oauth_user_provider.email_or_name_based'] = new SyliusBundleUserBundleProviderUsernameOrEmailProvider_000000004255233a000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_OauthUserProvider_EmailOrNameBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider('Sylius\\Component\\User\\Model\\UserOAuth', $this->get('sylius.repository.oauth_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.oauth_user_provider.name_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\UsernameProvider A Sylius\Bundle\UserBundle\Provider\UsernameProvider instance
     */
    public function getSylius_OauthUserProvider_NameBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.oauth_user_provider.name_based'] = new SyliusBundleUserBundleProviderUsernameProvider_000000004255233b000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_OauthUserProvider_NameBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\UsernameProvider('Sylius\\Component\\User\\Model\\UserOAuth', $this->get('sylius.repository.oauth_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.order_item_quantity_modifier.limiting' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Cart\Modifier\LimitingOrderItemQuantityModifier A Sylius\Component\Core\Cart\Modifier\LimitingOrderItemQuantityModifier instance
     */
    protected function getSylius_OrderItemQuantityModifier_LimitingService()
    {
        return $this->services['sylius.order_item_quantity_modifier.limiting'] = new \Sylius\Component\Core\Cart\Modifier\LimitingOrderItemQuantityModifier(new \Sylius\Component\Order\Modifier\OrderItemQuantityModifier($this->get('sylius.factory.order_item_unit')), 9999);
    }

    /**
     * Gets the 'sylius.order_locale_assigner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\EventListener\OrderLocaleAssigner A Sylius\Bundle\ShopBundle\EventListener\OrderLocaleAssigner instance
     */
    protected function getSylius_OrderLocaleAssignerService()
    {
        return $this->services['sylius.order_locale_assigner'] = new \Sylius\Bundle\ShopBundle\EventListener\OrderLocaleAssigner($this->get('sylius.context.locale'));
    }

    /**
     * Gets the 'sylius.order_modifier' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Order\Modifier\OrderModifier A Sylius\Component\Order\Modifier\OrderModifier instance
     */
    protected function getSylius_OrderModifierService()
    {
        return $this->services['sylius.order_modifier'] = new \Sylius\Component\Order\Modifier\OrderModifier($this->get('sylius.order_processing.order_processor'), $this->get('sylius.order_item_quantity_modifier.limiting'));
    }

    /**
     * Gets the 'sylius.order_number_assigner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\NumberAssigner\OrderNumberAssigner A Sylius\Bundle\OrderBundle\NumberAssigner\OrderNumberAssigner instance
     */
    protected function getSylius_OrderNumberAssignerService()
    {
        return $this->services['sylius.order_number_assigner'] = new \Sylius\Bundle\OrderBundle\NumberAssigner\OrderNumberAssigner($this->get('sylius.sequential_order_number_generator'));
    }

    /**
     * Gets the 'sylius.order_payment_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Payment\Provider\OrderPaymentProvider A Sylius\Component\Core\Payment\Provider\OrderPaymentProvider instance
     */
    protected function getSylius_OrderPaymentProviderService()
    {
        return $this->services['sylius.order_payment_provider'] = new \Sylius\Component\Core\Payment\Provider\OrderPaymentProvider($this->get('sylius.payment_method_resolver.default'), $this->get('sylius.factory.payment'), $this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.order_processing.order_adjustments_clearer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderAdjustmentsClearer A Sylius\Component\Core\OrderProcessing\OrderAdjustmentsClearer instance
     */
    protected function getSylius_OrderProcessing_OrderAdjustmentsClearerService()
    {
        return $this->services['sylius.order_processing.order_adjustments_clearer'] = new \Sylius\Component\Core\OrderProcessing\OrderAdjustmentsClearer();
    }

    /**
     * Gets the 'sylius.order_processing.order_payment_processor.after_checkout' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor A Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor instance
     */
    protected function getSylius_OrderProcessing_OrderPaymentProcessor_AfterCheckoutService()
    {
        return $this->services['sylius.order_processing.order_payment_processor.after_checkout'] = new \Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor($this->get('sylius.order_payment_provider'), 'new');
    }

    /**
     * Gets the 'sylius.order_processing.order_payment_processor.checkout' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor A Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor instance
     */
    protected function getSylius_OrderProcessing_OrderPaymentProcessor_CheckoutService()
    {
        return $this->services['sylius.order_processing.order_payment_processor.checkout'] = new \Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor($this->get('sylius.order_payment_provider'), 'cart');
    }

    /**
     * Gets the 'sylius.order_processing.order_prices_recalculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderPricesRecalculator A Sylius\Component\Core\OrderProcessing\OrderPricesRecalculator instance
     */
    protected function getSylius_OrderProcessing_OrderPricesRecalculatorService()
    {
        return $this->services['sylius.order_processing.order_prices_recalculator'] = new \Sylius\Component\Core\OrderProcessing\OrderPricesRecalculator($this->get('sylius.calculator.product_variant_price'));
    }

    /**
     * Gets the 'sylius.order_processing.order_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Order\Processor\CompositeOrderProcessor A Sylius\Component\Order\Processor\CompositeOrderProcessor instance
     */
    protected function getSylius_OrderProcessing_OrderProcessorService()
    {
        $this->services['sylius.order_processing.order_processor'] = $instance = new \Sylius\Component\Order\Processor\CompositeOrderProcessor();

        $instance->addProcessor($this->get('sylius.order_processing.order_adjustments_clearer'), 60);
        $instance->addProcessor($this->get('sylius.order_processing.order_shipment_processor'), 50);
        $instance->addProcessor($this->get('sylius.order_processing.order_prices_recalculator'), 40);
        $instance->addProcessor($this->get('sylius.order_processing.shipping_charges_processor'), 30);
        $instance->addProcessor($this->get('sylius.order_processing.order_promotion_processor'), 20);
        $instance->addProcessor($this->get('sylius.order_processing.order_taxes_processor'), 10);
        $instance->addProcessor($this->get('sylius.order_processing.order_payment_processor.checkout'), 0);

        return $instance;
    }

    /**
     * Gets the 'sylius.order_processing.order_promotion_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderPromotionProcessor A Sylius\Component\Core\OrderProcessing\OrderPromotionProcessor instance
     */
    protected function getSylius_OrderProcessing_OrderPromotionProcessorService()
    {
        return $this->services['sylius.order_processing.order_promotion_processor'] = new \Sylius\Component\Core\OrderProcessing\OrderPromotionProcessor($this->get('sylius.promotion_processor'));
    }

    /**
     * Gets the 'sylius.order_processing.order_shipment_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderShipmentProcessor A Sylius\Component\Core\OrderProcessing\OrderShipmentProcessor instance
     */
    protected function getSylius_OrderProcessing_OrderShipmentProcessorService()
    {
        return $this->services['sylius.order_processing.order_shipment_processor'] = new \Sylius\Component\Core\OrderProcessing\OrderShipmentProcessor($this->get('sylius.shipping_method_resolver.default'), $this->get('sylius.factory.shipment'));
    }

    /**
     * Gets the 'sylius.order_processing.order_taxes_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\OrderTaxesProcessor A Sylius\Component\Core\OrderProcessing\OrderTaxesProcessor instance
     */
    protected function getSylius_OrderProcessing_OrderTaxesProcessorService()
    {
        return $this->services['sylius.order_processing.order_taxes_processor'] = new \Sylius\Component\Core\OrderProcessing\OrderTaxesProcessor($this->get('sylius.provider.channel_based_default_zone_provider'), $this->get('sylius.zone_matcher'), $this->get('sylius.registry.tax_calculation_strategy'));
    }

    /**
     * Gets the 'sylius.order_processing.shipping_charges_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\OrderProcessing\ShippingChargesProcessor A Sylius\Component\Core\OrderProcessing\ShippingChargesProcessor instance
     */
    protected function getSylius_OrderProcessing_ShippingChargesProcessorService()
    {
        return $this->services['sylius.order_processing.shipping_charges_processor'] = new \Sylius\Component\Core\OrderProcessing\ShippingChargesProcessor($this->get('sylius.factory.adjustment'), $this->get('sylius.shipping_calculator'));
    }

    /**
     * Gets the 'sylius.payment_method_resolver.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Resolver\DefaultPaymentMethodResolver A Sylius\Component\Core\Resolver\DefaultPaymentMethodResolver instance
     */
    protected function getSylius_PaymentMethodResolver_DefaultService()
    {
        return $this->services['sylius.payment_method_resolver.default'] = new \Sylius\Component\Core\Resolver\DefaultPaymentMethodResolver($this->get('sylius.repository.payment_method'));
    }

    /**
     * Gets the 'sylius.payment_methods_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Payment\Resolver\CompositeMethodsResolver A Sylius\Component\Payment\Resolver\CompositeMethodsResolver instance
     */
    protected function getSylius_PaymentMethodsResolverService()
    {
        return $this->services['sylius.payment_methods_resolver'] = new \Sylius\Component\Payment\Resolver\CompositeMethodsResolver($this->get('sylius.registry.payment_methods_resolver'));
    }

    /**
     * Gets the 'sylius.payment_methods_resolver.channel_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Resolver\ChannelBasedPaymentMethodsResolver A Sylius\Component\Core\Resolver\ChannelBasedPaymentMethodsResolver instance
     */
    protected function getSylius_PaymentMethodsResolver_ChannelBasedService()
    {
        return $this->services['sylius.payment_methods_resolver.channel_based'] = new \Sylius\Component\Core\Resolver\ChannelBasedPaymentMethodsResolver($this->get('sylius.repository.payment_method'));
    }

    /**
     * Gets the 'sylius.payum.http_client' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Payum\Core\HttpClientInterface A Payum\Core\HttpClientInterface instance
     */
    protected function getSylius_Payum_HttpClientService()
    {
        return $this->services['sylius.payum.http_client'] = \Payum\Core\Bridge\Guzzle\HttpClientFactory::create();
    }

    /**
     * Gets the 'sylius.payum_action.capture_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\CapturePaymentAction A Sylius\Bundle\PayumBundle\Action\CapturePaymentAction instance
     */
    protected function getSylius_PayumAction_CapturePaymentService()
    {
        return $this->services['sylius.payum_action.capture_payment'] = new \Sylius\Bundle\PayumBundle\Action\CapturePaymentAction();
    }

    /**
     * Gets the 'sylius.payum_action.execute_same_request_with_payment_details' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\ExecuteSameRequestWithPaymentDetailsAction A Sylius\Bundle\PayumBundle\Action\ExecuteSameRequestWithPaymentDetailsAction instance
     */
    protected function getSylius_PayumAction_ExecuteSameRequestWithPaymentDetailsService()
    {
        return $this->services['sylius.payum_action.execute_same_request_with_payment_details'] = new \Sylius\Bundle\PayumBundle\Action\ExecuteSameRequestWithPaymentDetailsAction();
    }

    /**
     * Gets the 'sylius.payum_action.offline.convert_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\Offline\ConvertPaymentAction A Sylius\Bundle\PayumBundle\Action\Offline\ConvertPaymentAction instance
     */
    protected function getSylius_PayumAction_Offline_ConvertPaymentService()
    {
        return $this->services['sylius.payum_action.offline.convert_payment'] = new \Sylius\Bundle\PayumBundle\Action\Offline\ConvertPaymentAction();
    }

    /**
     * Gets the 'sylius.payum_action.offline.resolve_next_route' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\Offline\ResolveNextRouteAction A Sylius\Bundle\PayumBundle\Action\Offline\ResolveNextRouteAction instance
     */
    protected function getSylius_PayumAction_Offline_ResolveNextRouteService()
    {
        return $this->services['sylius.payum_action.offline.resolve_next_route'] = new \Sylius\Bundle\PayumBundle\Action\Offline\ResolveNextRouteAction();
    }

    /**
     * Gets the 'sylius.payum_action.paypal_express_checkout.convert_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\Paypal\ExpressCheckout\ConvertPaymentAction A Sylius\Bundle\PayumBundle\Action\Paypal\ExpressCheckout\ConvertPaymentAction instance
     */
    protected function getSylius_PayumAction_PaypalExpressCheckout_ConvertPaymentService()
    {
        return $this->services['sylius.payum_action.paypal_express_checkout.convert_payment'] = new \Sylius\Bundle\PayumBundle\Action\Paypal\ExpressCheckout\ConvertPaymentAction($this->get('sylius.invoice_number_generator'));
    }

    /**
     * Gets the 'sylius.payum_action.resolve_next_route' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\ResolveNextRouteAction A Sylius\Bundle\PayumBundle\Action\ResolveNextRouteAction instance
     */
    protected function getSylius_PayumAction_ResolveNextRouteService()
    {
        return $this->services['sylius.payum_action.resolve_next_route'] = new \Sylius\Bundle\PayumBundle\Action\ResolveNextRouteAction();
    }

    /**
     * Gets the 'sylius.payum_extension.update_payment_state' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Extension\UpdatePaymentStateExtension A Sylius\Bundle\PayumBundle\Extension\UpdatePaymentStateExtension instance
     */
    protected function getSylius_PayumExtension_UpdatePaymentStateService()
    {
        return $this->services['sylius.payum_extension.update_payment_state'] = new \Sylius\Bundle\PayumBundle\Extension\UpdatePaymentStateExtension($this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.product_review.average_rating_updater' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ReviewBundle\Updater\AverageRatingUpdater A Sylius\Bundle\ReviewBundle\Updater\AverageRatingUpdater instance
     */
    protected function getSylius_ProductReview_AverageRatingUpdaterService()
    {
        return $this->services['sylius.product_review.average_rating_updater'] = new \Sylius\Bundle\ReviewBundle\Updater\AverageRatingUpdater($this->get('sylius.average_rating_calculator'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.product_variant_resolver.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Product\Resolver\DefaultProductVariantResolver A Sylius\Component\Product\Resolver\DefaultProductVariantResolver instance
     */
    protected function getSylius_ProductVariantResolver_DefaultService()
    {
        return $this->services['sylius.product_variant_resolver.default'] = new \Sylius\Component\Product\Resolver\DefaultProductVariantResolver();
    }

    /**
     * Gets the 'sylius.promotion.units_promotion_adjustments_applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Applicator\UnitsPromotionAdjustmentsApplicator A Sylius\Component\Core\Promotion\Applicator\UnitsPromotionAdjustmentsApplicator instance
     */
    protected function getSylius_Promotion_UnitsPromotionAdjustmentsApplicatorService()
    {
        return $this->services['sylius.promotion.units_promotion_adjustments_applicator'] = new \Sylius\Component\Core\Promotion\Applicator\UnitsPromotionAdjustmentsApplicator($this->get('sylius.factory.adjustment'), $this->get('sylius.integer_distributor'));
    }

    /**
     * Gets the 'sylius.promotion_action.fixed_discount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Action\FixedDiscountPromotionActionCommand A Sylius\Component\Core\Promotion\Action\FixedDiscountPromotionActionCommand instance
     */
    protected function getSylius_PromotionAction_FixedDiscountService()
    {
        return $this->services['sylius.promotion_action.fixed_discount'] = new \Sylius\Component\Core\Promotion\Action\FixedDiscountPromotionActionCommand($this->get('sylius.proportional_integer_distributor'), $this->get('sylius.promotion.units_promotion_adjustments_applicator'), $this->get('sylius.currency_converter'));
    }

    /**
     * Gets the 'sylius.promotion_action.percentage_discount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Action\PercentageDiscountPromotionActionCommand A Sylius\Component\Core\Promotion\Action\PercentageDiscountPromotionActionCommand instance
     */
    protected function getSylius_PromotionAction_PercentageDiscountService()
    {
        return $this->services['sylius.promotion_action.percentage_discount'] = new \Sylius\Component\Core\Promotion\Action\PercentageDiscountPromotionActionCommand($this->get('sylius.proportional_integer_distributor'), $this->get('sylius.promotion.units_promotion_adjustments_applicator'));
    }

    /**
     * Gets the 'sylius.promotion_action.shipping_percentage_discount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Action\ShippingPercentageDiscountPromotionActionCommand A Sylius\Component\Core\Promotion\Action\ShippingPercentageDiscountPromotionActionCommand instance
     */
    protected function getSylius_PromotionAction_ShippingPercentageDiscountService()
    {
        return $this->services['sylius.promotion_action.shipping_percentage_discount'] = new \Sylius\Component\Core\Promotion\Action\ShippingPercentageDiscountPromotionActionCommand($this->get('sylius.factory.adjustment'));
    }

    /**
     * Gets the 'sylius.promotion_action.unit_fixed_discount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Action\UnitFixedDiscountPromotionActionCommand A Sylius\Component\Core\Promotion\Action\UnitFixedDiscountPromotionActionCommand instance
     */
    protected function getSylius_PromotionAction_UnitFixedDiscountService()
    {
        return $this->services['sylius.promotion_action.unit_fixed_discount'] = new \Sylius\Component\Core\Promotion\Action\UnitFixedDiscountPromotionActionCommand($this->get('sylius.factory.adjustment'), $this->get('sylius.promotion_filter.price_range'), $this->get('sylius.promotion_filter.taxon'), $this->get('sylius.promotion_filter.product'), $this->get('sylius.currency_converter'));
    }

    /**
     * Gets the 'sylius.promotion_action.unit_percentage_discount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Action\UnitPercentageDiscountPromotionActionCommand A Sylius\Component\Core\Promotion\Action\UnitPercentageDiscountPromotionActionCommand instance
     */
    protected function getSylius_PromotionAction_UnitPercentageDiscountService()
    {
        return $this->services['sylius.promotion_action.unit_percentage_discount'] = new \Sylius\Component\Core\Promotion\Action\UnitPercentageDiscountPromotionActionCommand($this->get('sylius.factory.adjustment'), $this->get('sylius.promotion_filter.price_range'), $this->get('sylius.promotion_filter.taxon'), $this->get('sylius.promotion_filter.product'));
    }

    /**
     * Gets the 'sylius.promotion_applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Action\PromotionApplicator A Sylius\Component\Promotion\Action\PromotionApplicator instance
     */
    protected function getSylius_PromotionApplicatorService()
    {
        return $this->services['sylius.promotion_applicator'] = new \Sylius\Component\Promotion\Action\PromotionApplicator($this->get('sylius.registry_promotion_action'));
    }

    /**
     * Gets the 'sylius.promotion_coupon_eligibility_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Checker\Eligibility\CompositePromotionCouponEligibilityChecker A Sylius\Component\Promotion\Checker\Eligibility\CompositePromotionCouponEligibilityChecker instance
     */
    protected function getSylius_PromotionCouponEligibilityCheckerService()
    {
        return $this->services['sylius.promotion_coupon_eligibility_checker'] = new \Sylius\Component\Promotion\Checker\Eligibility\CompositePromotionCouponEligibilityChecker(array(0 => new \Sylius\Component\Promotion\Checker\Eligibility\PromotionCouponDurationEligibilityChecker(), 1 => new \Sylius\Component\Promotion\Checker\Eligibility\PromotionCouponUsageLimitEligibilityChecker(), 2 => new \Sylius\Component\Core\Promotion\Checker\Eligibility\PromotionCouponPerCustomerUsageLimitEligibilityChecker($this->get('sylius.repository.order'))));
    }

    /**
     * Gets the 'sylius.promotion_coupon_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Generator\PromotionCouponGenerator A Sylius\Component\Promotion\Generator\PromotionCouponGenerator instance
     */
    protected function getSylius_PromotionCouponGeneratorService()
    {
        return $this->services['sylius.promotion_coupon_generator'] = new \Sylius\Component\Promotion\Generator\PromotionCouponGenerator($this->get('sylius.factory.promotion_coupon'), $this->get('sylius.repository.promotion_coupon'), $this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.promotion_coupon_generator.percentage_policy'));
    }

    /**
     * Gets the 'sylius.promotion_coupon_generator.percentage_policy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Generator\PercentageGenerationPolicy A Sylius\Component\Promotion\Generator\PercentageGenerationPolicy instance
     */
    protected function getSylius_PromotionCouponGenerator_PercentagePolicyService()
    {
        return $this->services['sylius.promotion_coupon_generator.percentage_policy'] = new \Sylius\Component\Promotion\Generator\PercentageGenerationPolicy($this->get('sylius.repository.promotion_coupon'));
    }

    /**
     * Gets the 'sylius.promotion_eligibility_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Checker\Eligibility\CompositePromotionEligibilityChecker A Sylius\Component\Promotion\Checker\Eligibility\CompositePromotionEligibilityChecker instance
     */
    protected function getSylius_PromotionEligibilityCheckerService()
    {
        return $this->services['sylius.promotion_eligibility_checker'] = new \Sylius\Component\Promotion\Checker\Eligibility\CompositePromotionEligibilityChecker(array(0 => new \Sylius\Component\Promotion\Checker\Eligibility\PromotionDurationEligibilityChecker(), 1 => new \Sylius\Component\Promotion\Checker\Eligibility\PromotionUsageLimitEligibilityChecker(), 2 => new \Sylius\Component\Promotion\Checker\Eligibility\PromotionSubjectCouponEligibilityChecker($this->get('sylius.promotion_coupon_eligibility_checker')), 3 => new \Sylius\Component\Promotion\Checker\Eligibility\PromotionRulesEligibilityChecker($this->get('sylius.registry_promotion_rule_checker'))));
    }

    /**
     * Gets the 'sylius.promotion_filter.price_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Filter\PriceRangeFilter A Sylius\Component\Core\Promotion\Filter\PriceRangeFilter instance
     */
    protected function getSylius_PromotionFilter_PriceRangeService()
    {
        return $this->services['sylius.promotion_filter.price_range'] = new \Sylius\Component\Core\Promotion\Filter\PriceRangeFilter($this->get('sylius.calculator.product_variant_price'));
    }

    /**
     * Gets the 'sylius.promotion_filter.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Filter\ProductFilter A Sylius\Component\Core\Promotion\Filter\ProductFilter instance
     */
    protected function getSylius_PromotionFilter_ProductService()
    {
        return $this->services['sylius.promotion_filter.product'] = new \Sylius\Component\Core\Promotion\Filter\ProductFilter();
    }

    /**
     * Gets the 'sylius.promotion_filter.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Filter\TaxonFilter A Sylius\Component\Core\Promotion\Filter\TaxonFilter instance
     */
    protected function getSylius_PromotionFilter_TaxonService()
    {
        return $this->services['sylius.promotion_filter.taxon'] = new \Sylius\Component\Core\Promotion\Filter\TaxonFilter();
    }

    /**
     * Gets the 'sylius.promotion_processor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Processor\PromotionProcessor A Sylius\Component\Promotion\Processor\PromotionProcessor instance
     */
    protected function getSylius_PromotionProcessorService()
    {
        return $this->services['sylius.promotion_processor'] = new \Sylius\Component\Promotion\Processor\PromotionProcessor($this->get('sylius.active_promotions_provider'), $this->get('sylius.promotion_eligibility_checker'), $this->get('sylius.promotion_applicator'));
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.cart_quantity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Promotion\Checker\Rule\CartQuantityRuleChecker A Sylius\Component\Promotion\Checker\Rule\CartQuantityRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_CartQuantityService()
    {
        return $this->services['sylius.promotion_rule_checker.cart_quantity'] = new \Sylius\Component\Promotion\Checker\Rule\CartQuantityRuleChecker();
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.contains_product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Checker\Rule\ContainsProductRuleChecker A Sylius\Component\Core\Promotion\Checker\Rule\ContainsProductRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_ContainsProductService()
    {
        return $this->services['sylius.promotion_rule_checker.contains_product'] = new \Sylius\Component\Core\Promotion\Checker\Rule\ContainsProductRuleChecker();
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.has_taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Checker\Rule\HasTaxonRuleChecker A Sylius\Component\Core\Promotion\Checker\Rule\HasTaxonRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_HasTaxonService()
    {
        return $this->services['sylius.promotion_rule_checker.has_taxon'] = new \Sylius\Component\Core\Promotion\Checker\Rule\HasTaxonRuleChecker();
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.item_total' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Checker\Rule\ItemTotalRuleChecker A Sylius\Component\Core\Promotion\Checker\Rule\ItemTotalRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_ItemTotalService()
    {
        return $this->services['sylius.promotion_rule_checker.item_total'] = new \Sylius\Component\Core\Promotion\Checker\Rule\ItemTotalRuleChecker(new \Sylius\Component\Promotion\Checker\Rule\ItemTotalRuleChecker());
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.nth_order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Checker\Rule\NthOrderRuleChecker A Sylius\Component\Core\Promotion\Checker\Rule\NthOrderRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_NthOrderService()
    {
        return $this->services['sylius.promotion_rule_checker.nth_order'] = new \Sylius\Component\Core\Promotion\Checker\Rule\NthOrderRuleChecker($this->get('sylius.repository.order'));
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.shipping_country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Checker\Rule\ShippingCountryRuleChecker A Sylius\Component\Core\Promotion\Checker\Rule\ShippingCountryRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_ShippingCountryService()
    {
        return $this->services['sylius.promotion_rule_checker.shipping_country'] = new \Sylius\Component\Core\Promotion\Checker\Rule\ShippingCountryRuleChecker($this->get('sylius.repository.country'));
    }

    /**
     * Gets the 'sylius.promotion_rule_checker.total_of_items_from_taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Checker\Rule\TotalOfItemsFromTaxonRuleChecker A Sylius\Component\Core\Promotion\Checker\Rule\TotalOfItemsFromTaxonRuleChecker instance
     */
    protected function getSylius_PromotionRuleChecker_TotalOfItemsFromTaxonService()
    {
        return $this->services['sylius.promotion_rule_checker.total_of_items_from_taxon'] = new \Sylius\Component\Core\Promotion\Checker\Rule\TotalOfItemsFromTaxonRuleChecker($this->get('sylius.repository.taxon'));
    }

    /**
     * Gets the 'sylius.promotion_usage_modifier' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Promotion\Modifier\OrderPromotionsUsageModifier A Sylius\Component\Core\Promotion\Modifier\OrderPromotionsUsageModifier instance
     */
    protected function getSylius_PromotionUsageModifierService()
    {
        return $this->services['sylius.promotion_usage_modifier'] = new \Sylius\Component\Core\Promotion\Modifier\OrderPromotionsUsageModifier($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.proportional_integer_distributor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Distributor\ProportionalIntegerDistributor A Sylius\Component\Core\Distributor\ProportionalIntegerDistributor instance
     */
    protected function getSylius_ProportionalIntegerDistributorService()
    {
        return $this->services['sylius.proportional_integer_distributor'] = new \Sylius\Component\Core\Distributor\ProportionalIntegerDistributor();
    }

    /**
     * Gets the 'sylius.provider.channel_based_default_zone_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Provider\ChannelBasedDefaultTaxZoneProvider A Sylius\Bundle\CoreBundle\Provider\ChannelBasedDefaultTaxZoneProvider instance
     */
    protected function getSylius_Provider_ChannelBasedDefaultZoneProviderService()
    {
        return $this->services['sylius.provider.channel_based_default_zone_provider'] = new \Sylius\Bundle\CoreBundle\Provider\ChannelBasedDefaultTaxZoneProvider();
    }

    /**
     * Gets the 'sylius.provider.product_variants_prices' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Provider\ProductVariantsPricesProvider A Sylius\Component\Core\Provider\ProductVariantsPricesProvider instance
     */
    protected function getSylius_Provider_ProductVariantsPricesService()
    {
        return $this->services['sylius.provider.product_variants_prices'] = new \Sylius\Component\Core\Provider\ProductVariantsPricesProvider($this->get('sylius.calculator.product_variant_price'));
    }

    /**
     * Gets the 'sylius.province_naming_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Component\Addressing\Provider\ProvinceNamingProvider A Sylius\Component\Addressing\Provider\ProvinceNamingProvider instance
     */
    public function getSylius_ProvinceNamingProviderService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.province_naming_provider'] = new SyliusComponentAddressingProviderProvinceNamingProvider_0000000042552e73000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_ProvinceNamingProviderService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Component\Addressing\Provider\ProvinceNamingProvider($this->get('sylius.repository.province'));
    }

    /**
     * Gets the 'sylius.random_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Generator\RandomnessGenerator A Sylius\Component\Resource\Generator\RandomnessGenerator instance
     */
    protected function getSylius_RandomGeneratorService()
    {
        return $this->services['sylius.random_generator'] = new \Sylius\Component\Resource\Generator\RandomnessGenerator();
    }

    /**
     * Gets the 'sylius.registry.attribute_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_AttributeTypeService()
    {
        $this->services['sylius.registry.attribute_type'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Attribute\\AttributeType\\AttributeTypeInterface', 'attribute type');

        $instance->register('text', $this->get('sylius.attribute_type.text'));
        $instance->register('textarea', $this->get('sylius.attribute_type.textarea'));
        $instance->register('checkbox', $this->get('sylius.attribute_type.checkbox'));
        $instance->register('integer', $this->get('sylius.attribute_type.integer'));
        $instance->register('percent', $this->get('sylius.attribute_type.percent'));
        $instance->register('datetime', $this->get('sylius.attribute_type.datetime'));
        $instance->register('date', $this->get('sylius.attribute_type.date'));
        $instance->register('select', $this->get('sylius.attribute_type.select'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.grid_driver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_GridDriverService()
    {
        $this->services['sylius.registry.grid_driver'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Grid\\Data\\DriverInterface', 'grid driver');

        $instance->register('doctrine/orm', $this->get('sylius.grid_driver.doctrine.orm'));
        $instance->register('doctrine/dbal', $this->get('sylius.grid_driver.doctrine.dbal'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.grid_field' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_GridFieldService()
    {
        $this->services['sylius.registry.grid_field'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Grid\\FieldTypes\\FieldTypeInterface', 'grid field');

        $instance->register('datetime', $this->get('sylius.grid_field.datetime'));
        $instance->register('string', $this->get('sylius.grid_field.string'));
        $instance->register('twig', $this->get('sylius.grid_field.twig'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.grid_filter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_GridFilterService()
    {
        $this->services['sylius.registry.grid_filter'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Grid\\Filtering\\FilterInterface', 'grid filter');

        $instance->register('string', $this->get('sylius.grid_filter.string'));
        $instance->register('boolean', $this->get('sylius.grid_filter.boolean'));
        $instance->register('date', $this->get('sylius.grid_filter.date'));
        $instance->register('entity', $this->get('sylius.grid_filter.entity'));
        $instance->register('money', $this->get('sylius.grid_filter.money'));
        $instance->register('exists', $this->get('sylius.grid_filter.exists'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.payment_methods_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\PrioritizedServiceRegistry A Sylius\Component\Registry\PrioritizedServiceRegistry instance
     */
    protected function getSylius_Registry_PaymentMethodsResolverService()
    {
        $this->services['sylius.registry.payment_methods_resolver'] = $instance = new \Sylius\Component\Registry\PrioritizedServiceRegistry('Sylius\\Component\\Payment\\Resolver\\PaymentMethodsResolverInterface', 'Payment methods resolver');

        $instance->register(new \Sylius\Component\Payment\Resolver\PaymentMethodsResolver($this->get('sylius.repository.payment_method')), 0);
        $instance->register($this->get('sylius.payment_methods_resolver.channel_based'), 1);

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.shipping_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_ShippingCalculatorService()
    {
        $this->services['sylius.registry.shipping_calculator'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Shipping\\Calculator\\CalculatorInterface', 'shipping calculator');

        $instance->register('flat_rate', $this->get('sylius.shipping_calculator.flat_rate'));
        $instance->register('per_unit_rate', $this->get('sylius.shipping_calculator.per_unit_rate'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.shipping_methods_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\PrioritizedServiceRegistry A Sylius\Component\Registry\PrioritizedServiceRegistry instance
     */
    protected function getSylius_Registry_ShippingMethodsResolverService()
    {
        $this->services['sylius.registry.shipping_methods_resolver'] = $instance = new \Sylius\Component\Registry\PrioritizedServiceRegistry('Sylius\\Component\\Shipping\\Resolver\\ShippingMethodsResolverInterface', 'Shipping methods resolver');

        $instance->register($this->get('sylius.shipping_methods_resolver.default'), 0);
        $instance->register($this->get('sylius.shipping_methods_resolver.zones_and_channel_based'), 1);

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.shipping_rule_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_ShippingRuleCheckerService()
    {
        return $this->services['sylius.registry.shipping_rule_checker'] = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Shipping\\Checker\\RuleCheckerInterface', 'shipping rule checker');
    }

    /**
     * Gets the 'sylius.registry.tax_calculation_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\PrioritizedServiceRegistry A Sylius\Component\Registry\PrioritizedServiceRegistry instance
     */
    protected function getSylius_Registry_TaxCalculationStrategyService()
    {
        $this->services['sylius.registry.tax_calculation_strategy'] = $instance = new \Sylius\Component\Registry\PrioritizedServiceRegistry('Sylius\\Component\\Core\\Taxation\\Strategy\\TaxCalculationStrategyInterface', 'Tax calculation strategy');

        $instance->register($this->get('sylius.taxation.order_items_based_strategy'), 0);
        $instance->register($this->get('sylius.taxation.order_item_units_based_strategy'), 0);

        return $instance;
    }

    /**
     * Gets the 'sylius.registry.tax_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_Registry_TaxCalculatorService()
    {
        $this->services['sylius.registry.tax_calculator'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Taxation\\Calculator\\CalculatorInterface', 'Tax calculator');

        $instance->register('default', $this->get('sylius.tax_calculator.default'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry_promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_RegistryPromotionActionService()
    {
        $this->services['sylius.registry_promotion_action'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Promotion\\Action\\PromotionActionCommandInterface', 'promotion action');

        $instance->register('order_fixed_discount', $this->get('sylius.promotion_action.fixed_discount'));
        $instance->register('unit_fixed_discount', $this->get('sylius.promotion_action.unit_fixed_discount'));
        $instance->register('order_percentage_discount', $this->get('sylius.promotion_action.percentage_discount'));
        $instance->register('unit_percentage_discount', $this->get('sylius.promotion_action.unit_percentage_discount'));
        $instance->register('shipping_percentage_discount', $this->get('sylius.promotion_action.shipping_percentage_discount'));

        return $instance;
    }

    /**
     * Gets the 'sylius.registry_promotion_rule_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Registry\ServiceRegistry A Sylius\Component\Registry\ServiceRegistry instance
     */
    protected function getSylius_RegistryPromotionRuleCheckerService()
    {
        $this->services['sylius.registry_promotion_rule_checker'] = $instance = new \Sylius\Component\Registry\ServiceRegistry('Sylius\\Component\\Promotion\\Checker\\Rule\\RuleCheckerInterface', 'rule checker');

        $instance->register('item_total', $this->get('sylius.promotion_rule_checker.item_total'));
        $instance->register('cart_quantity', $this->get('sylius.promotion_rule_checker.cart_quantity'));
        $instance->register('customer_group', new \Sylius\Component\Core\Promotion\Checker\Rule\CustomerGroupRuleChecker());
        $instance->register('nth_order', $this->get('sylius.promotion_rule_checker.nth_order'));
        $instance->register('shipping_country', $this->get('sylius.promotion_rule_checker.shipping_country'));
        $instance->register('has_taxon', $this->get('sylius.promotion_rule_checker.has_taxon'));
        $instance->register('total_of_items_from_taxon', $this->get('sylius.promotion_rule_checker.total_of_items_from_taxon'));
        $instance->register('contains_product', $this->get('sylius.promotion_rule_checker.contains_product'));

        return $instance;
    }

    /**
     * Gets the 'sylius.repository.address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\AddressRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\AddressRepository instance
     */
    protected function getSylius_Repository_AddressService()
    {
        return $this->services['sylius.repository.address'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\AddressRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Address'));
    }

    /**
     * Gets the 'sylius.repository.address_log_entry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\ResourceLogEntryRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\ResourceLogEntryRepository instance
     */
    protected function getSylius_Repository_AddressLogEntryService()
    {
        return $this->services['sylius.repository.address_log_entry'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\ResourceLogEntryRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Addressing\\Model\\AddressLogEntry'));
    }

    /**
     * Gets the 'sylius.repository.adjustment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_AdjustmentService()
    {
        return $this->services['sylius.repository.adjustment'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Order\\Model\\Adjustment'));
    }

    /**
     * Gets the 'sylius.repository.admin_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Doctrine\ORM\UserRepository A Sylius\Bundle\UserBundle\Doctrine\ORM\UserRepository instance
     */
    protected function getSylius_Repository_AdminUserService()
    {
        return $this->services['sylius.repository.admin_user'] = new \Sylius\Bundle\UserBundle\Doctrine\ORM\UserRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\AdminUser'));
    }

    /**
     * Gets the 'sylius.repository.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\ChannelBundle\Doctrine\ORM\ChannelRepository A Sylius\Bundle\ChannelBundle\Doctrine\ORM\ChannelRepository instance
     */
    public function getSylius_Repository_ChannelService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.repository.channel'] = new SyliusBundleChannelBundleDoctrineORMChannelRepository_0000000042552998000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Repository_ChannelService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\ChannelBundle\Doctrine\ORM\ChannelRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Channel'));
    }

    /**
     * Gets the 'sylius.repository.channel_pricing' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ChannelPricingService()
    {
        return $this->services['sylius.repository.channel_pricing'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ChannelPricing'));
    }

    /**
     * Gets the 'sylius.repository.country' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_CountryService()
    {
        return $this->services['sylius.repository.country'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Addressing\\Model\\Country'));
    }

    /**
     * Gets the 'sylius.repository.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_CurrencyService()
    {
        return $this->services['sylius.repository.currency'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Currency\\Model\\Currency'));
    }

    /**
     * Gets the 'sylius.repository.customer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\CustomerRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\CustomerRepository instance
     */
    protected function getSylius_Repository_CustomerService()
    {
        return $this->services['sylius.repository.customer'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\CustomerRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Customer'));
    }

    /**
     * Gets the 'sylius.repository.customer_group' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_CustomerGroupService()
    {
        return $this->services['sylius.repository.customer_group'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Customer\\Model\\CustomerGroup'));
    }

    /**
     * Gets the 'sylius.repository.exchange_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CurrencyBundle\Doctrine\ORM\ExchangeRateRepository A Sylius\Bundle\CurrencyBundle\Doctrine\ORM\ExchangeRateRepository instance
     */
    protected function getSylius_Repository_ExchangeRateService()
    {
        return $this->services['sylius.repository.exchange_rate'] = new \Sylius\Bundle\CurrencyBundle\Doctrine\ORM\ExchangeRateRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Currency\\Model\\ExchangeRate'));
    }

    /**
     * Gets the 'sylius.repository.gateway_config' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_GatewayConfigService()
    {
        return $this->services['sylius.repository.gateway_config'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig'));
    }

    /**
     * Gets the 'sylius.repository.inventory_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_InventoryUnitService()
    {
        return $this->services['sylius.repository.inventory_unit'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\OrderItemUnit'));
    }

    /**
     * Gets the 'sylius.repository.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    public function getSylius_Repository_LocaleService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.repository.locale'] = new SyliusBundleResourceBundleDoctrineORMEntityRepository_000000004255266e000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Repository_LocaleService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Locale\\Model\\Locale'));
    }

    /**
     * Gets the 'sylius.repository.oauth_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_OauthUserService()
    {
        return $this->services['sylius.repository.oauth_user'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\User\\Model\\UserOAuth'));
    }

    /**
     * Gets the 'sylius.repository.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\OrderRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\OrderRepository instance
     */
    protected function getSylius_Repository_OrderService()
    {
        return $this->services['sylius.repository.order'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\OrderRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Order'));
    }

    /**
     * Gets the 'sylius.repository.order_item' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Doctrine\ORM\OrderItemRepository A Sylius\Bundle\OrderBundle\Doctrine\ORM\OrderItemRepository instance
     */
    protected function getSylius_Repository_OrderItemService()
    {
        return $this->services['sylius.repository.order_item'] = new \Sylius\Bundle\OrderBundle\Doctrine\ORM\OrderItemRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\OrderItem'));
    }

    /**
     * Gets the 'sylius.repository.order_item_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_OrderItemUnitService()
    {
        return $this->services['sylius.repository.order_item_unit'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\OrderItemUnit'));
    }

    /**
     * Gets the 'sylius.repository.order_sequence' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_OrderSequenceService()
    {
        return $this->services['sylius.repository.order_sequence'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\OrderSequence'));
    }

    /**
     * Gets the 'sylius.repository.payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\PaymentRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\PaymentRepository instance
     */
    protected function getSylius_Repository_PaymentService()
    {
        return $this->services['sylius.repository.payment'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\PaymentRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Payment'));
    }

    /**
     * Gets the 'sylius.repository.payment_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\PaymentMethodRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\PaymentMethodRepository instance
     */
    protected function getSylius_Repository_PaymentMethodService()
    {
        return $this->services['sylius.repository.payment_method'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\PaymentMethodRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\PaymentMethod'));
    }

    /**
     * Gets the 'sylius.repository.payment_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_PaymentMethodTranslationService()
    {
        return $this->services['sylius.repository.payment_method_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation'));
    }

    /**
     * Gets the 'sylius.repository.payment_security_token' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_PaymentSecurityTokenService()
    {
        return $this->services['sylius.repository.payment_security_token'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken'));
    }

    /**
     * Gets the 'sylius.repository.product' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductRepository instance
     */
    protected function getSylius_Repository_ProductService()
    {
        return $this->services['sylius.repository.product'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Product'));
    }

    /**
     * Gets the 'sylius.repository.product_association' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductAssociationService()
    {
        return $this->services['sylius.repository.product_association'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductAssociation'));
    }

    /**
     * Gets the 'sylius.repository.product_association_type' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Doctrine\ORM\ProductAssociationTypeRepository A Sylius\Bundle\ProductBundle\Doctrine\ORM\ProductAssociationTypeRepository instance
     */
    protected function getSylius_Repository_ProductAssociationTypeService()
    {
        return $this->services['sylius.repository.product_association_type'] = new \Sylius\Bundle\ProductBundle\Doctrine\ORM\ProductAssociationTypeRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductAssociationType'));
    }

    /**
     * Gets the 'sylius.repository.product_association_type_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductAssociationTypeTranslationService()
    {
        return $this->services['sylius.repository.product_association_type_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation'));
    }

    /**
     * Gets the 'sylius.repository.product_attribute' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductAttributeService()
    {
        return $this->services['sylius.repository.product_attribute'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductAttribute'));
    }

    /**
     * Gets the 'sylius.repository.product_attribute_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductAttributeTranslationService()
    {
        return $this->services['sylius.repository.product_attribute_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductAttributeTranslation'));
    }

    /**
     * Gets the 'sylius.repository.product_attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductAttributeValueService()
    {
        return $this->services['sylius.repository.product_attribute_value'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductAttributeValue'));
    }

    /**
     * Gets the 'sylius.repository.product_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductImageService()
    {
        return $this->services['sylius.repository.product_image'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ProductImage'));
    }

    /**
     * Gets the 'sylius.repository.product_option' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductOptionRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductOptionRepository instance
     */
    protected function getSylius_Repository_ProductOptionService()
    {
        return $this->services['sylius.repository.product_option'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductOptionRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductOption'));
    }

    /**
     * Gets the 'sylius.repository.product_option_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductOptionTranslationService()
    {
        return $this->services['sylius.repository.product_option_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductOptionTranslation'));
    }

    /**
     * Gets the 'sylius.repository.product_option_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductOptionValueService()
    {
        return $this->services['sylius.repository.product_option_value'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductOptionValue'));
    }

    /**
     * Gets the 'sylius.repository.product_option_value_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductOptionValueTranslationService()
    {
        return $this->services['sylius.repository.product_option_value_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation'));
    }

    /**
     * Gets the 'sylius.repository.product_review' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductReviewRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductReviewRepository instance
     */
    protected function getSylius_Repository_ProductReviewService()
    {
        return $this->services['sylius.repository.product_review'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductReviewRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ProductReview'));
    }

    /**
     * Gets the 'sylius.repository.product_reviewer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductReviewerService()
    {
        return $this->services['sylius.repository.product_reviewer'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Customer'));
    }

    /**
     * Gets the 'sylius.repository.product_taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductTaxonRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductTaxonRepository instance
     */
    protected function getSylius_Repository_ProductTaxonService()
    {
        return $this->services['sylius.repository.product_taxon'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductTaxonRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ProductTaxon'));
    }

    /**
     * Gets the 'sylius.repository.product_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductTranslationService()
    {
        return $this->services['sylius.repository.product_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ProductTranslation'));
    }

    /**
     * Gets the 'sylius.repository.product_variant' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductVariantRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductVariantRepository instance
     */
    protected function getSylius_Repository_ProductVariantService()
    {
        return $this->services['sylius.repository.product_variant'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductVariantRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ProductVariant'));
    }

    /**
     * Gets the 'sylius.repository.product_variant_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProductVariantTranslationService()
    {
        return $this->services['sylius.repository.product_variant_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Product\\Model\\ProductVariantTranslation'));
    }

    /**
     * Gets the 'sylius.repository.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\PromotionRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\PromotionRepository instance
     */
    protected function getSylius_Repository_PromotionService()
    {
        return $this->services['sylius.repository.promotion'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\PromotionRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Promotion'));
    }

    /**
     * Gets the 'sylius.repository.promotion_action' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_PromotionActionService()
    {
        return $this->services['sylius.repository.promotion_action'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Promotion\\Model\\PromotionAction'));
    }

    /**
     * Gets the 'sylius.repository.promotion_coupon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Doctrine\ORM\PromotionCouponRepository A Sylius\Bundle\PromotionBundle\Doctrine\ORM\PromotionCouponRepository instance
     */
    protected function getSylius_Repository_PromotionCouponService()
    {
        return $this->services['sylius.repository.promotion_coupon'] = new \Sylius\Bundle\PromotionBundle\Doctrine\ORM\PromotionCouponRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\PromotionCoupon'));
    }

    /**
     * Gets the 'sylius.repository.promotion_rule' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_PromotionRuleService()
    {
        return $this->services['sylius.repository.promotion_rule'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Promotion\\Model\\PromotionRule'));
    }

    /**
     * Gets the 'sylius.repository.promotion_subject' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_PromotionSubjectService()
    {
        return $this->services['sylius.repository.promotion_subject'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Order'));
    }

    /**
     * Gets the 'sylius.repository.province' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ProvinceService()
    {
        return $this->services['sylius.repository.province'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Addressing\\Model\\Province'));
    }

    /**
     * Gets the 'sylius.repository.shipment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ShipmentRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ShipmentRepository instance
     */
    protected function getSylius_Repository_ShipmentService()
    {
        return $this->services['sylius.repository.shipment'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ShipmentRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Shipment'));
    }

    /**
     * Gets the 'sylius.repository.shipment_unit' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ShipmentUnitService()
    {
        return $this->services['sylius.repository.shipment_unit'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\OrderItemUnit'));
    }

    /**
     * Gets the 'sylius.repository.shipping_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ShippingCategoryRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ShippingCategoryRepository instance
     */
    protected function getSylius_Repository_ShippingCategoryService()
    {
        return $this->services['sylius.repository.shipping_category'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ShippingCategoryRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Shipping\\Model\\ShippingCategory'));
    }

    /**
     * Gets the 'sylius.repository.shipping_method' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\ShippingMethodRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\ShippingMethodRepository instance
     */
    protected function getSylius_Repository_ShippingMethodService()
    {
        return $this->services['sylius.repository.shipping_method'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\ShippingMethodRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ShippingMethod'));
    }

    /**
     * Gets the 'sylius.repository.shipping_method_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ShippingMethodTranslationService()
    {
        return $this->services['sylius.repository.shipping_method_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation'));
    }

    /**
     * Gets the 'sylius.repository.shop_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\UserRepository A Sylius\Bundle\CoreBundle\Doctrine\ORM\UserRepository instance
     */
    protected function getSylius_Repository_ShopUserService()
    {
        return $this->services['sylius.repository.shop_user'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\UserRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\ShopUser'));
    }

    /**
     * Gets the 'sylius.repository.tax_category' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxationBundle\Doctrine\ORM\TaxCategoryRepository A Sylius\Bundle\TaxationBundle\Doctrine\ORM\TaxCategoryRepository instance
     */
    protected function getSylius_Repository_TaxCategoryService()
    {
        return $this->services['sylius.repository.tax_category'] = new \Sylius\Bundle\TaxationBundle\Doctrine\ORM\TaxCategoryRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Taxation\\Model\\TaxCategory'));
    }

    /**
     * Gets the 'sylius.repository.tax_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_TaxRateService()
    {
        return $this->services['sylius.repository.tax_rate'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\TaxRate'));
    }

    /**
     * Gets the 'sylius.repository.taxon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\TaxonomyBundle\Doctrine\ORM\TaxonRepository A Sylius\Bundle\TaxonomyBundle\Doctrine\ORM\TaxonRepository instance
     */
    protected function getSylius_Repository_TaxonService()
    {
        return $this->services['sylius.repository.taxon'] = new \Sylius\Bundle\TaxonomyBundle\Doctrine\ORM\TaxonRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\Taxon'));
    }

    /**
     * Gets the 'sylius.repository.taxon_image' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_TaxonImageService()
    {
        return $this->services['sylius.repository.taxon_image'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Core\\Model\\TaxonImage'));
    }

    /**
     * Gets the 'sylius.repository.taxon_translation' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_TaxonTranslationService()
    {
        return $this->services['sylius.repository.taxon_translation'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation'));
    }

    /**
     * Gets the 'sylius.repository.theme' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Repository\InMemoryThemeRepository A Sylius\Bundle\ThemeBundle\Repository\InMemoryThemeRepository instance
     */
    protected function getSylius_Repository_ThemeService()
    {
        return $this->services['sylius.repository.theme'] = new \Sylius\Bundle\ThemeBundle\Repository\InMemoryThemeRepository(new \Sylius\Bundle\ThemeBundle\Loader\ThemeLoader($this->get('sylius.theme.configuration.provider'), $this->get('sylius.factory.theme'), new \Sylius\Bundle\ThemeBundle\Factory\ThemeAuthorFactory(), new \Sylius\Bundle\ThemeBundle\Factory\ThemeScreenshotFactory(), new \Zend\Hydrator\Reflection(), new \Sylius\Bundle\ThemeBundle\Loader\CircularDependencyChecker()));
    }

    /**
     * Gets the 'sylius.repository.zone' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ZoneService()
    {
        return $this->services['sylius.repository.zone'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Addressing\\Model\\Zone'));
    }

    /**
     * Gets the 'sylius.repository.zone_member' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository A Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository instance
     */
    protected function getSylius_Repository_ZoneMemberService()
    {
        return $this->services['sylius.repository.zone_member'] = new \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository($this->get('doctrine.orm.default_entity_manager'), $this->get('doctrine.orm.default_entity_manager')->getClassMetadata('Sylius\\Component\\Addressing\\Model\\ZoneMember'));
    }

    /**
     * Gets the 'sylius.requirements' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Requirement\SyliusRequirements A Sylius\Bundle\CoreBundle\Installer\Requirement\SyliusRequirements instance
     */
    protected function getSylius_RequirementsService()
    {
        $a = $this->get('translator');

        return $this->services['sylius.requirements'] = new \Sylius\Bundle\CoreBundle\Installer\Requirement\SyliusRequirements(array(0 => new \Sylius\Bundle\CoreBundle\Installer\Requirement\SettingsRequirements($a), 1 => new \Sylius\Bundle\CoreBundle\Installer\Requirement\ExtensionsRequirements($a), 2 => new \Sylius\Bundle\CoreBundle\Installer\Requirement\FilesystemRequirements($a, ($this->targetDirs[3].'/app'), __DIR__, ($this->targetDirs[2].'/logs'))));
    }

    /**
     * Gets the 'sylius.resolver.checkout' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Checkout\CheckoutResolver A Sylius\Bundle\CoreBundle\Checkout\CheckoutResolver instance
     */
    protected function getSylius_Resolver_CheckoutService()
    {
        return $this->services['sylius.resolver.checkout'] = new \Sylius\Bundle\CoreBundle\Checkout\CheckoutResolver($this->get('sylius.context.cart'), $this->get('sylius.router.checkout_state'), new \Symfony\Component\HttpFoundation\RequestMatcher('/checkout/.+'), $this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.resource_controller.authorization_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker A Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker instance
     */
    protected function getSylius_ResourceController_AuthorizationCheckerService()
    {
        return $this->services['sylius.resource_controller.authorization_checker'] = new \Sylius\Bundle\ResourceBundle\Controller\DisabledAuthorizationChecker();
    }

    /**
     * Gets the 'sylius.resource_controller.resources_resolver.grid_aware' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Grid\Controller\ResourcesResolver A Sylius\Bundle\ResourceBundle\Grid\Controller\ResourcesResolver instance
     */
    protected function getSylius_ResourceController_ResourcesResolver_GridAwareService()
    {
        return $this->services['sylius.resource_controller.resources_resolver.grid_aware'] = new \Sylius\Bundle\ResourceBundle\Grid\Controller\ResourcesResolver(new \Sylius\Bundle\ResourceBundle\Controller\ResourcesResolver(), $this->get('sylius.grid.provider'), $this->get('sylius.grid.resource_view_factory'));
    }

    /**
     * Gets the 'sylius.reviewer_reviews_remover' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Remover\ReviewerReviewsRemover A Sylius\Bundle\CoreBundle\Remover\ReviewerReviewsRemover instance
     */
    protected function getSylius_ReviewerReviewsRemoverService()
    {
        return $this->services['sylius.reviewer_reviews_remover'] = new \Sylius\Bundle\CoreBundle\Remover\ReviewerReviewsRemover($this->get('sylius.repository.product_review'), $this->get('doctrine.orm.default_entity_manager'), $this->get('sylius.product_review.average_rating_updater'));
    }

    /**
     * Gets the 'sylius.router.checkout_state' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Checkout\CheckoutStateUrlGenerator A Sylius\Bundle\CoreBundle\Checkout\CheckoutStateUrlGenerator instance
     */
    protected function getSylius_Router_CheckoutStateService()
    {
        return $this->services['sylius.router.checkout_state'] = new \Sylius\Bundle\CoreBundle\Checkout\CheckoutStateUrlGenerator($this->get('router'), array());
    }

    /**
     * Gets the 'sylius.security.password_encoder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Security\UserPasswordEncoder A Sylius\Bundle\UserBundle\Security\UserPasswordEncoder instance
     */
    protected function getSylius_Security_PasswordEncoderService()
    {
        return $this->services['sylius.security.password_encoder'] = new \Sylius\Bundle\UserBundle\Security\UserPasswordEncoder($this->get('security.encoder_factory'));
    }

    /**
     * Gets the 'sylius.security.password_updater' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\PasswordUpdater A Sylius\Component\User\Security\PasswordUpdater instance
     */
    protected function getSylius_Security_PasswordUpdaterService()
    {
        return $this->services['sylius.security.password_updater'] = new \Sylius\Component\User\Security\PasswordUpdater($this->get('sylius.security.password_encoder'));
    }

    /**
     * Gets the 'sylius.security.user_login' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Security\UserLogin A Sylius\Bundle\UserBundle\Security\UserLogin instance
     */
    protected function getSylius_Security_UserLoginService()
    {
        return $this->services['sylius.security.user_login'] = new \Sylius\Bundle\UserBundle\Security\UserLogin($this->get('security.token_storage'), ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'}, $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.sequential_order_number_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Order\NumberGenerator\SequentialOrderNumberGenerator A Sylius\Bundle\CoreBundle\Order\NumberGenerator\SequentialOrderNumberGenerator instance
     */
    protected function getSylius_SequentialOrderNumberGeneratorService()
    {
        return $this->services['sylius.sequential_order_number_generator'] = new \Sylius\Bundle\CoreBundle\Order\NumberGenerator\SequentialOrderNumberGenerator($this->get('sylius.repository.order_sequence'), $this->get('sylius.factory.order_sequence'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.setup.channel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Setup\ChannelSetup A Sylius\Bundle\CoreBundle\Installer\Setup\ChannelSetup instance
     */
    protected function getSylius_Setup_ChannelService()
    {
        return $this->services['sylius.setup.channel'] = new \Sylius\Bundle\CoreBundle\Installer\Setup\ChannelSetup($this->get('sylius.repository.channel'), $this->get('sylius.factory.channel'), $this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.setup.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Setup\CurrencySetup A Sylius\Bundle\CoreBundle\Installer\Setup\CurrencySetup instance
     */
    protected function getSylius_Setup_CurrencyService()
    {
        return $this->services['sylius.setup.currency'] = new \Sylius\Bundle\CoreBundle\Installer\Setup\CurrencySetup($this->get('sylius.repository.currency'), $this->get('sylius.factory.currency'));
    }

    /**
     * Gets the 'sylius.setup.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Installer\Setup\LocaleSetup A Sylius\Bundle\CoreBundle\Installer\Setup\LocaleSetup instance
     */
    protected function getSylius_Setup_LocaleService()
    {
        return $this->services['sylius.setup.locale'] = new \Sylius\Bundle\CoreBundle\Installer\Setup\LocaleSetup($this->get('sylius.repository.locale'), $this->get('sylius.factory.locale'), 'en_US');
    }

    /**
     * Gets the 'sylius.shipping_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Shipping\Calculator\DelegatingCalculator A Sylius\Component\Shipping\Calculator\DelegatingCalculator instance
     */
    protected function getSylius_ShippingCalculatorService()
    {
        return $this->services['sylius.shipping_calculator'] = new \Sylius\Component\Shipping\Calculator\DelegatingCalculator($this->get('sylius.registry.shipping_calculator'));
    }

    /**
     * Gets the 'sylius.shipping_calculator.flat_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Shipping\Calculator\FlatRateCalculator A Sylius\Component\Core\Shipping\Calculator\FlatRateCalculator instance
     */
    protected function getSylius_ShippingCalculator_FlatRateService()
    {
        return $this->services['sylius.shipping_calculator.flat_rate'] = new \Sylius\Component\Core\Shipping\Calculator\FlatRateCalculator();
    }

    /**
     * Gets the 'sylius.shipping_calculator.per_unit_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Shipping\Calculator\PerUnitRateCalculator A Sylius\Component\Core\Shipping\Calculator\PerUnitRateCalculator instance
     */
    protected function getSylius_ShippingCalculator_PerUnitRateService()
    {
        return $this->services['sylius.shipping_calculator.per_unit_rate'] = new \Sylius\Component\Core\Shipping\Calculator\PerUnitRateCalculator();
    }

    /**
     * Gets the 'sylius.shipping_eligibility_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Shipping\Checker\ShippingMethodEligibilityChecker A Sylius\Component\Shipping\Checker\ShippingMethodEligibilityChecker instance
     */
    protected function getSylius_ShippingEligibilityCheckerService()
    {
        return $this->services['sylius.shipping_eligibility_checker'] = new \Sylius\Component\Shipping\Checker\ShippingMethodEligibilityChecker();
    }

    /**
     * Gets the 'sylius.shipping_method_resolver.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Resolver\DefaultShippingMethodResolver A Sylius\Component\Core\Resolver\DefaultShippingMethodResolver instance
     */
    protected function getSylius_ShippingMethodResolver_DefaultService()
    {
        return $this->services['sylius.shipping_method_resolver.default'] = new \Sylius\Component\Core\Resolver\DefaultShippingMethodResolver($this->get('sylius.repository.shipping_method'));
    }

    /**
     * Gets the 'sylius.shipping_methods_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Shipping\Resolver\CompositeMethodsResolver A Sylius\Component\Shipping\Resolver\CompositeMethodsResolver instance
     */
    protected function getSylius_ShippingMethodsResolverService()
    {
        return $this->services['sylius.shipping_methods_resolver'] = new \Sylius\Component\Shipping\Resolver\CompositeMethodsResolver($this->get('sylius.registry.shipping_methods_resolver'));
    }

    /**
     * Gets the 'sylius.shipping_methods_resolver.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Shipping\Resolver\ShippingMethodsResolver A Sylius\Component\Shipping\Resolver\ShippingMethodsResolver instance
     */
    protected function getSylius_ShippingMethodsResolver_DefaultService()
    {
        return $this->services['sylius.shipping_methods_resolver.default'] = new \Sylius\Component\Shipping\Resolver\ShippingMethodsResolver($this->get('sylius.repository.shipping_method'), $this->get('sylius.shipping_eligibility_checker'));
    }

    /**
     * Gets the 'sylius.shipping_methods_resolver.zones_and_channel_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Resolver\ZoneAndChannelBasedShippingMethodsResolver A Sylius\Component\Core\Resolver\ZoneAndChannelBasedShippingMethodsResolver instance
     */
    protected function getSylius_ShippingMethodsResolver_ZonesAndChannelBasedService()
    {
        return $this->services['sylius.shipping_methods_resolver.zones_and_channel_based'] = new \Sylius\Component\Core\Resolver\ZoneAndChannelBasedShippingMethodsResolver($this->get('sylius.repository.shipping_method'), $this->get('sylius.zone_matcher'), $this->get('sylius.shipping_eligibility_checker'));
    }

    /**
     * Gets the 'sylius.shop.menu_builder.account' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ShopBundle\Menu\AccountMenuBuilder A Sylius\Bundle\ShopBundle\Menu\AccountMenuBuilder instance
     */
    protected function getSylius_Shop_MenuBuilder_AccountService()
    {
        return $this->services['sylius.shop.menu_builder.account'] = new \Sylius\Bundle\ShopBundle\Menu\AccountMenuBuilder($this->get('knp_menu.factory'), $this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.shop_user.pin_generator.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniquePinGenerator A Sylius\Component\User\Security\Generator\UniquePinGenerator instance
     */
    protected function getSylius_ShopUser_PinGenerator_PasswordResetService()
    {
        return $this->services['sylius.shop_user.pin_generator.password_reset'] = new \Sylius\Component\User\Security\Generator\UniquePinGenerator($this->get('sylius.random_generator'), $this->get('sylius.shop_user.pin_uniqueness_checker.password_reset'), 4);
    }

    /**
     * Gets the 'sylius.shop_user.pin_uniqueness_checker.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_ShopUser_PinUniquenessChecker_PasswordResetService()
    {
        return $this->services['sylius.shop_user.pin_uniqueness_checker.password_reset'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.shop_user'), 'passwordResetToken');
    }

    /**
     * Gets the 'sylius.shop_user.reloader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\UserBundle\Reloader\UserReloader A Sylius\Bundle\UserBundle\Reloader\UserReloader instance
     */
    protected function getSylius_ShopUser_ReloaderService()
    {
        return $this->services['sylius.shop_user.reloader'] = new \Sylius\Bundle\UserBundle\Reloader\UserReloader($this->get('doctrine.orm.default_entity_manager'));
    }

    /**
     * Gets the 'sylius.shop_user.token_generator.email_verification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniqueTokenGenerator A Sylius\Component\User\Security\Generator\UniqueTokenGenerator instance
     */
    protected function getSylius_ShopUser_TokenGenerator_EmailVerificationService()
    {
        return $this->services['sylius.shop_user.token_generator.email_verification'] = new \Sylius\Component\User\Security\Generator\UniqueTokenGenerator($this->get('sylius.random_generator'), $this->get('sylius.shop_user.token_uniqueness_checker.email_verification'), 16);
    }

    /**
     * Gets the 'sylius.shop_user.token_generator.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Generator\UniqueTokenGenerator A Sylius\Component\User\Security\Generator\UniqueTokenGenerator instance
     */
    protected function getSylius_ShopUser_TokenGenerator_PasswordResetService()
    {
        return $this->services['sylius.shop_user.token_generator.password_reset'] = new \Sylius\Component\User\Security\Generator\UniqueTokenGenerator($this->get('sylius.random_generator'), $this->get('sylius.shop_user.token_uniqueness_checker.password_reset'), 16);
    }

    /**
     * Gets the 'sylius.shop_user.token_uniqueness_checker.email_verification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_ShopUser_TokenUniquenessChecker_EmailVerificationService()
    {
        return $this->services['sylius.shop_user.token_uniqueness_checker.email_verification'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.shop_user'), 'emailVerificationToken');
    }

    /**
     * Gets the 'sylius.shop_user.token_uniqueness_checker.password_reset' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\User\Security\Checker\TokenUniquenessChecker A Sylius\Component\User\Security\Checker\TokenUniquenessChecker instance
     */
    protected function getSylius_ShopUser_TokenUniquenessChecker_PasswordResetService()
    {
        return $this->services['sylius.shop_user.token_uniqueness_checker.password_reset'] = new \Sylius\Component\User\Security\Checker\TokenUniquenessChecker($this->get('sylius.repository.shop_user'), 'passwordResetToken');
    }

    /**
     * Gets the 'sylius.shop_user_provider.email_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\EmailProvider A Sylius\Bundle\UserBundle\Provider\EmailProvider instance
     */
    public function getSylius_ShopUserProvider_EmailBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.shop_user_provider.email_based'] = new SyliusBundleUserBundleProviderEmailProvider_000000004255233f000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_ShopUserProvider_EmailBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\EmailProvider('Sylius\\Component\\Core\\Model\\ShopUser', $this->get('sylius.repository.shop_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.shop_user_provider.email_or_name_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider A Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider instance
     */
    public function getSylius_ShopUserProvider_EmailOrNameBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.shop_user_provider.email_or_name_based'] = new SyliusBundleUserBundleProviderUsernameOrEmailProvider_0000000042552339000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_ShopUserProvider_EmailOrNameBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider('Sylius\\Component\\Core\\Model\\ShopUser', $this->get('sylius.repository.shop_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.shop_user_provider.name_based' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\UserBundle\Provider\UsernameProvider A Sylius\Bundle\UserBundle\Provider\UsernameProvider instance
     */
    public function getSylius_ShopUserProvider_NameBasedService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.shop_user_provider.name_based'] = new SyliusBundleUserBundleProviderUsernameProvider_000000004255233e000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_ShopUserProvider_NameBasedService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\UserBundle\Provider\UsernameProvider('Sylius\\Component\\Core\\Model\\ShopUser', $this->get('sylius.repository.shop_user'), $this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.state_resolver.order' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\StateResolver\OrderStateResolver A Sylius\Component\Core\StateResolver\OrderStateResolver instance
     */
    protected function getSylius_StateResolver_OrderService()
    {
        return $this->services['sylius.state_resolver.order'] = new \Sylius\Component\Core\StateResolver\OrderStateResolver($this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.state_resolver.order_checkout' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\StateResolver\CheckoutStateResolver A Sylius\Component\Core\StateResolver\CheckoutStateResolver instance
     */
    protected function getSylius_StateResolver_OrderCheckoutService()
    {
        return $this->services['sylius.state_resolver.order_checkout'] = new \Sylius\Component\Core\StateResolver\CheckoutStateResolver($this->get('sm.factory'), $this->get('sylius.checker.order_payment_method_selection_requirement'), $this->get('sylius.checker.order_shipping_method_selection_requirement'));
    }

    /**
     * Gets the 'sylius.state_resolver.order_payment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\StateResolver\OrderPaymentStateResolver A Sylius\Component\Core\StateResolver\OrderPaymentStateResolver instance
     */
    protected function getSylius_StateResolver_OrderPaymentService()
    {
        return $this->services['sylius.state_resolver.order_payment'] = new \Sylius\Component\Core\StateResolver\OrderPaymentStateResolver($this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.state_resolver.order_shipping' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\StateResolver\OrderShippingStateResolver A Sylius\Component\Core\StateResolver\OrderShippingStateResolver instance
     */
    protected function getSylius_StateResolver_OrderShippingService()
    {
        return $this->services['sylius.state_resolver.order_shipping'] = new \Sylius\Component\Core\StateResolver\OrderShippingStateResolver($this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.storage.cookie' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Storage\CookieStorage A Sylius\Bundle\ResourceBundle\Storage\CookieStorage instance
     */
    protected function getSylius_Storage_CookieService()
    {
        return $this->services['sylius.storage.cookie'] = new \Sylius\Bundle\ResourceBundle\Storage\CookieStorage();
    }

    /**
     * Gets the 'sylius.storage.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Currency\CurrencyStorage A Sylius\Component\Core\Currency\CurrencyStorage instance
     */
    protected function getSylius_Storage_CurrencyService()
    {
        return $this->services['sylius.storage.currency'] = new \Sylius\Component\Core\Currency\CurrencyStorage($this->get('sylius.storage.cookie'));
    }

    /**
     * Gets the 'sylius.storage.session' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\Storage\SessionStorage A Sylius\Bundle\ResourceBundle\Storage\SessionStorage instance
     */
    protected function getSylius_Storage_SessionService()
    {
        return $this->services['sylius.storage.session'] = new \Sylius\Bundle\ResourceBundle\Storage\SessionStorage($this->get('session'));
    }

    /**
     * Gets the 'sylius.tax_calculator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Taxation\Calculator\DelegatingCalculator A Sylius\Component\Taxation\Calculator\DelegatingCalculator instance
     */
    protected function getSylius_TaxCalculatorService()
    {
        return $this->services['sylius.tax_calculator'] = new \Sylius\Component\Taxation\Calculator\DelegatingCalculator($this->get('sylius.registry.tax_calculator'));
    }

    /**
     * Gets the 'sylius.tax_calculator.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Taxation\Calculator\DefaultCalculator A Sylius\Component\Taxation\Calculator\DefaultCalculator instance
     */
    protected function getSylius_TaxCalculator_DefaultService()
    {
        return $this->services['sylius.tax_calculator.default'] = new \Sylius\Component\Taxation\Calculator\DefaultCalculator();
    }

    /**
     * Gets the 'sylius.tax_rate_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Taxation\Resolver\TaxRateResolver A Sylius\Component\Taxation\Resolver\TaxRateResolver instance
     */
    protected function getSylius_TaxRateResolverService()
    {
        return $this->services['sylius.tax_rate_resolver'] = new \Sylius\Component\Taxation\Resolver\TaxRateResolver($this->get('sylius.repository.tax_rate'));
    }

    /**
     * Gets the 'sylius.taxation.order_item_units_based_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Taxation\Strategy\TaxCalculationStrategy A Sylius\Bundle\CoreBundle\Taxation\Strategy\TaxCalculationStrategy instance
     */
    protected function getSylius_Taxation_OrderItemUnitsBasedStrategyService()
    {
        return $this->services['sylius.taxation.order_item_units_based_strategy'] = new \Sylius\Bundle\CoreBundle\Taxation\Strategy\TaxCalculationStrategy('order_item_units_based', array(0 => $this->get('sylius.taxation.order_item_units_taxes_applicator'), 1 => $this->get('sylius.taxation.order_shipment_taxes_applicator')));
    }

    /**
     * Gets the 'sylius.taxation.order_item_units_taxes_applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Taxation\Applicator\OrderItemUnitsTaxesApplicator A Sylius\Component\Core\Taxation\Applicator\OrderItemUnitsTaxesApplicator instance
     */
    protected function getSylius_Taxation_OrderItemUnitsTaxesApplicatorService()
    {
        return $this->services['sylius.taxation.order_item_units_taxes_applicator'] = new \Sylius\Component\Core\Taxation\Applicator\OrderItemUnitsTaxesApplicator($this->get('sylius.tax_calculator'), $this->get('sylius.factory.adjustment'), $this->get('sylius.tax_rate_resolver'));
    }

    /**
     * Gets the 'sylius.taxation.order_items_based_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Taxation\Strategy\TaxCalculationStrategy A Sylius\Bundle\CoreBundle\Taxation\Strategy\TaxCalculationStrategy instance
     */
    protected function getSylius_Taxation_OrderItemsBasedStrategyService()
    {
        return $this->services['sylius.taxation.order_items_based_strategy'] = new \Sylius\Bundle\CoreBundle\Taxation\Strategy\TaxCalculationStrategy('order_items_based', array(0 => $this->get('sylius.taxation.order_items_taxes_applicator'), 1 => $this->get('sylius.taxation.order_shipment_taxes_applicator')));
    }

    /**
     * Gets the 'sylius.taxation.order_items_taxes_applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Taxation\Applicator\OrderItemsTaxesApplicator A Sylius\Component\Core\Taxation\Applicator\OrderItemsTaxesApplicator instance
     */
    protected function getSylius_Taxation_OrderItemsTaxesApplicatorService()
    {
        return $this->services['sylius.taxation.order_items_taxes_applicator'] = new \Sylius\Component\Core\Taxation\Applicator\OrderItemsTaxesApplicator($this->get('sylius.tax_calculator'), $this->get('sylius.factory.adjustment'), $this->get('sylius.integer_distributor'), $this->get('sylius.tax_rate_resolver'));
    }

    /**
     * Gets the 'sylius.taxation.order_shipment_taxes_applicator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Taxation\Applicator\OrderShipmentTaxesApplicator A Sylius\Component\Core\Taxation\Applicator\OrderShipmentTaxesApplicator instance
     */
    protected function getSylius_Taxation_OrderShipmentTaxesApplicatorService()
    {
        return $this->services['sylius.taxation.order_shipment_taxes_applicator'] = new \Sylius\Component\Core\Taxation\Applicator\OrderShipmentTaxesApplicator($this->get('sylius.tax_calculator'), $this->get('sylius.factory.adjustment'), $this->get('sylius.tax_rate_resolver'));
    }

    /**
     * Gets the 'sylius.templating.helper.adjustment' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\OrderBundle\Templating\Helper\AdjustmentsHelper A Sylius\Bundle\OrderBundle\Templating\Helper\AdjustmentsHelper instance
     */
    protected function getSylius_Templating_Helper_AdjustmentService()
    {
        return $this->services['sylius.templating.helper.adjustment'] = new \Sylius\Bundle\OrderBundle\Templating\Helper\AdjustmentsHelper($this->get('sylius.adjustments_aggregator'));
    }

    /**
     * Gets the 'sylius.templating.helper.checkout_steps' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\CoreBundle\Templating\Helper\CheckoutStepsHelper A Sylius\Bundle\CoreBundle\Templating\Helper\CheckoutStepsHelper instance
     */
    public function getSylius_Templating_Helper_CheckoutStepsService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.templating.helper.checkout_steps'] = new SyliusBundleCoreBundleTemplatingHelperCheckoutStepsHelper_00000000425534f3000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Templating_Helper_CheckoutStepsService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\CoreBundle\Templating\Helper\CheckoutStepsHelper($this->get('sylius.checker.order_payment_method_selection_requirement'), $this->get('sylius.checker.order_shipping_method_selection_requirement'));
    }

    /**
     * Gets the 'sylius.templating.helper.convert_money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper A Sylius\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper instance
     */
    public function getSylius_Templating_Helper_ConvertMoneyService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.templating.helper.convert_money'] = new SyliusBundleMoneyBundleTemplatingHelperConvertMoneyHelper_0000000042552370000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Templating_Helper_ConvertMoneyService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper($this->get('sylius.currency_converter'));
    }

    /**
     * Gets the 'sylius.templating.helper.currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper A Sylius\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper instance
     */
    public function getSylius_Templating_Helper_CurrencyService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.templating.helper.currency'] = new SyliusBundleCurrencyBundleTemplatingHelperCurrencyHelper_000000004255265f000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Templating_Helper_CurrencyService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper();
    }

    /**
     * Gets the 'sylius.templating.helper.format_money' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper A Sylius\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper instance
     */
    public function getSylius_Templating_Helper_FormatMoneyService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.templating.helper.format_money'] = new SyliusBundleMoneyBundleTemplatingHelperFormatMoneyHelper_00000000425526d1000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Templating_Helper_FormatMoneyService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper($this->get('sylius.money_formatter'));
    }

    /**
     * Gets the 'sylius.templating.helper.grid' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\GridBundle\Templating\Helper\GridHelper A Sylius\Bundle\GridBundle\Templating\Helper\GridHelper instance
     */
    public function getSylius_Templating_Helper_GridService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.templating.helper.grid'] = new SyliusBundleGridBundleTemplatingHelperGridHelper_00000000425524ba000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Templating_Helper_GridService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\GridBundle\Templating\Helper\GridHelper($this->get('sylius.custom_grid_renderer.twig'));
    }

    /**
     * Gets the 'sylius.templating.helper.inventory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\InventoryBundle\Templating\Helper\InventoryHelper A Sylius\Bundle\InventoryBundle\Templating\Helper\InventoryHelper instance
     */
    protected function getSylius_Templating_Helper_InventoryService()
    {
        return $this->services['sylius.templating.helper.inventory'] = new \Sylius\Bundle\InventoryBundle\Templating\Helper\InventoryHelper($this->get('sylius.availability_checker.default'));
    }

    /**
     * Gets the 'sylius.templating.helper.locale' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\LocaleBundle\Templating\Helper\LocaleHelper A Sylius\Bundle\LocaleBundle\Templating\Helper\LocaleHelper instance
     */
    protected function getSylius_Templating_Helper_LocaleService()
    {
        return $this->services['sylius.templating.helper.locale'] = new \Sylius\Bundle\LocaleBundle\Templating\Helper\LocaleHelper($this->get('sylius.locale_converter'));
    }

    /**
     * Gets the 'sylius.templating.helper.price' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Sylius\Bundle\CoreBundle\Templating\Helper\PriceHelper A Sylius\Bundle\CoreBundle\Templating\Helper\PriceHelper instance
     */
    public function getSylius_Templating_Helper_PriceService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['sylius.templating.helper.price'] = new SyliusBundleCoreBundleTemplatingHelperPriceHelper_00000000425534f7000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getSylius_Templating_Helper_PriceService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Sylius\Bundle\CoreBundle\Templating\Helper\PriceHelper($this->get('sylius.calculator.product_variant_price'));
    }

    /**
     * Gets the 'sylius.templating.helper.product_variants_prices' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Templating\Helper\ProductVariantsPricesHelper A Sylius\Bundle\CoreBundle\Templating\Helper\ProductVariantsPricesHelper instance
     */
    protected function getSylius_Templating_Helper_ProductVariantsPricesService()
    {
        return $this->services['sylius.templating.helper.product_variants_prices'] = new \Sylius\Bundle\CoreBundle\Templating\Helper\ProductVariantsPricesHelper($this->get('sylius.provider.product_variants_prices'));
    }

    /**
     * Gets the 'sylius.templating.helper.variant_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Templating\Helper\VariantResolverHelper A Sylius\Bundle\CoreBundle\Templating\Helper\VariantResolverHelper instance
     */
    protected function getSylius_Templating_Helper_VariantResolverService()
    {
        return $this->services['sylius.templating.helper.variant_resolver'] = new \Sylius\Bundle\CoreBundle\Templating\Helper\VariantResolverHelper($this->get('sylius.product_variant_resolver.default'));
    }

    /**
     * Gets the 'sylius.test.factory.promotion' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Test\Factory\TestPromotionFactory A Sylius\Component\Core\Test\Factory\TestPromotionFactory instance
     */
    protected function getSylius_Test_Factory_PromotionService()
    {
        return $this->services['sylius.test.factory.promotion'] = new \Sylius\Component\Core\Test\Factory\TestPromotionFactory($this->get('sylius.factory.promotion'));
    }

    /**
     * Gets the 'sylius.theme.asset.assets_installer.output_aware' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Asset\Installer\OutputAwareAssetsInstaller A Sylius\Bundle\ThemeBundle\Asset\Installer\OutputAwareAssetsInstaller instance
     */
    protected function getSylius_Theme_Asset_AssetsInstaller_OutputAwareService()
    {
        return $this->services['sylius.theme.asset.assets_installer.output_aware'] = new \Sylius\Bundle\ThemeBundle\Asset\Installer\OutputAwareAssetsInstaller(new \Sylius\Bundle\ThemeBundle\Asset\Installer\AssetsInstaller($this->get('filesystem'), $this->get('kernel'), $this->get('sylius.repository.theme'), ${($_ = isset($this->services['sylius.theme.hierarchy_provider']) ? $this->services['sylius.theme.hierarchy_provider'] : $this->getSylius_Theme_HierarchyProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.theme.asset.path_resolver']) ? $this->services['sylius.theme.asset.path_resolver'] : $this->getSylius_Theme_Asset_PathResolverService()) && false ?: '_'}));
    }

    /**
     * Gets the 'sylius.theme.configuration.provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Configuration\CompositeConfigurationProvider A Sylius\Bundle\ThemeBundle\Configuration\CompositeConfigurationProvider instance
     */
    protected function getSylius_Theme_Configuration_ProviderService()
    {
        return $this->services['sylius.theme.configuration.provider'] = new \Sylius\Bundle\ThemeBundle\Configuration\CompositeConfigurationProvider(array());
    }

    /**
     * Gets the 'sylius.theme.form.type.theme_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Form\Type\ThemeChoiceType A Sylius\Bundle\ThemeBundle\Form\Type\ThemeChoiceType instance
     */
    protected function getSylius_Theme_Form_Type_ThemeChoiceService()
    {
        return $this->services['sylius.theme.form.type.theme_choice'] = new \Sylius\Bundle\ThemeBundle\Form\Type\ThemeChoiceType($this->get('sylius.repository.theme'));
    }

    /**
     * Gets the 'sylius.theme.form.type.theme_name_choice' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Form\Type\ThemeNameChoiceType A Sylius\Bundle\ThemeBundle\Form\Type\ThemeNameChoiceType instance
     */
    protected function getSylius_Theme_Form_Type_ThemeNameChoiceService()
    {
        return $this->services['sylius.theme.form.type.theme_name_choice'] = new \Sylius\Bundle\ThemeBundle\Form\Type\ThemeNameChoiceType($this->get('sylius.repository.theme'));
    }

    /**
     * Gets the 'sylius.theme.locator.application_resource' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Locator\ApplicationResourceLocator A Sylius\Bundle\ThemeBundle\Locator\ApplicationResourceLocator instance
     */
    protected function getSylius_Theme_Locator_ApplicationResourceService()
    {
        return $this->services['sylius.theme.locator.application_resource'] = new \Sylius\Bundle\ThemeBundle\Locator\ApplicationResourceLocator($this->get('filesystem'));
    }

    /**
     * Gets the 'sylius.theme.locator.bundle_resource' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Locator\BundleResourceLocator A Sylius\Bundle\ThemeBundle\Locator\BundleResourceLocator instance
     */
    protected function getSylius_Theme_Locator_BundleResourceService()
    {
        return $this->services['sylius.theme.locator.bundle_resource'] = new \Sylius\Bundle\ThemeBundle\Locator\BundleResourceLocator($this->get('filesystem'), $this->get('kernel'));
    }

    /**
     * Gets the 'sylius.theme.templating.cache' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Doctrine\Common\Cache\ArrayCache A Doctrine\Common\Cache\ArrayCache instance
     */
    protected function getSylius_Theme_Templating_CacheService()
    {
        return $this->services['sylius.theme.templating.cache'] = new \Doctrine\Common\Cache\ArrayCache();
    }

    /**
     * Gets the 'sylius.translatable_entity_locale_assigner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Translation\TranslatableEntityLocaleAssigner A Sylius\Component\Core\Translation\TranslatableEntityLocaleAssigner instance
     */
    protected function getSylius_TranslatableEntityLocaleAssignerService()
    {
        return $this->services['sylius.translatable_entity_locale_assigner'] = new \Sylius\Component\Core\Translation\TranslatableEntityLocaleAssigner($this->get('sylius.context.locale'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.translation.translatable_listener.doctrine.orm' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener A Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener instance
     */
    protected function getSylius_Translation_TranslatableListener_Doctrine_OrmService()
    {
        return $this->services['sylius.translation.translatable_listener.doctrine.orm'] = new \Sylius\Bundle\ResourceBundle\EventListener\ORMTranslatableListener(${($_ = isset($this->services['sylius.resource_registry']) ? $this->services['sylius.resource_registry'] : $this->getSylius_ResourceRegistryService()) && false ?: '_'}, $this);
    }

    /**
     * Gets the 'sylius.translation_locale_provider.admin' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Provider\TranslationLocaleProvider A Sylius\Component\Core\Provider\TranslationLocaleProvider instance
     */
    protected function getSylius_TranslationLocaleProvider_AdminService()
    {
        return $this->services['sylius.translation_locale_provider.admin'] = new \Sylius\Component\Core\Provider\TranslationLocaleProvider($this->get('sylius.repository.locale'), 'en_US');
    }

    /**
     * Gets the 'sylius.translation_locale_provider.immutable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider A Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider instance
     */
    protected function getSylius_TranslationLocaleProvider_ImmutableService()
    {
        return $this->services['sylius.translation_locale_provider.immutable'] = new \Sylius\Component\Resource\Translation\Provider\ImmutableTranslationLocaleProvider(array(0 => 'en_US'), 'en_US');
    }

    /**
     * Gets the 'sylius.translator.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\TranslatorListener A Symfony\Component\HttpKernel\EventListener\TranslatorListener instance
     */
    protected function getSylius_Translator_ListenerService()
    {
        return $this->services['sylius.translator.listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener($this->get('translator'), $this->get('request_stack'));
    }

    /**
     * Gets the 'sylius.twig.extension.country_name' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Twig\CountryNameExtension A Sylius\Bundle\AddressingBundle\Twig\CountryNameExtension instance
     */
    protected function getSylius_Twig_Extension_CountryNameService()
    {
        return $this->services['sylius.twig.extension.country_name'] = new \Sylius\Bundle\AddressingBundle\Twig\CountryNameExtension('');
    }

    /**
     * Gets the 'sylius.twig.extension.province_naming' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Twig\ProvinceNamingExtension A Sylius\Bundle\AddressingBundle\Twig\ProvinceNamingExtension instance
     */
    protected function getSylius_Twig_Extension_ProvinceNamingService()
    {
        return $this->services['sylius.twig.extension.province_naming'] = new \Sylius\Bundle\AddressingBundle\Twig\ProvinceNamingExtension($this->get('sylius.province_naming_provider'), '');
    }

    /**
     * Gets the 'sylius.twig.extension.widget.admin_notification' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AdminBundle\Twig\NotificationWidgetExtension A Sylius\Bundle\AdminBundle\Twig\NotificationWidgetExtension instance
     */
    protected function getSylius_Twig_Extension_Widget_AdminNotificationService()
    {
        return $this->services['sylius.twig.extension.widget.admin_notification'] = new \Sylius\Bundle\AdminBundle\Twig\NotificationWidgetExtension(true, 60);
    }

    /**
     * Gets the 'sylius.unique_id_based_order_token_assigner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\TokenAssigner\UniqueIdBasedOrderTokenAssigner A Sylius\Component\Core\TokenAssigner\UniqueIdBasedOrderTokenAssigner instance
     */
    protected function getSylius_UniqueIdBasedOrderTokenAssignerService()
    {
        return $this->services['sylius.unique_id_based_order_token_assigner'] = new \Sylius\Component\Core\TokenAssigner\UniqueIdBasedOrderTokenAssigner($this->get('sylius.random_generator'));
    }

    /**
     * Gets the 'sylius.unpaid_orders_state_updater' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Updater\UnpaidOrdersStateUpdater A Sylius\Component\Core\Updater\UnpaidOrdersStateUpdater instance
     */
    protected function getSylius_UnpaidOrdersStateUpdaterService()
    {
        return $this->services['sylius.unpaid_orders_state_updater'] = new \Sylius\Component\Core\Updater\UnpaidOrdersStateUpdater($this->get('sylius.repository.order'), $this->get('sm.factory'), '5 days');
    }

    /**
     * Gets the 'sylius.updater.order.exchange_rate' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Core\Updater\OrderExchangeRateUpdater A Sylius\Component\Core\Updater\OrderExchangeRateUpdater instance
     */
    protected function getSylius_Updater_Order_ExchangeRateService()
    {
        return $this->services['sylius.updater.order.exchange_rate'] = new \Sylius\Component\Core\Updater\OrderExchangeRateUpdater($this->get('sylius.repository.currency'));
    }

    /**
     * Gets the 'sylius.validator.cart_item_availability' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\CartItemAvailabilityValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\CartItemAvailabilityValidator instance
     */
    protected function getSylius_Validator_CartItemAvailabilityService()
    {
        return $this->services['sylius.validator.cart_item_availability'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\CartItemAvailabilityValidator($this->get('sylius.availability_checker.default'));
    }

    /**
     * Gets the 'sylius.validator.customer_initializer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Initializer\CustomerInitializer A Sylius\Bundle\CoreBundle\Validator\Initializer\CustomerInitializer instance
     */
    protected function getSylius_Validator_CustomerInitializerService()
    {
        return $this->services['sylius.validator.customer_initializer'] = new \Sylius\Bundle\CoreBundle\Validator\Initializer\CustomerInitializer($this->get('sylius.canonicalizer'));
    }

    /**
     * Gets the 'sylius.validator.date_range' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Validator\PromotionDateRangeValidator A Sylius\Bundle\PromotionBundle\Validator\PromotionDateRangeValidator instance
     */
    protected function getSylius_Validator_DateRangeService()
    {
        return $this->services['sylius.validator.date_range'] = new \Sylius\Bundle\PromotionBundle\Validator\PromotionDateRangeValidator();
    }

    /**
     * Gets the 'sylius.validator.different_source_target_currency' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CurrencyBundle\Validator\Constraints\DifferentSourceTargetCurrencyValidator A Sylius\Bundle\CurrencyBundle\Validator\Constraints\DifferentSourceTargetCurrencyValidator instance
     */
    protected function getSylius_Validator_DifferentSourceTargetCurrencyService()
    {
        return $this->services['sylius.validator.different_source_target_currency'] = new \Sylius\Bundle\CurrencyBundle\Validator\Constraints\DifferentSourceTargetCurrencyValidator();
    }

    /**
     * Gets the 'sylius.validator.has_all_prices_defined' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\HasAllPricesDefinedValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\HasAllPricesDefinedValidator instance
     */
    protected function getSylius_Validator_HasAllPricesDefinedService()
    {
        return $this->services['sylius.validator.has_all_prices_defined'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\HasAllPricesDefinedValidator();
    }

    /**
     * Gets the 'sylius.validator.has_all_variant_prices_defined' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\HasAllVariantPricesDefinedValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\HasAllVariantPricesDefinedValidator instance
     */
    protected function getSylius_Validator_HasAllVariantPricesDefinedService()
    {
        return $this->services['sylius.validator.has_all_variant_prices_defined'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\HasAllVariantPricesDefinedValidator();
    }

    /**
     * Gets the 'sylius.validator.has_enabled_entity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\HasEnabledEntityValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\HasEnabledEntityValidator instance
     */
    protected function getSylius_Validator_HasEnabledEntityService()
    {
        return $this->services['sylius.validator.has_enabled_entity'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\HasEnabledEntityValidator($this->get('doctrine'));
    }

    /**
     * Gets the 'sylius.validator.in_stock' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\InventoryBundle\Validator\Constraints\InStockValidator A Sylius\Bundle\InventoryBundle\Validator\Constraints\InStockValidator instance
     */
    protected function getSylius_Validator_InStockService()
    {
        return $this->services['sylius.validator.in_stock'] = new \Sylius\Bundle\InventoryBundle\Validator\Constraints\InStockValidator($this->get('sylius.availability_checker.default'));
    }

    /**
     * Gets the 'sylius.validator.locales_aware_valid_attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\LocalesAwareValidAttributeValueValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\LocalesAwareValidAttributeValueValidator instance
     */
    protected function getSylius_Validator_LocalesAwareValidAttributeValueService()
    {
        return $this->services['sylius.validator.locales_aware_valid_attribute_value'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\LocalesAwareValidAttributeValueValidator($this->get('sylius.registry.attribute_type'), $this->get('sylius.translation_locale_provider.admin'));
    }

    /**
     * Gets the 'sylius.validator.payment_method_integrity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\OrderPaymentMethodEligibilityValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\OrderPaymentMethodEligibilityValidator instance
     */
    protected function getSylius_Validator_PaymentMethodIntegrityService()
    {
        return $this->services['sylius.validator.payment_method_integrity'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\OrderPaymentMethodEligibilityValidator();
    }

    /**
     * Gets the 'sylius.validator.product_code_uniqueness' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Validator\UniqueSimpleProductCodeValidator A Sylius\Bundle\ProductBundle\Validator\UniqueSimpleProductCodeValidator instance
     */
    protected function getSylius_Validator_ProductCodeUniquenessService()
    {
        return $this->services['sylius.validator.product_code_uniqueness'] = new \Sylius\Bundle\ProductBundle\Validator\UniqueSimpleProductCodeValidator($this->get('sylius.repository.product_variant'));
    }

    /**
     * Gets the 'sylius.validator.product_integrity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\OrderProductEligibilityValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\OrderProductEligibilityValidator instance
     */
    protected function getSylius_Validator_ProductIntegrityService()
    {
        return $this->services['sylius.validator.product_integrity'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\OrderProductEligibilityValidator();
    }

    /**
     * Gets the 'sylius.validator.product_variant_combination' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ProductBundle\Validator\ProductVariantCombinationValidator A Sylius\Bundle\ProductBundle\Validator\ProductVariantCombinationValidator instance
     */
    protected function getSylius_Validator_ProductVariantCombinationService()
    {
        return $this->services['sylius.validator.product_variant_combination'] = new \Sylius\Bundle\ProductBundle\Validator\ProductVariantCombinationValidator($this->get('sylius.checker.product_variants_parity'));
    }

    /**
     * Gets the 'sylius.validator.promotion_coupon_generation_amount' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Validator\CouponGenerationAmountValidator A Sylius\Bundle\PromotionBundle\Validator\CouponGenerationAmountValidator instance
     */
    protected function getSylius_Validator_PromotionCouponGenerationAmountService()
    {
        return $this->services['sylius.validator.promotion_coupon_generation_amount'] = new \Sylius\Bundle\PromotionBundle\Validator\CouponGenerationAmountValidator($this->get('sylius.promotion_coupon_generator.percentage_policy'));
    }

    /**
     * Gets the 'sylius.validator.promotion_subject_coupon' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PromotionBundle\Validator\PromotionSubjectCouponValidator A Sylius\Bundle\PromotionBundle\Validator\PromotionSubjectCouponValidator instance
     */
    protected function getSylius_Validator_PromotionSubjectCouponService()
    {
        return $this->services['sylius.validator.promotion_subject_coupon'] = new \Sylius\Bundle\PromotionBundle\Validator\PromotionSubjectCouponValidator($this->get('sylius.promotion_eligibility_checker'));
    }

    /**
     * Gets the 'sylius.validator.shipping_method_integrity' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\OrderShippingMethodEligibilityValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\OrderShippingMethodEligibilityValidator instance
     */
    protected function getSylius_Validator_ShippingMethodIntegrityService()
    {
        return $this->services['sylius.validator.shipping_method_integrity'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\OrderShippingMethodEligibilityValidator($this->get('sylius.shipping_eligibility_checker'));
    }

    /**
     * Gets the 'sylius.validator.unique.registered_user' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\RegisteredUserValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\RegisteredUserValidator instance
     */
    protected function getSylius_Validator_Unique_RegisteredUserService()
    {
        return $this->services['sylius.validator.unique.registered_user'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\RegisteredUserValidator($this->get('sylius.repository.customer'));
    }

    /**
     * Gets the 'sylius.validator.unique_currency_pair' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CurrencyBundle\Validator\Constraints\UniqueCurrencyPairValidator A Sylius\Bundle\CurrencyBundle\Validator\Constraints\UniqueCurrencyPairValidator instance
     */
    protected function getSylius_Validator_UniqueCurrencyPairService()
    {
        return $this->services['sylius.validator.unique_currency_pair'] = new \Sylius\Bundle\CurrencyBundle\Validator\Constraints\UniqueCurrencyPairValidator($this->get('sylius.repository.exchange_rate'));
    }

    /**
     * Gets the 'sylius.validator.unique_reviewer_email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\CoreBundle\Validator\Constraints\UniqueReviewerEmailValidator A Sylius\Bundle\CoreBundle\Validator\Constraints\UniqueReviewerEmailValidator instance
     */
    protected function getSylius_Validator_UniqueReviewerEmailService()
    {
        return $this->services['sylius.validator.unique_reviewer_email'] = new \Sylius\Bundle\CoreBundle\Validator\Constraints\UniqueReviewerEmailValidator($this->get('sylius.repository.shop_user'), $this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }

    /**
     * Gets the 'sylius.validator.valid_attribute_value' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AttributeBundle\Validator\Constraints\ValidAttributeValueValidator A Sylius\Bundle\AttributeBundle\Validator\Constraints\ValidAttributeValueValidator instance
     */
    protected function getSylius_Validator_ValidAttributeValueService()
    {
        return $this->services['sylius.validator.valid_attribute_value'] = new \Sylius\Bundle\AttributeBundle\Validator\Constraints\ValidAttributeValueValidator($this->get('sylius.registry.attribute_type'));
    }

    /**
     * Gets the 'sylius.validator.valid_province_address' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\AddressingBundle\Validator\Constraints\ProvinceAddressConstraintValidator A Sylius\Bundle\AddressingBundle\Validator\Constraints\ProvinceAddressConstraintValidator instance
     */
    protected function getSylius_Validator_ValidProvinceAddressService()
    {
        return $this->services['sylius.validator.valid_province_address'] = new \Sylius\Bundle\AddressingBundle\Validator\Constraints\ProvinceAddressConstraintValidator($this->get('sylius.repository.country'), $this->get('sylius.repository.province'));
    }

    /**
     * Gets the 'sylius.zone_matcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Component\Addressing\Matcher\ZoneMatcher A Sylius\Component\Addressing\Matcher\ZoneMatcher instance
     */
    protected function getSylius_ZoneMatcherService()
    {
        return $this->services['sylius.zone_matcher'] = new \Sylius\Component\Addressing\Matcher\ZoneMatcher($this->get('sylius.repository.zone'));
    }

    /**
     * Gets the 'sylius_fixtures.fixture_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FixturesBundle\Loader\HookableFixtureLoader A Sylius\Bundle\FixturesBundle\Loader\HookableFixtureLoader instance
     */
    protected function getSyliusFixtures_FixtureLoaderService()
    {
        return $this->services['sylius_fixtures.fixture_loader'] = new \Sylius\Bundle\FixturesBundle\Loader\HookableFixtureLoader(new \Sylius\Bundle\FixturesBundle\Loader\FixtureLoader());
    }

    /**
     * Gets the 'sylius_fixtures.fixture_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FixturesBundle\Fixture\FixtureRegistry A Sylius\Bundle\FixturesBundle\Fixture\FixtureRegistry instance
     */
    protected function getSyliusFixtures_FixtureRegistryService()
    {
        $this->services['sylius_fixtures.fixture_registry'] = $instance = new \Sylius\Bundle\FixturesBundle\Fixture\FixtureRegistry();

        $instance->addFixture($this->get('sylius.fixture.locale'));
        $instance->addFixture($this->get('sylius.fixture.currency'));
        $instance->addFixture($this->get('sylius.fixture.geographical'));
        $instance->addFixture($this->get('sylius.fixture.payment_method'));
        $instance->addFixture($this->get('sylius.fixture.shipping_category'));
        $instance->addFixture($this->get('sylius.fixture.shipping_method'));
        $instance->addFixture($this->get('sylius.fixture.channel'));
        $instance->addFixture($this->get('sylius.fixture.customer_group'));
        $instance->addFixture($this->get('sylius.fixture.shop_user'));
        $instance->addFixture($this->get('sylius.fixture.admin_user'));
        $instance->addFixture($this->get('sylius.fixture.product_association_type'));
        $instance->addFixture($this->get('sylius.fixture.product_association'));
        $instance->addFixture($this->get('sylius.fixture.similar_product_association'));
        $instance->addFixture($this->get('sylius.fixture.product_option'));
        $instance->addFixture($this->get('sylius.fixture.product_attribute'));
        $instance->addFixture($this->get('sylius.fixture.product_review'));
        $instance->addFixture($this->get('sylius.fixture.tax_category'));
        $instance->addFixture($this->get('sylius.fixture.tax_rate'));
        $instance->addFixture($this->get('sylius.fixture.promotion'));
        $instance->addFixture($this->get('sylius.fixture.taxon'));
        $instance->addFixture($this->get('sylius.fixture.product'));
        $instance->addFixture($this->get('sylius.fixture.mug_product'));
        $instance->addFixture($this->get('sylius.fixture.sticker_product'));
        $instance->addFixture($this->get('sylius.fixture.book_product'));
        $instance->addFixture($this->get('sylius.fixture.tshirt_product'));
        $instance->addFixture($this->get('sylius.fixture.order'));
        $instance->addFixture($this->get('sylius.fixture.address'));

        return $instance;
    }

    /**
     * Gets the 'sylius_fixtures.logger' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Monolog\Logger A Monolog\Logger instance
     */
    protected function getSyliusFixtures_LoggerService()
    {
        return $this->services['sylius_fixtures.logger'] = new \Monolog\Logger('sylius_fixtures', array(0 => $this->get('sylius_fixtures.logger.handler.console')));
    }

    /**
     * Gets the 'sylius_fixtures.logger.formatter.console' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Formatter\ConsoleFormatter A Symfony\Bridge\Monolog\Formatter\ConsoleFormatter instance
     */
    protected function getSyliusFixtures_Logger_Formatter_ConsoleService()
    {
        return $this->services['sylius_fixtures.logger.formatter.console'] = new \Symfony\Bridge\Monolog\Formatter\ConsoleFormatter('%message% %context% %extra%
');
    }

    /**
     * Gets the 'sylius_fixtures.logger.handler.console' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Monolog\Handler\ConsoleHandler A Symfony\Bridge\Monolog\Handler\ConsoleHandler instance
     */
    protected function getSyliusFixtures_Logger_Handler_ConsoleService()
    {
        $this->services['sylius_fixtures.logger.handler.console'] = $instance = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, array(32 => 250, 64 => 200));

        $instance->setFormatter($this->get('sylius_fixtures.logger.formatter.console'));

        return $instance;
    }

    /**
     * Gets the 'sylius_fixtures.suite_loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FixturesBundle\Loader\HookableSuiteLoader A Sylius\Bundle\FixturesBundle\Loader\HookableSuiteLoader instance
     */
    protected function getSyliusFixtures_SuiteLoaderService()
    {
        return $this->services['sylius_fixtures.suite_loader'] = new \Sylius\Bundle\FixturesBundle\Loader\HookableSuiteLoader(new \Sylius\Bundle\FixturesBundle\Loader\SuiteLoader($this->get('sylius_fixtures.fixture_loader')));
    }

    /**
     * Gets the 'sylius_fixtures.suite_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\FixturesBundle\Suite\LazySuiteRegistry A Sylius\Bundle\FixturesBundle\Suite\LazySuiteRegistry instance
     */
    protected function getSyliusFixtures_SuiteRegistryService()
    {
        $a = new \Sylius\Bundle\FixturesBundle\Listener\ListenerRegistry();
        $a->addListener(new \Sylius\Bundle\FixturesBundle\Listener\ORMPurgerListener($this->get('doctrine')));
        $a->addListener(new \Sylius\Bundle\FixturesBundle\Listener\LoggerListener($this->get('sylius_fixtures.logger')));

        $this->services['sylius_fixtures.suite_registry'] = $instance = new \Sylius\Bundle\FixturesBundle\Suite\LazySuiteRegistry(new \Sylius\Bundle\FixturesBundle\Suite\SuiteFactory($this->get('sylius_fixtures.fixture_registry'), $a, new \Symfony\Component\Config\Definition\Processor()));

        $instance->addSuite('default', array('listeners' => array('orm_purger' => array('priority' => 0, 'options' => array(0 => array())), 'logger' => array('priority' => 0, 'options' => array(0 => array()))), 'fixtures' => array('locale' => array('priority' => 0, 'options' => array(0 => array()), 'name' => 'locale'), 'currency' => array('options' => array(0 => array('currencies' => array(0 => 'USD'))), 'priority' => 0, 'name' => 'currency'), 'geographical' => array('options' => array(0 => array('countries' => array(0 => 'US'), 'zones' => array('US' => array('name' => 'United States of America', 'countries' => array(0 => 'US'))))), 'priority' => 0, 'name' => 'geographical'), 'channel' => array('options' => array(0 => array('custom' => array('us_web_store' => array('name' => 'US Web Store', 'code' => 'US_WEB', 'locales' => array(0 => 'en_US'), 'currencies' => array(0 => 'USD'), 'enabled' => true, 'hostname' => 'localhost')))), 'priority' => 0, 'name' => 'channel'), 'payment_method' => array('options' => array(0 => array('custom' => array('cash_on_delivery' => array('code' => 'cash_on_delivery', 'name' => 'Cash on delivery', 'channels' => array(0 => 'US_WEB')), 'bank_transfer' => array('code' => 'bank_transfer', 'name' => 'Bank transfer', 'channels' => array(0 => 'US_WEB'), 'enabled' => true)))), 'priority' => 0, 'name' => 'payment_method'), 'shipping_method' => array('options' => array(0 => array('custom' => array('ups' => array('code' => 'ups', 'name' => 'UPS', 'enabled' => true, 'channels' => array(0 => 'US_WEB')), 'dhl_express' => array('code' => 'dhl_express', 'name' => 'DHL Express', 'channels' => array(0 => 'US_WEB')), 'fedex' => array('code' => 'fedex', 'name' => 'FedEx', 'channels' => array(0 => 'US_WEB'))))), 'priority' => 0, 'name' => 'shipping_method'), 'customer_group' => array('options' => array(0 => array('custom' => array('retail' => array('code' => 'retail', 'name' => 'Retail'), 'wholesale' => array('code' => 'wholesale', 'name' => 'Wholesale')))), 'priority' => 0, 'name' => 'customer_group'), 'shop_user' => array('name' => 'shop_user', 'options' => array(0 => array('random' => 20, 'custom' => array(0 => array('email' => 'shop@example.com', 'first_name' => 'John', 'last_name' => 'Doe', 'password' => 'sylius')))), 'priority' => 0), 'admin_user' => array('name' => 'admin_user', 'options' => array(0 => array('custom' => array(0 => array('email' => 'sylius@example.com', 'username' => 'sylius', 'password' => 'sylius', 'enabled' => true, 'locale_code' => 'en_US', 'first_name' => 'John', 'last_name' => 'Doe'), 1 => array('email' => 'api@example.com', 'username' => 'api', 'password' => 'sylius-api', 'enabled' => true, 'locale_code' => 'en_US', 'first_name' => 'Luke', 'last_name' => 'Brushwood', 'api' => true)))), 'priority' => 0), 'tax_category' => array('options' => array(0 => array('custom' => array('clothing' => array('code' => 'clothing', 'name' => 'Clothing'), 'books' => array('code' => 'books', 'name' => 'Books'), 'other' => array('code' => 'other', 'name' => 'Other')))), 'priority' => 0, 'name' => 'tax_category'), 'tax_rate' => array('options' => array(0 => array('custom' => array('clothing_tax' => array('code' => 'clothing_sales_tax_7', 'name' => 'Clothing Sales Tax 7%', 'zone' => 'US', 'category' => 'clothing', 'amount' => 0.070000000000000007), 'books_tax' => array('code' => 'books_sales_tax_2', 'name' => 'Books Sales Tax 2%', 'zone' => 'US', 'category' => 'books', 'amount' => 0.02), 'default_sales_tax' => array('code' => 'sales_tax_20', 'name' => 'Sales Tax 20%', 'zone' => 'US', 'category' => 'other', 'amount' => 0.20000000000000001)))), 'priority' => 0, 'name' => 'tax_rate'), 'promotion' => array('options' => array(0 => array('custom' => array('christmas' => array('code' => 'christmas', 'name' => 'Christmas', 'channels' => array(0 => 'US_WEB')), 'new_year' => array('code' => 'new_year', 'name' => 'New Year', 'usage_limit' => 10, 'priority' => 2, 'starts_at' => '-7 day', 'ends_at' => '7 day', 'channels' => array(0 => 'US_WEB'), 'rules' => array(0 => array('type' => 'item_total', 'configuration' => array('US_WEB' => array('amount' => 100.0)))), 'actions' => array(0 => array('type' => 'order_fixed_discount', 'configuration' => array('US_WEB' => array('amount' => 10.0)))))))), 'priority' => 0, 'name' => 'promotion'), 'mug_product' => array('options' => array(0 => array('amount' => 15)), 'priority' => 0, 'name' => 'mug_product'), 'sticker_product' => array('options' => array(0 => array('amount' => 15)), 'priority' => 0, 'name' => 'sticker_product'), 'book_product' => array('options' => array(0 => array('amount' => 15)), 'priority' => 0, 'name' => 'book_product'), 'tshirt_product' => array('options' => array(0 => array('amount' => 15)), 'priority' => 0, 'name' => 'tshirt_product'), 'product_review' => array('options' => array(0 => array('random' => 40)), 'priority' => 0, 'name' => 'product_review'), 'similar_product_association' => array('options' => array(0 => array('amount' => 10)), 'priority' => 0, 'name' => 'similar_product_association'), 'order' => array('options' => array(0 => array('amount' => 20)), 'priority' => 0, 'name' => 'order'), 'address' => array('options' => array(0 => array('random' => 10)), 'priority' => 0, 'name' => 'address'))));

        return $instance;
    }

    /**
     * Gets the 'sylus.payum_action.offline.status' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\PayumBundle\Action\Offline\StatusAction A Sylius\Bundle\PayumBundle\Action\Offline\StatusAction instance
     */
    protected function getSylus_PayumAction_Offline_StatusService()
    {
        return $this->services['sylus.payum_action.offline.status'] = new \Sylius\Bundle\PayumBundle\Action\Offline\StatusAction();
    }

    /**
     * Gets the 'templating' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\TwigEngine A Symfony\Bundle\TwigBundle\TwigEngine instance
     */
    protected function getTemplatingService()
    {
        return $this->services['templating'] = new \Symfony\Bundle\TwigBundle\TwigEngine($this->get('twig'), $this->get('templating.name_parser'), ${($_ = isset($this->services['sylius.theme.templating.file_locator']) ? $this->services['sylius.theme.templating.file_locator'] : $this->getSylius_Theme_Templating_FileLocatorService()) && false ?: '_'});
    }

    /**
     * Gets the 'templating.filename_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser A Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser instance
     */
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }

    /**
     * Gets the 'templating.helper.logout_url' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper A Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper instance
     */
    protected function getTemplating_Helper_LogoutUrlService()
    {
        return $this->services['templating.helper.logout_url'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper(${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'});
    }

    /**
     * Gets the 'templating.helper.security' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper A Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper instance
     */
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'templating.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader A Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader instance
     */
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader(${($_ = isset($this->services['sylius.theme.templating.file_locator']) ? $this->services['sylius.theme.templating.file_locator'] : $this->getSylius_Theme_Templating_FileLocatorService()) && false ?: '_'});
    }

    /**
     * Gets the 'templating.name_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Templating\TemplateNameParser A Sylius\Bundle\ThemeBundle\Templating\TemplateNameParser instance
     */
    protected function getTemplating_NameParserService()
    {
        $a = $this->get('kernel');

        return $this->services['templating.name_parser'] = new \Sylius\Bundle\ThemeBundle\Templating\TemplateNameParser(new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser($a), $a);
    }

    /**
     * Gets the 'test.client' service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Client A Symfony\Bundle\FrameworkBundle\Client instance
     */
    protected function getTest_ClientService()
    {
        return new \Symfony\Bundle\FrameworkBundle\Client($this->get('kernel'), array(), new \Symfony\Component\BrowserKit\History(), new \Symfony\Component\BrowserKit\CookieJar());
    }

    /**
     * Gets the 'test.client.cookiejar' service.
     *
     * @return \Symfony\Component\BrowserKit\CookieJar A Symfony\Component\BrowserKit\CookieJar instance
     */
    protected function getTest_Client_CookiejarService()
    {
        return new \Symfony\Component\BrowserKit\CookieJar();
    }

    /**
     * Gets the 'test.client.history' service.
     *
     * @return \Symfony\Component\BrowserKit\History A Symfony\Component\BrowserKit\History instance
     */
    protected function getTest_Client_HistoryService()
    {
        return new \Symfony\Component\BrowserKit\History();
    }

    /**
     * Gets the 'test.session.listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener A Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener instance
     */
    protected function getTest_Session_ListenerService()
    {
        return $this->services['test.session.listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener($this);
    }

    /**
     * Gets the 'translation.dumper.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\CsvFileDumper A Symfony\Component\Translation\Dumper\CsvFileDumper instance
     */
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }

    /**
     * Gets the 'translation.dumper.ini' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\IniFileDumper A Symfony\Component\Translation\Dumper\IniFileDumper instance
     */
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }

    /**
     * Gets the 'translation.dumper.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\JsonFileDumper A Symfony\Component\Translation\Dumper\JsonFileDumper instance
     */
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }

    /**
     * Gets the 'translation.dumper.mo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\MoFileDumper A Symfony\Component\Translation\Dumper\MoFileDumper instance
     */
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }

    /**
     * Gets the 'translation.dumper.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\PhpFileDumper A Symfony\Component\Translation\Dumper\PhpFileDumper instance
     */
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }

    /**
     * Gets the 'translation.dumper.po' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\PoFileDumper A Symfony\Component\Translation\Dumper\PoFileDumper instance
     */
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }

    /**
     * Gets the 'translation.dumper.qt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\QtFileDumper A Symfony\Component\Translation\Dumper\QtFileDumper instance
     */
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }

    /**
     * Gets the 'translation.dumper.res' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\IcuResFileDumper A Symfony\Component\Translation\Dumper\IcuResFileDumper instance
     */
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }

    /**
     * Gets the 'translation.dumper.xliff' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\XliffFileDumper A Symfony\Component\Translation\Dumper\XliffFileDumper instance
     */
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }

    /**
     * Gets the 'translation.dumper.yml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Dumper\YamlFileDumper A Symfony\Component\Translation\Dumper\YamlFileDumper instance
     */
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }

    /**
     * Gets the 'translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Extractor\ChainExtractor A Symfony\Component\Translation\Extractor\ChainExtractor instance
     */
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();

        $instance->addExtractor('php', $this->get('translation.extractor.php'));
        $instance->addExtractor('twig', $this->get('twig.translation.extractor'));

        return $instance;
    }

    /**
     * Gets the 'translation.extractor.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor A Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor instance
     */
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }

    /**
     * Gets the 'translation.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader A Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader instance
     */
    protected function getTranslation_LoaderService()
    {
        $a = $this->get('translation.loader.xliff');

        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();

        $instance->addLoader('php', $this->get('translation.loader.php'));
        $instance->addLoader('yml', $this->get('translation.loader.yml'));
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', $this->get('translation.loader.po'));
        $instance->addLoader('mo', $this->get('translation.loader.mo'));
        $instance->addLoader('ts', $this->get('translation.loader.qt'));
        $instance->addLoader('csv', $this->get('translation.loader.csv'));
        $instance->addLoader('res', $this->get('translation.loader.res'));
        $instance->addLoader('dat', $this->get('translation.loader.dat'));
        $instance->addLoader('ini', $this->get('translation.loader.ini'));
        $instance->addLoader('json', $this->get('translation.loader.json'));

        return $instance;
    }

    /**
     * Gets the 'translation.loader.csv' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\CsvFileLoader A Symfony\Component\Translation\Loader\CsvFileLoader instance
     */
    public function getTranslation_Loader_CsvService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.csv'] = new SymfonyComponentTranslationLoaderCsvFileLoader_00000000425536b2000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_CsvService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }

    /**
     * Gets the 'translation.loader.dat' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\IcuDatFileLoader A Symfony\Component\Translation\Loader\IcuDatFileLoader instance
     */
    public function getTranslation_Loader_DatService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.dat'] = new SymfonyComponentTranslationLoaderIcuDatFileLoader_00000000425536ac000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_DatService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }

    /**
     * Gets the 'translation.loader.ini' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\IniFileLoader A Symfony\Component\Translation\Loader\IniFileLoader instance
     */
    public function getTranslation_Loader_IniService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.ini'] = new SymfonyComponentTranslationLoaderIniFileLoader_00000000425536af000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_IniService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\IniFileLoader();
    }

    /**
     * Gets the 'translation.loader.json' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\JsonFileLoader A Symfony\Component\Translation\Loader\JsonFileLoader instance
     */
    public function getTranslation_Loader_JsonService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.json'] = new SymfonyComponentTranslationLoaderJsonFileLoader_00000000425536ae000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_JsonService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }

    /**
     * Gets the 'translation.loader.mo' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\MoFileLoader A Symfony\Component\Translation\Loader\MoFileLoader instance
     */
    public function getTranslation_Loader_MoService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.mo'] = new SymfonyComponentTranslationLoaderMoFileLoader_00000000425536b0000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_MoService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\MoFileLoader();
    }

    /**
     * Gets the 'translation.loader.php' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\PhpFileLoader A Symfony\Component\Translation\Loader\PhpFileLoader instance
     */
    public function getTranslation_Loader_PhpService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.php'] = new SymfonyComponentTranslationLoaderPhpFileLoader_00000000425536b8000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_PhpService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }

    /**
     * Gets the 'translation.loader.po' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\PoFileLoader A Symfony\Component\Translation\Loader\PoFileLoader instance
     */
    public function getTranslation_Loader_PoService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.po'] = new SymfonyComponentTranslationLoaderPoFileLoader_00000000425536b4000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_PoService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\PoFileLoader();
    }

    /**
     * Gets the 'translation.loader.qt' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\QtFileLoader A Symfony\Component\Translation\Loader\QtFileLoader instance
     */
    public function getTranslation_Loader_QtService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.qt'] = new SymfonyComponentTranslationLoaderQtFileLoader_00000000425536b3000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_QtService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\QtFileLoader();
    }

    /**
     * Gets the 'translation.loader.res' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\IcuResFileLoader A Symfony\Component\Translation\Loader\IcuResFileLoader instance
     */
    public function getTranslation_Loader_ResService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.res'] = new SymfonyComponentTranslationLoaderIcuResFileLoader_00000000425536ad000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_ResService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }

    /**
     * Gets the 'translation.loader.xliff' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\XliffFileLoader A Symfony\Component\Translation\Loader\XliffFileLoader instance
     */
    public function getTranslation_Loader_XliffService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.xliff'] = new SymfonyComponentTranslationLoaderXliffFileLoader_00000000425536b6000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_XliffService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }

    /**
     * Gets the 'translation.loader.yml' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @param bool    $lazyLoad whether to try lazy-loading the service with a proxy
     *
     * @return \Symfony\Component\Translation\Loader\YamlFileLoader A Symfony\Component\Translation\Loader\YamlFileLoader instance
     */
    public function getTranslation_Loader_YmlService($lazyLoad = true)
    {
        if ($lazyLoad) {

            return $this->services['translation.loader.yml'] = new SymfonyComponentTranslationLoaderYamlFileLoader_00000000425536b7000000006249aceee5402f250da41f565fbc51797d001de6(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) {
                    $wrappedInstance = $this->getTranslation_Loader_YmlService(false);

                    $proxy->setProxyInitializer(null);

                    return true;
                }
            );
        }

        return new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }

    /**
     * Gets the 'translation.writer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\Writer\TranslationWriter A Symfony\Component\Translation\Writer\TranslationWriter instance
     */
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();

        $instance->addDumper('php', $this->get('translation.dumper.php'));
        $instance->addDumper('xlf', $this->get('translation.dumper.xliff'));
        $instance->addDumper('po', $this->get('translation.dumper.po'));
        $instance->addDumper('mo', $this->get('translation.dumper.mo'));
        $instance->addDumper('yml', $this->get('translation.dumper.yml'));
        $instance->addDumper('ts', $this->get('translation.dumper.qt'));
        $instance->addDumper('csv', $this->get('translation.dumper.csv'));
        $instance->addDumper('ini', $this->get('translation.dumper.ini'));
        $instance->addDumper('json', $this->get('translation.dumper.json'));
        $instance->addDumper('res', $this->get('translation.dumper.res'));

        return $instance;
    }

    /**
     * Gets the 'translator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Translation\LoggingTranslator A Symfony\Component\Translation\LoggingTranslator instance
     */
    protected function getTranslatorService()
    {
        return $this->services['translator'] = new \Symfony\Component\Translation\LoggingTranslator($this->get('translator.default'), $this->get('monolog.logger.translation'));
    }

    /**
     * Gets the 'translator.default' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Translation\ThemeAwareTranslator A Sylius\Bundle\ThemeBundle\Translation\ThemeAwareTranslator instance
     */
    protected function getTranslator_DefaultService()
    {
        $a = $this->get('translation.loader.xliff');

        $b = new \Sylius\Bundle\ThemeBundle\Translation\Translator(new \Sylius\Bundle\ThemeBundle\Translation\Provider\Loader\TranslatorLoaderProvider(array('php' => $this->get('translation.loader.php'), 'yml' => $this->get('translation.loader.yml'), 'xlf' => $a, 'xliff' => $a, 'po' => $this->get('translation.loader.po'), 'mo' => $this->get('translation.loader.mo'), 'ts' => $this->get('translation.loader.qt'), 'csv' => $this->get('translation.loader.csv'), 'res' => $this->get('translation.loader.res'), 'dat' => $this->get('translation.loader.dat'), 'ini' => $this->get('translation.loader.ini'), 'json' => $this->get('translation.loader.json'))), new \Sylius\Bundle\ThemeBundle\Translation\Provider\Resource\CompositeTranslatorResourceProvider(array(0 => new \Sylius\Bundle\ThemeBundle\Translation\Provider\Resource\TranslatorResourceProvider(array(0 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf'), 1 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf'), 2 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf'), 3 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.da.yml'), 4 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.da.yml'), 5 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.da.yml'), 6 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.da.yml'), 7 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.da.yml'), 8 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.da.yml'), 9 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.da.yml'), 10 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.da.yml'), 11 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.da.yml'), 12 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.da.yml'), 13 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.da.yml'), 14 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.da.yml'), 15 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.da.yml'), 16 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.da.yml'), 17 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.da.yml'), 18 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.da.yml'), 19 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.da.yml'), 20 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.da.yml'), 21 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.da.yml'), 22 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.da.yml'), 23 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.da.yml'), 24 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.da.yml'), 25 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.da.yml'), 26 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.da.yml'), 27 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.da.yml'), 28 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.da.yml'), 29 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.da.yml'), 30 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.da.yml'), 31 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.da.yml'), 32 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.da.yml'), 33 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.da.xliff'), 34 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.da.yml'), 35 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.da.yml'), 36 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.da.yml'), 37 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf'), 38 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf'), 39 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.vi.yml'), 40 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.vi.yml'), 41 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.vi.yml'), 42 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.vi.yml'), 43 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.vi.yml'), 44 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.vi.yml'), 45 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.vi.yml'), 46 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.vi.yml'), 47 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.vi.yml'), 48 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.vi.yml'), 49 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.vi.yml'), 50 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.vi.yml'), 51 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.vi.yml'), 52 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.vi.yml'), 53 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.vi.yml'), 54 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.vi.yml'), 55 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.vi.yml'), 56 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.vi.yml'), 57 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.vi.yml'), 58 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.vi.yml'), 59 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.vi.yml'), 60 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf'), 61 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.zh_TW.yml'), 62 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.zh_TW.yml'), 63 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.zh_TW.yml'), 64 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.zh_TW.yml'), 65 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.zh_TW.yml'), 66 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.zh_TW.yml'), 67 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf'), 68 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf'), 69 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf'), 70 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.no.yml'), 71 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.no.yml'), 72 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.no.yml'), 73 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.no.yml'), 74 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.no.yml'), 75 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.no.yml'), 76 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.no.yml'), 77 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.no.yml'), 78 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.no.yml'), 79 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.no.yml'), 80 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.no.yml'), 81 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.no.yml'), 82 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.no.yml'), 83 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.no.yml'), 84 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.no.yml'), 85 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.no.yml'), 86 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.no.yml'), 87 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.no.yml'), 88 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.no.yml'), 89 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.no.yml'), 90 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.no.yml'), 91 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.no.yml'), 92 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.no.yml'), 93 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.no.yml'), 94 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.no.yml'), 95 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.no.yml'), 96 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.no.yml'), 97 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.no.yml'), 98 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.no.yml'), 99 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.no.yml'), 100 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.no.yml'), 101 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.no.yml'), 102 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.no.yml'), 103 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.no.yml'), 104 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.no.yml'), 105 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf'), 106 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf'), 107 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf'), 108 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.en.yml'), 109 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.en.yml'), 110 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.en.yml'), 111 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.en.yml'), 112 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.en.yml'), 113 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.en.yml'), 114 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.en.yml'), 115 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.en.yml'), 116 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.en.yml'), 117 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.en.yml'), 118 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.en.yml'), 119 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.en.yml'), 120 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.en.yml'), 121 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.en.yml'), 122 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.en.yml'), 123 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.en.yml'), 124 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.en.yml'), 125 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.en.yml'), 126 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.en.yml'), 127 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.en.yml'), 128 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.en.yml'), 129 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.en.yml'), 130 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.en.yml'), 131 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.en.yml'), 132 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.en.yml'), 133 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.en.yml'), 134 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.en.yml'), 135 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.en.yml'), 136 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.en.yml'), 137 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.en.yml'), 138 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.en.yml'), 139 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.en.yml'), 140 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.en.yml'), 141 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.en.yml'), 142 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.en.yml'), 143 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.en.yml'), 144 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.en.yml'), 145 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.en.yml'), 146 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.en.yml'), 147 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.en.yml'), 148 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.en.yml'), 149 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.en.yml'), 150 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.en.yml'), 151 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff'), 152 => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.en.xliff'), 153 => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/translations/validators.en.yml'), 154 => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/translations/PayumBundle.en.yml'), 155 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.en.xliff'), 156 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.en.yml'), 157 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.en.yml'), 158 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.en.yml'), 159 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.en.yml'), 160 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf'), 161 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf'), 162 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf'), 163 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf'), 164 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf'), 165 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sr_Latn.xliff'), 166 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf'), 167 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.sq.yml'), 168 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.sq.yml'), 169 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.sq.yml'), 170 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.sq.yml'), 171 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.sq.yml'), 172 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.sq.yml'), 173 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.sq.yml'), 174 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.sq.yml'), 175 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.sq.yml'), 176 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.sq.yml'), 177 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.sq.yml'), 178 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.sq.yml'), 179 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.sq.yml'), 180 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.sq.yml'), 181 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.sq.yml'), 182 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.sq.yml'), 183 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.sq.yml'), 184 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.sq.yml'), 185 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.sq.yml'), 186 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.sq.yml'), 187 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.sq.yml'), 188 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.sq.yml'), 189 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.sq.yml'), 190 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.sq.yml'), 191 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.sq.yml'), 192 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.sq.yml'), 193 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.sq.yml'), 194 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.sq.yml'), 195 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.sq.yml'), 196 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.sq.yml'), 197 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.sq.yml'), 198 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.sq.yml'), 199 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.sq.yml'), 200 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.sq.yml'), 201 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.sq.yml'), 202 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.sq.yml'), 203 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.sq.yml'), 204 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.sq.yml'), 205 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf'), 206 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf'), 207 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf'), 208 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.ca.yml'), 209 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.ca.yml'), 210 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.ca.yml'), 211 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.ca.yml'), 212 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.ca.yml'), 213 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ca.yml'), 214 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.ca.yml'), 215 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.ca.yml'), 216 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.ca.yml'), 217 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.ca.yml'), 218 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ca.yml'), 219 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.ca.yml'), 220 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ca.yml'), 221 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.ca.yml'), 222 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.ca.yml'), 223 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.ca.yml'), 224 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.ca.yml'), 225 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ca.yml'), 226 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.ca.yml'), 227 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.ca.yml'), 228 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ca.yml'), 229 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.ca.yml'), 230 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff'), 231 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ca.xliff'), 232 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ca.yml'), 233 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.ca.yml'), 234 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf'), 235 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf'), 236 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.th.yml'), 237 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.th.yml'), 238 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.th.yml'), 239 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.th.yml'), 240 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.th.yml'), 241 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.th.yml'), 242 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.th.yml'), 243 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.th.yml'), 244 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.th.yml'), 245 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.th.yml'), 246 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.th.yml'), 247 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.th.yml'), 248 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.th.yml'), 249 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.th.yml'), 250 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.th.yml'), 251 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.th.yml'), 252 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.th.yml'), 253 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.th.yml'), 254 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.th.yml'), 255 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.th.yml'), 256 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.th.yml'), 257 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.th.yml'), 258 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.th.yml'), 259 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.th.yml'), 260 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.th.yml'), 261 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.th.yml'), 262 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.th.yml'), 263 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.th.yml'), 264 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.th.yml'), 265 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.th.yml'), 266 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.th.yml'), 267 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.th.yml'), 268 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.th.yml'), 269 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.th.yml'), 270 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.th.yml'), 271 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.th.yml'), 272 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.th.yml'), 273 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.th.yml'), 274 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.th.yml'), 275 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.th.yml'), 276 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.th.yml'), 277 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.th.xliff'), 278 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.th.yml'), 279 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.th.yml'), 280 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.th.yml'), 281 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf'), 282 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf'), 283 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf'), 284 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff'), 285 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf'), 286 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf'), 287 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf'), 288 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.de.yml'), 289 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.de.yml'), 290 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.de.yml'), 291 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.de.yml'), 292 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.de.yml'), 293 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.de.yml'), 294 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.de.yml'), 295 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.de.yml'), 296 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.de.yml'), 297 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.de.yml'), 298 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.de.yml'), 299 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.de.yml'), 300 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.de.yml'), 301 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.de.yml'), 302 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.de.yml'), 303 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.de.yml'), 304 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.de.yml'), 305 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.de.yml'), 306 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.de.yml'), 307 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.de.yml'), 308 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.de.yml'), 309 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.de.yml'), 310 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.de.yml'), 311 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.de.yml'), 312 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.de.yml'), 313 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.de.yml'), 314 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.de.yml'), 315 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.de.yml'), 316 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.de.yml'), 317 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.de.yml'), 318 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.de.yml'), 319 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.de.yml'), 320 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.de.yml'), 321 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.de.yml'), 322 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.de.yml'), 323 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.de.yml'), 324 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.de.yml'), 325 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.de.yml'), 326 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.de.yml'), 327 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.de.yml'), 328 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.de.yml'), 329 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.de.yml'), 330 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff'), 331 => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.de.xliff'), 332 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.de.xliff'), 333 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.de.yml'), 334 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.de.yml'), 335 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.de.yml'), 336 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.de.yml'), 337 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf'), 338 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf'), 339 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf'), 340 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf'), 341 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.it.yml'), 342 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.it.yml'), 343 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.it.yml'), 344 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.it.yml'), 345 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.it.yml'), 346 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.it.yml'), 347 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.it.yml'), 348 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.it.yml'), 349 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.it.yml'), 350 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.it.yml'), 351 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.it.yml'), 352 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.it.yml'), 353 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.it.yml'), 354 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.it.yml'), 355 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.it.yml'), 356 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.it.yml'), 357 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.it.yml'), 358 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.it.yml'), 359 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.it.yml'), 360 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.it.yml'), 361 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.it.yml'), 362 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.it.yml'), 363 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.it.yml'), 364 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.it.yml'), 365 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.it.yml'), 366 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.it.yml'), 367 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.it.yml'), 368 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.it.yml'), 369 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.it.yml'), 370 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.it.yml'), 371 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.it.yml'), 372 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.it.yml'), 373 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.it.yml'), 374 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.it.yml'), 375 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.it.yml'), 376 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.it.yml'), 377 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.it.yml'), 378 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.it.yml'), 379 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.it.yml'), 380 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.it.yml'), 381 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.it.yml'), 382 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff'), 383 => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.it.xliff'), 384 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.it.xliff'), 385 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.it.yml'), 386 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.it.yml'), 387 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.it.yml'), 388 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf'), 389 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf'), 390 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf'), 391 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.pl.yml'), 392 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.pl.yml'), 393 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.pl.yml'), 394 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.pl.yml'), 395 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.pl.yml'), 396 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.pl.yml'), 397 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.pl.yml'), 398 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.pl.yml'), 399 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.pl.yml'), 400 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.pl.yml'), 401 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.pl.yml'), 402 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.pl.yml'), 403 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.pl.yml'), 404 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.pl.yml'), 405 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.pl.yml'), 406 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.pl.yml'), 407 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.pl.yml'), 408 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.pl.yml'), 409 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.pl.yml'), 410 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.pl.yml'), 411 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.pl.yml'), 412 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.pl.yml'), 413 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.pl.yml'), 414 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.pl.yml'), 415 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.pl.yml'), 416 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.pl.yml'), 417 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.pl.yml'), 418 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.pl.yml'), 419 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.pl.yml'), 420 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.pl.yml'), 421 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.pl.yml'), 422 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.pl.yml'), 423 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.pl.yml'), 424 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.pl.yml'), 425 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.pl.yml'), 426 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.pl.yml'), 427 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.pl.yml'), 428 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.pl.yml'), 429 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.pl.yml'), 430 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.pl.yml'), 431 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.pl.yml'), 432 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.pl.yml'), 433 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.pl.yml'), 434 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff'), 435 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.pl.xliff'), 436 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.pl.yml'), 437 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.pl.yml'), 438 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.pl.yml'), 439 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.pl.yml'), 440 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf'), 441 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf'), 442 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf'), 443 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.ja.yml'), 444 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ja.yml'), 445 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.ja.yml'), 446 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.ja.yml'), 447 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.ja.yml'), 448 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.ja.yml'), 449 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ja.yml'), 450 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ja.yml'), 451 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.ja.yml'), 452 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.ja.yml'), 453 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.ja.yml'), 454 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.ja.yml'), 455 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ja.yml'), 456 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.ja.yml'), 457 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ja.yml'), 458 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.ja.yml'), 459 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.ja.yml'), 460 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff'), 461 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ja.yml'), 462 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.ja.yml'), 463 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.ja.yml'), 464 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf'), 465 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf'), 466 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf'), 467 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.cs.yml'), 468 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.cs.yml'), 469 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.cs.yml'), 470 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.cs.yml'), 471 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.cs.yml'), 472 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.cs.yml'), 473 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.cs.yml'), 474 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.cs.yml'), 475 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.cs.yml'), 476 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.cs.yml'), 477 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.cs.yml'), 478 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.cs.yml'), 479 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.cs.yml'), 480 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.cs.yml'), 481 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.cs.yml'), 482 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.cs.yml'), 483 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.cs.yml'), 484 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.cs.yml'), 485 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.cs.yml'), 486 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.cs.yml'), 487 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.cs.yml'), 488 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.cs.yml'), 489 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.cs.yml'), 490 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.cs.yml'), 491 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.cs.yml'), 492 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.cs.yml'), 493 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.cs.yml'), 494 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.cs.yml'), 495 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.cs.yml'), 496 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.cs.yml'), 497 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.cs.yml'), 498 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.cs.yml'), 499 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.cs.yml'), 500 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.cs.yml'), 501 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.cs.yml'), 502 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.cs.yml'), 503 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff'), 504 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.cs.xliff'), 505 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.cs.yml'), 506 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.cs.yml'), 507 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.cs.yml'), 508 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf'), 509 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf'), 510 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf'), 511 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sr_Cyrl.xliff'), 512 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf'), 513 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf'), 514 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf'), 515 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf'), 516 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.pt_BR.yml'), 517 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.pt_BR.yml'), 518 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.pt_BR.yml'), 519 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.pt_BR.yml'), 520 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.pt_BR.yml'), 521 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.pt_BR.yml'), 522 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.pt_BR.yml'), 523 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.pt_BR.yml'), 524 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.pt_BR.yml'), 525 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.pt_BR.yml'), 526 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.pt_BR.yml'), 527 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.pt_BR.yml'), 528 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.pt_BR.yml'), 529 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.pt_BR.yml'), 530 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.pt_BR.yml'), 531 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.pt_BR.yml'), 532 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.pt_BR.yml'), 533 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.pt_BR.yml'), 534 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.pt_BR.yml'), 535 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.pt_BR.yml'), 536 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.pt_BR.yml'), 537 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.pt_BR.yml'), 538 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.pt_BR.yml'), 539 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.pt_BR.yml'), 540 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.pt_BR.yml'), 541 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.pt_BR.yml'), 542 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.pt_BR.yml'), 543 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.pt_BR.yml'), 544 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.pt_BR.yml'), 545 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.pt_BR.yml'), 546 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.pt_BR.yml'), 547 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.pt_BR.yml'), 548 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.pt_BR.yml'), 549 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.pt_BR.yml'), 550 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.pt_BR.yml'), 551 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.pt_BR.yml'), 552 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.pt_BR.yml'), 553 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.pt_BR.yml'), 554 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.pt_BR.yml'), 555 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.pt_BR.yml'), 556 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff'), 557 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.pt_BR.yml'), 558 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.pt_BR.yml'), 559 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.pt_BR.yml'), 560 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf'), 561 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf'), 562 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf'), 563 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.hu.yml'), 564 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.hu.yml'), 565 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.hu.yml'), 566 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.hu.yml'), 567 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.hu.yml'), 568 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.hu.yml'), 569 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.hu.yml'), 570 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.hu.yml'), 571 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.hu.yml'), 572 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.hu.yml'), 573 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.hu.yml'), 574 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.hu.yml'), 575 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.hu.yml'), 576 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.hu.yml'), 577 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.hu.yml'), 578 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.hu.yml'), 579 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.hu.yml'), 580 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.hu.yml'), 581 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.hu.yml'), 582 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.hu.yml'), 583 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.hu.yml'), 584 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.hu.yml'), 585 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.hu.yml'), 586 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.hu.yml'), 587 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.hu.yml'), 588 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.hu.yml'), 589 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.hu.yml'), 590 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.hu.yml'), 591 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.hu.yml'), 592 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.hu.yml'), 593 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.hu.yml'), 594 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.hu.yml'), 595 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.hu.yml'), 596 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.hu.yml'), 597 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.hu.yml'), 598 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff'), 599 => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.hu.xliff'), 600 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.hu.yml'), 601 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.hu.yml'), 602 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.hu.yml'), 603 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf'), 604 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf'), 605 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf'), 606 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.ru.yml'), 607 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.ru.yml'), 608 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.ru.yml'), 609 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.ru.yml'), 610 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.ru.yml'), 611 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.ru.yml'), 612 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.ru.yml'), 613 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.ru.yml'), 614 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.ru.yml'), 615 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.ru.yml'), 616 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.ru.yml'), 617 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ru.yml'), 618 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.ru.yml'), 619 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.ru.yml'), 620 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.ru.yml'), 621 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.ru.yml'), 622 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.ru.yml'), 623 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.ru.yml'), 624 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.ru.yml'), 625 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.ru.yml'), 626 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ru.yml'), 627 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.ru.yml'), 628 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.ru.yml'), 629 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ru.yml'), 630 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.ru.yml'), 631 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.ru.yml'), 632 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.ru.yml'), 633 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.ru.yml'), 634 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.ru.yml'), 635 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.ru.yml'), 636 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.ru.yml'), 637 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.ru.yml'), 638 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ru.yml'), 639 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.ru.yml'), 640 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.ru.yml'), 641 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.ru.yml'), 642 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.ru.yml'), 643 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ru.yml'), 644 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.ru.yml'), 645 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.ru.yml'), 646 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.ru.yml'), 647 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.ru.yml'), 648 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff'), 649 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ru.xliff'), 650 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ru.yml'), 651 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.ru.yml'), 652 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.ru.yml'), 653 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.ru.yml'), 654 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf'), 655 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf'), 656 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.tr.yml'), 657 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.tr.yml'), 658 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.tr.yml'), 659 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.tr.yml'), 660 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.tr.yml'), 661 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.tr.yml'), 662 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.tr.yml'), 663 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.tr.yml'), 664 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.tr.yml'), 665 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.tr.yml'), 666 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.tr.yml'), 667 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.tr.yml'), 668 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.tr.yml'), 669 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.tr.yml'), 670 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.tr.yml'), 671 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.tr.yml'), 672 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.tr.yml'), 673 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.tr.yml'), 674 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.tr.yml'), 675 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.tr.yml'), 676 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.tr.yml'), 677 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.tr.yml'), 678 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.tr.yml'), 679 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.tr.yml'), 680 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.tr.yml'), 681 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.tr.yml'), 682 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.tr.yml'), 683 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.tr.yml'), 684 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.tr.yml'), 685 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.tr.yml'), 686 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.tr.yml'), 687 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.tr.yml'), 688 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.tr.yml'), 689 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.tr.yml'), 690 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.tr.yml'), 691 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.tr.xliff'), 692 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.tr.yml'), 693 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.tr.yml'), 694 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.tr.yml'), 695 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf'), 696 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf'), 697 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.et.yml'), 698 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.et.yml'), 699 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.et.yml'), 700 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.et.yml'), 701 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.et.yml'), 702 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.et.yml'), 703 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.et.yml'), 704 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.et.yml'), 705 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf'), 706 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf'), 707 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf'), 708 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.zh_CN.yml'), 709 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.zh_CN.yml'), 710 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.zh_CN.yml'), 711 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.zh_CN.yml'), 712 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.zh_CN.yml'), 713 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.zh_CN.yml'), 714 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.zh_CN.yml'), 715 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.zh_CN.yml'), 716 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.zh_CN.yml'), 717 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.zh_CN.yml'), 718 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.zh_CN.yml'), 719 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.zh_CN.yml'), 720 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.zh_CN.yml'), 721 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.zh_CN.yml'), 722 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.zh_CN.yml'), 723 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.zh_CN.yml'), 724 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.zh_CN.yml'), 725 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.zh_CN.yml'), 726 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.zh_CN.yml'), 727 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.zh_CN.yml'), 728 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.zh_CN.yml'), 729 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.zh_CN.yml'), 730 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.zh_CN.yml'), 731 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.zh_CN.yml'), 732 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.zh_CN.yml'), 733 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.zh_CN.yml'), 734 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.zh_CN.yml'), 735 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.zh_CN.yml'), 736 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.zh_CN.yml'), 737 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.zh_CN.yml'), 738 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.zh_CN.yml'), 739 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.zh_CN.yml'), 740 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.zh_CN.yml'), 741 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.zh_CN.yml'), 742 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.zh_CN.yml'), 743 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff'), 744 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.zh_CN.xliff'), 745 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.zh_CN.yml'), 746 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.zh_CN.yml'), 747 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.zh_CN.yml'), 748 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf'), 749 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf'), 750 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf'), 751 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf'), 752 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf'), 753 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.sl.yml'), 754 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.sl.yml'), 755 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.sl.yml'), 756 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.sl.yml'), 757 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.sl.yml'), 758 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.sl.yml'), 759 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.sl.yml'), 760 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.sl.yml'), 761 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.sl.yml'), 762 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.sl.yml'), 763 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.sl.yml'), 764 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.sl.yml'), 765 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.sl.yml'), 766 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.sl.yml'), 767 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.sl.yml'), 768 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.sl.yml'), 769 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.sl.yml'), 770 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.sl.yml'), 771 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.sl.yml'), 772 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.sl.yml'), 773 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.sl.yml'), 774 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.sl.yml'), 775 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.sl.yml'), 776 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.sl.yml'), 777 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.sl.yml'), 778 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.sl.yml'), 779 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.sl.yml'), 780 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.sl.yml'), 781 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.sl.yml'), 782 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.sl.yml'), 783 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.sl.yml'), 784 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.sl.yml'), 785 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.sl.yml'), 786 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.sl.yml'), 787 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.sl.yml'), 788 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff'), 789 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sl.xliff'), 790 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.sl.yml'), 791 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.sl.yml'), 792 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.sl.yml'), 793 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf'), 794 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf'), 795 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.pt.yml'), 796 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.pt.yml'), 797 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.pt.yml'), 798 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.pt.yml'), 799 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.pt.yml'), 800 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.pt.yml'), 801 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.pt.yml'), 802 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.pt.yml'), 803 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.pt.yml'), 804 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.pt.yml'), 805 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.pt.yml'), 806 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.pt.yml'), 807 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.pt.yml'), 808 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.pt.yml'), 809 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.pt.yml'), 810 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.pt.yml'), 811 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.pt.yml'), 812 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.pt.yml'), 813 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.pt.yml'), 814 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.pt.yml'), 815 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.pt.yml'), 816 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.pt.yml'), 817 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.pt.yml'), 818 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.pt.yml'), 819 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.pt.yml'), 820 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.pt.yml'), 821 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.pt.yml'), 822 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.pt.yml'), 823 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.pt.yml'), 824 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.pt.yml'), 825 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.pt.yml'), 826 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.pt.yml'), 827 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.pt.yml'), 828 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.pt.yml'), 829 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.pt.yml'), 830 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.pt.yml'), 831 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.pt.yml'), 832 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.pt.yml'), 833 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.pt.yml'), 834 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.pt.yml'), 835 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff'), 836 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.pt.xliff'), 837 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.pt.yml'), 838 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.pt.yml'), 839 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.pt.yml'), 840 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.pt.yml'), 841 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf'), 842 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf'), 843 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf'), 844 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.ar.yml'), 845 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.ar.yml'), 846 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.ar.yml'), 847 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.ar.yml'), 848 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.ar.yml'), 849 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ar.yml'), 850 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.ar.yml'), 851 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.ar.yml'), 852 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.ar.yml'), 853 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ar.yml'), 854 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ar.yml'), 855 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.ar.yml'), 856 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.ar.yml'), 857 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.ar.yml'), 858 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.ar.yml'), 859 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.ar.yml'), 860 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.ar.yml'), 861 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ar.yml'), 862 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.ar.yml'), 863 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ar.yml'), 864 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.ar.yml'), 865 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.ar.yml'), 866 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.ar.yml'), 867 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ar.xliff'), 868 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ar.xliff'), 869 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ar.yml'), 870 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.ar.yml'), 871 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf'), 872 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf'), 873 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf'), 874 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.fa.yml'), 875 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.fa.yml'), 876 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.fa.yml'), 877 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.fa.yml'), 878 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.fa.yml'), 879 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.fa.yml'), 880 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.fa.yml'), 881 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.fa.yml'), 882 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.fa.yml'), 883 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.fa.yml'), 884 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.fa.yml'), 885 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.fa.yml'), 886 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.fa.yml'), 887 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.fa.yml'), 888 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.fa.yml'), 889 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.fa.yml'), 890 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.fa.yml'), 891 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.fa.yml'), 892 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.fa.yml'), 893 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.fa.yml'), 894 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.fa.yml'), 895 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.fa.yml'), 896 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.fa.yml'), 897 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.fa.yml'), 898 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.fa.yml'), 899 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.fa.yml'), 900 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.fa.yml'), 901 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.fa.yml'), 902 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.fa.yml'), 903 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.fa.yml'), 904 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.fa.yml'), 905 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.fa.yml'), 906 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.fa.yml'), 907 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.fa.yml'), 908 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.fa.yml'), 909 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.fa.yml'), 910 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.fa.yml'), 911 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.fa.yml'), 912 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.fa.yml'), 913 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.fa.yml'), 914 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.fa.yml'), 915 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.fa.yml'), 916 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.fa.yml'), 917 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff'), 918 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.fa.xliff'), 919 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.fa.yml'), 920 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.fa.yml'), 921 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.fa.yml'), 922 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.fa.yml'), 923 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf'), 924 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf'), 925 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf'), 926 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.sk.yml'), 927 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.sk.yml'), 928 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.sk.yml'), 929 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.sk.yml'), 930 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.sk.yml'), 931 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.sk.yml'), 932 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.sk.yml'), 933 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.sk.yml'), 934 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.sk.yml'), 935 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.sk.yml'), 936 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.sk.yml'), 937 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.sk.yml'), 938 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.sk.yml'), 939 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.sk.yml'), 940 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.sk.yml'), 941 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.sk.yml'), 942 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.sk.yml'), 943 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.sk.yml'), 944 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.sk.yml'), 945 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.sk.yml'), 946 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.sk.yml'), 947 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.sk.yml'), 948 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.sk.yml'), 949 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.sk.yml'), 950 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.sk.yml'), 951 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.sk.yml'), 952 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.sk.yml'), 953 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.sk.yml'), 954 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.sk.yml'), 955 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.sk.yml'), 956 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.sk.yml'), 957 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.sk.yml'), 958 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.sk.yml'), 959 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.sk.yml'), 960 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.sk.yml'), 961 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.sk.yml'), 962 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.sk.yml'), 963 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.sk.yml'), 964 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.sk.yml'), 965 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.sk.yml'), 966 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.sk.yml'), 967 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.sk.yml'), 968 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.sk.yml'), 969 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff'), 970 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.sk.xliff'), 971 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.sk.yml'), 972 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.sk.yml'), 973 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.sk.yml'), 974 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.sk.yml'), 975 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf'), 976 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf'), 977 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf'), 978 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.he.yml'), 979 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.he.yml'), 980 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.he.yml'), 981 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.he.yml'), 982 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.he.yml'), 983 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.he.yml'), 984 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.he.yml'), 985 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.he.yml'), 986 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.he.yml'), 987 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.he.yml'), 988 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf'), 989 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf'), 990 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf'), 991 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.el.yml'), 992 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.el.yml'), 993 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.el.yml'), 994 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.el.yml'), 995 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.el.yml'), 996 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.el.yml'), 997 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.el.yml'), 998 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.el.yml'), 999 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.el.yml'), 1000 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.el.yml'), 1001 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.el.yml'), 1002 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.el.yml'), 1003 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.el.yml'), 1004 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.el.yml'), 1005 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.el.yml'), 1006 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.el.yml'), 1007 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.el.yml'), 1008 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.el.yml'), 1009 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.el.yml'), 1010 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.el.yml'), 1011 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.el.yml'), 1012 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.el.yml'), 1013 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf'), 1014 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf'), 1015 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff'), 1016 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf'), 1017 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf'), 1018 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf'), 1019 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.lt.yml'), 1020 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.lt.yml'), 1021 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.lt.yml'), 1022 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.lt.yml'), 1023 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.lt.yml'), 1024 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.lt.yml'), 1025 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.lt.yml'), 1026 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.lt.yml'), 1027 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.lt.yml'), 1028 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.lt.yml'), 1029 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.lt.yml'), 1030 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.lt.yml'), 1031 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.lt.yml'), 1032 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.lt.yml'), 1033 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.lt.yml'), 1034 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.lt.yml'), 1035 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.lt.yml'), 1036 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.lt.yml'), 1037 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.lt.yml'), 1038 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.lt.yml'), 1039 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.lt.yml'), 1040 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.lt.yml'), 1041 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.lt.yml'), 1042 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.lt.yml'), 1043 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.lt.yml'), 1044 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.lt.yml'), 1045 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.lt.yml'), 1046 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.lt.yml'), 1047 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.lt.yml'), 1048 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.lt.yml'), 1049 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.lt.yml'), 1050 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.lt.yml'), 1051 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.lt.yml'), 1052 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.lt.yml'), 1053 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.lt.yml'), 1054 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff'), 1055 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.lt.yml'), 1056 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.lt.yml'), 1057 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.lt.yml'), 1058 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf'), 1059 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.af.yml'), 1060 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.af.yml'), 1061 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.af.yml'), 1062 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.af.yml'), 1063 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.af.yml'), 1064 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.af.yml'), 1065 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.af.yml'), 1066 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.af.yml'), 1067 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf'), 1068 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf'), 1069 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf'), 1070 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.ro.yml'), 1071 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.ro.yml'), 1072 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.ro.yml'), 1073 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.ro.yml'), 1074 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.ro.yml'), 1075 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.ro.yml'), 1076 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.ro.yml'), 1077 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.ro.yml'), 1078 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.ro.yml'), 1079 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ro.yml'), 1080 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.ro.yml'), 1081 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.ro.yml'), 1082 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.ro.yml'), 1083 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.ro.yml'), 1084 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.ro.yml'), 1085 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.ro.yml'), 1086 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.ro.yml'), 1087 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.ro.yml'), 1088 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ro.yml'), 1089 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.ro.yml'), 1090 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ro.yml'), 1091 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.ro.yml'), 1092 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.ro.yml'), 1093 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.ro.yml'), 1094 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.ro.yml'), 1095 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.ro.yml'), 1096 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.ro.yml'), 1097 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ro.yml'), 1098 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.ro.yml'), 1099 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.ro.yml'), 1100 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ro.yml'), 1101 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.ro.yml'), 1102 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.ro.yml'), 1103 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff'), 1104 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.ro.xliff'), 1105 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ro.yml'), 1106 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.ro.yml'), 1107 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.ro.yml'), 1108 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf'), 1109 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf'), 1110 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf'), 1111 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.lv.yml'), 1112 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf'), 1113 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf'), 1114 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.fi.yml'), 1115 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.fi.yml'), 1116 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.fi.yml'), 1117 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.fi.yml'), 1118 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.fi.yml'), 1119 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.fi.yml'), 1120 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.fi.yml'), 1121 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.fi.yml'), 1122 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.fi.yml'), 1123 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.fi.yml'), 1124 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.fi.yml'), 1125 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.fi.yml'), 1126 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.fi.yml'), 1127 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.fi.yml'), 1128 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.fi.yml'), 1129 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.fi.yml'), 1130 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.fi.yml'), 1131 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fi.xliff'), 1132 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.fi.yml'), 1133 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.fi.yml'), 1134 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.fi.yml'), 1135 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf'), 1136 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf'), 1137 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf'), 1138 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.nl.yml'), 1139 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.nl.yml'), 1140 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.nl.yml'), 1141 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.nl.yml'), 1142 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.nl.yml'), 1143 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.nl.yml'), 1144 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.nl.yml'), 1145 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.nl.yml'), 1146 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.nl.yml'), 1147 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.nl.yml'), 1148 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.nl.yml'), 1149 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.nl.yml'), 1150 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.nl.yml'), 1151 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.nl.yml'), 1152 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.nl.yml'), 1153 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.nl.yml'), 1154 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.nl.yml'), 1155 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.nl.yml'), 1156 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.nl.yml'), 1157 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.nl.yml'), 1158 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.nl.yml'), 1159 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.nl.yml'), 1160 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.nl.yml'), 1161 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.nl.yml'), 1162 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.nl.yml'), 1163 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.nl.yml'), 1164 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.nl.yml'), 1165 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.nl.yml'), 1166 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.nl.yml'), 1167 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.nl.yml'), 1168 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.nl.yml'), 1169 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.nl.yml'), 1170 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.nl.yml'), 1171 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.nl.yml'), 1172 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.nl.yml'), 1173 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.nl.yml'), 1174 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.nl.yml'), 1175 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.nl.yml'), 1176 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.nl.yml'), 1177 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.nl.yml'), 1178 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.nl.yml'), 1179 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.nl.yml'), 1180 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.nl.yml'), 1181 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff'), 1182 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.nl.xliff'), 1183 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.nl.yml'), 1184 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.nl.yml'), 1185 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.nl.yml'), 1186 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.nl.yml'), 1187 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf'), 1188 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf'), 1189 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf'), 1190 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.fr.yml'), 1191 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.fr.yml'), 1192 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.fr.yml'), 1193 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.fr.yml'), 1194 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.fr.yml'), 1195 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.fr.yml'), 1196 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.fr.yml'), 1197 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.fr.yml'), 1198 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.fr.yml'), 1199 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.fr.yml'), 1200 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.fr.yml'), 1201 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.fr.yml'), 1202 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.fr.yml'), 1203 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.fr.yml'), 1204 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.fr.yml'), 1205 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.fr.yml'), 1206 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.fr.yml'), 1207 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.fr.yml'), 1208 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.fr.yml'), 1209 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.fr.yml'), 1210 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.fr.yml'), 1211 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.fr.yml'), 1212 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.fr.yml'), 1213 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.fr.yml'), 1214 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.fr.yml'), 1215 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.fr.yml'), 1216 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.fr.yml'), 1217 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.fr.yml'), 1218 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.fr.yml'), 1219 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.fr.yml'), 1220 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.fr.yml'), 1221 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.fr.yml'), 1222 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.fr.yml'), 1223 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.fr.yml'), 1224 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.fr.yml'), 1225 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.fr.yml'), 1226 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.fr.yml'), 1227 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.fr.yml'), 1228 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.fr.yml'), 1229 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.fr.yml'), 1230 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.fr.yml'), 1231 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff'), 1232 => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.fr.xliff'), 1233 => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/translations/PayumBundle.fr.yml'), 1234 => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/translations/validators.fr.yml'), 1235 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.fr.xliff'), 1236 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.fr.yml'), 1237 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.fr.yml'), 1238 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.fr.yml'), 1239 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf'), 1240 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf'), 1241 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf'), 1242 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.hr.yml'), 1243 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.hr.yml'), 1244 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.hr.yml'), 1245 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.hr.yml'), 1246 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.hr.yml'), 1247 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.hr.yml'), 1248 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.hr.yml'), 1249 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.hr.yml'), 1250 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.hr.yml'), 1251 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.hr.yml'), 1252 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.hr.yml'), 1253 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.hr.yml'), 1254 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.hr.yml'), 1255 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.hr.yml'), 1256 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.hr.yml'), 1257 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.hr.yml'), 1258 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.hr.yml'), 1259 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.hr.yml'), 1260 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.hr.yml'), 1261 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.hr.yml'), 1262 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.hr.yml'), 1263 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.hr.yml'), 1264 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.hr.yml'), 1265 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.hr.yml'), 1266 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.hr.yml'), 1267 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.hr.yml'), 1268 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.hr.yml'), 1269 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.hr.yml'), 1270 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.hr.yml'), 1271 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.hr.yml'), 1272 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.hr.yml'), 1273 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.hr.yml'), 1274 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.hr.yml'), 1275 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff'), 1276 => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/translations/PayumBundle.hr.yml'), 1277 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.hr.xliff'), 1278 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.hr.yml'), 1279 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.hr.yml'), 1280 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.hr.yml'), 1281 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf'), 1282 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf'), 1283 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.uk.yml'), 1284 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.uk.yml'), 1285 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.uk.yml'), 1286 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.uk.yml'), 1287 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.uk.yml'), 1288 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.uk.yml'), 1289 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.uk.yml'), 1290 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.uk.yml'), 1291 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.uk.yml'), 1292 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.uk.yml'), 1293 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.uk.yml'), 1294 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.uk.yml'), 1295 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.uk.yml'), 1296 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.uk.yml'), 1297 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.uk.yml'), 1298 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.uk.yml'), 1299 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.uk.yml'), 1300 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.uk.yml'), 1301 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.uk.yml'), 1302 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.uk.yml'), 1303 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.uk.yml'), 1304 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.uk.yml'), 1305 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.uk.yml'), 1306 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.uk.yml'), 1307 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.uk.yml'), 1308 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.uk.yml'), 1309 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.uk.yml'), 1310 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.uk.yml'), 1311 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.uk.yml'), 1312 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.uk.yml'), 1313 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.uk.yml'), 1314 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.uk.yml'), 1315 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.uk.yml'), 1316 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.uk.yml'), 1317 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.uk.yml'), 1318 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.uk.yml'), 1319 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff'), 1320 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.uk.xliff'), 1321 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.uk.yml'), 1322 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.uk.yml'), 1323 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.uk.yml'), 1324 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf'), 1325 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf'), 1326 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf'), 1327 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.bg.yml'), 1328 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.bg.yml'), 1329 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.bg.yml'), 1330 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.bg.yml'), 1331 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.bg.yml'), 1332 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.bg.yml'), 1333 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.bg.yml'), 1334 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.bg.yml'), 1335 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.bg.yml'), 1336 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.bg.yml'), 1337 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.bg.yml'), 1338 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.bg.yml'), 1339 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.bg.yml'), 1340 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.bg.yml'), 1341 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.bg.yml'), 1342 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.bg.yml'), 1343 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.bg.yml'), 1344 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.bg.yml'), 1345 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.bg.yml'), 1346 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.bg.yml'), 1347 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.bg.yml'), 1348 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff'), 1349 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.bg.yml'), 1350 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.bg.yml'), 1351 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.bg.yml'), 1352 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf'), 1353 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf'), 1354 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf'), 1355 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf'), 1356 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf'), 1357 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf'), 1358 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.id.yml'), 1359 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.id.yml'), 1360 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.id.yml'), 1361 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.id.yml'), 1362 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.id.yml'), 1363 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.id.yml'), 1364 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.id.yml'), 1365 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.id.yml'), 1366 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.id.yml'), 1367 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.id.yml'), 1368 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.id.yml'), 1369 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.id.yml'), 1370 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.id.yml'), 1371 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.id.yml'), 1372 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.id.yml'), 1373 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.id.yml'), 1374 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.id.yml'), 1375 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.id.yml'), 1376 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.id.yml'), 1377 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.id.yml'), 1378 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.id.yml'), 1379 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.id.yml'), 1380 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.id.yml'), 1381 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf'), 1382 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf'), 1383 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf'), 1384 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.es.yml'), 1385 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.es.yml'), 1386 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.es.yml'), 1387 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.es.yml'), 1388 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.es.yml'), 1389 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.es.yml'), 1390 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/flashes.es.yml'), 1391 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.es.yml'), 1392 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.es.yml'), 1393 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.es.yml'), 1394 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.es.yml'), 1395 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.es.yml'), 1396 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.es.yml'), 1397 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.es.yml'), 1398 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.es.yml'), 1399 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.es.yml'), 1400 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.es.yml'), 1401 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.es.yml'), 1402 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.es.yml'), 1403 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.es.yml'), 1404 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.es.yml'), 1405 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.es.yml'), 1406 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.es.yml'), 1407 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.es.yml'), 1408 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.es.yml'), 1409 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.es.yml'), 1410 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.es.yml'), 1411 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.es.yml'), 1412 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.es.yml'), 1413 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.es.yml'), 1414 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.es.yml'), 1415 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.es.yml'), 1416 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.es.yml'), 1417 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.es.yml'), 1418 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.es.yml'), 1419 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.es.yml'), 1420 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.es.yml'), 1421 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.es.yml'), 1422 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.es.yml'), 1423 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.es.yml'), 1424 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.es.yml'), 1425 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.es.yml'), 1426 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/validators.es.yml'), 1427 => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff'), 1428 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.es.xliff'), 1429 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.es.yml'), 1430 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/validators.es.yml'), 1431 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.es.yml'), 1432 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.es.yml'), 1433 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf'), 1434 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf'), 1435 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf'), 1436 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.az.xliff'), 1437 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf'), 1438 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf'), 1439 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf'), 1440 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/flashes.sv.yml'), 1441 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/translations/validators.sv.yml'), 1442 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.sv.yml'), 1443 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.sv.yml'), 1444 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.sv.yml'), 1445 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.sv.yml'), 1446 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/validators.sv.yml'), 1447 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.sv.yml'), 1448 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.sv.yml'), 1449 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.sv.yml'), 1450 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.sv.yml'), 1451 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.sv.yml'), 1452 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.sv.yml'), 1453 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.sv.yml'), 1454 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.sv.yml'), 1455 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.sv.yml'), 1456 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.sv.yml'), 1457 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/flashes.sv.yml'), 1458 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.sv.yml'), 1459 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.sv.yml'), 1460 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/flashes.sv.yml'), 1461 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.sv.yml'), 1462 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.sv.yml'), 1463 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/flashes.sv.yml'), 1464 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.sv.yml'), 1465 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/flashes.sv.yml'), 1466 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.sv.yml'), 1467 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/validators.sv.yml'), 1468 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.sv.yml'), 1469 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.sv.yml'), 1470 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.sv.yml'), 1471 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.sv.yml'), 1472 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.sv.yml'), 1473 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.sv.yml'), 1474 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf'), 1475 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf'), 1476 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.sr_CS.yml'), 1477 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.sr_CS.yml'), 1478 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.sr_CS.yml'), 1479 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.sr_CS.yml'), 1480 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.sr_CS.yml'), 1481 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.sr_CS.yml'), 1482 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.sr_CS.yml'), 1483 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.sr_CS.yml'), 1484 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/flashes.sr_CS.yml'), 1485 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.sr_CS.yml'), 1486 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.sr_CS.yml'), 1487 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.sr_CS.yml'), 1488 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.sr_CS.yml'), 1489 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.sr_CS.yml'), 1490 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.sr_CS.yml'), 1491 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.sr_CS.yml'), 1492 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.sr_CS.yml'), 1493 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.sr_CS.yml'), 1494 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.sr_CS.yml'), 1495 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.sr_CS.yml'), 1496 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.sr_CS.yml'), 1497 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.sr_CS.yml'), 1498 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.be.yml'), 1499 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/validators.be.yml'), 1500 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.be.yml'), 1501 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/validators.be.yml'), 1502 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.be.yml'), 1503 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.be.yml'), 1504 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.be.yml'), 1505 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.be.yml'), 1506 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.be.yml'), 1507 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.be.yml'), 1508 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/validators.be.yml'), 1509 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.be.yml'), 1510 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/validators.be.yml'), 1511 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.be.yml'), 1512 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.be.yml'), 1513 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.be.yml'), 1514 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.be.yml'), 1515 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/validators.be.yml'), 1516 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.be.yml'), 1517 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.be.yml'), 1518 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.be.yml'), 1519 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/validators.be.yml'), 1520 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.be.yml'), 1521 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.be.yml'), 1522 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.be.yml'), 1523 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.be.yml'), 1524 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.be.yml'), 1525 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.be.yml'), 1526 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.be.yml'), 1527 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.be.yml'), 1528 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.be.yml'), 1529 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.be.yml'), 1530 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.be.yml'), 1531 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.be.yml'), 1532 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.de_CH.yml'), 1533 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/translations/messages.de_CH.yml'), 1534 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.de_CH.yml'), 1535 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/validators.de_CH.yml'), 1536 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/translations/messages.de_CH.yml'), 1537 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.de_CH.yml'), 1538 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.de_CH.yml'), 1539 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.de_CH.yml'), 1540 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.de_CH.yml'), 1541 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.de_CH.yml'), 1542 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/validators.de_CH.yml'), 1543 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.de_CH.yml'), 1544 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/flashes.de_CH.yml'), 1545 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.de_CH.yml'), 1546 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.de_CH.yml'), 1547 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/translations/messages.de_CH.yml'), 1548 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.de_CH.yml'), 1549 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.de_CH.yml'), 1550 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.de_CH.yml'), 1551 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.de_CH.yml'), 1552 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.de_CH.yml'), 1553 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/translations/messages.de_CH.yml'), 1554 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.de_CH.yml'), 1555 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.de_CH.yml'), 1556 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.de_CH.yml'), 1557 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/translations/messages.mk.yml'), 1558 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.mk.yml'), 1559 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.mk.yml'), 1560 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/translations/messages.mk.yml'), 1561 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.mk.yml'), 1562 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.mk.yml'), 1563 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.mk.yml'), 1564 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/validators.mk.yml'), 1565 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.mk.yml'), 1566 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/validators.mk.yml'), 1567 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.mk.yml'), 1568 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.mk.yml'), 1569 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/validators.mk.yml'), 1570 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.mk.yml'), 1571 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.mk.yml'), 1572 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/translations/messages.ko.yml'), 1573 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ko.yml'), 1574 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ko.yml'), 1575 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.ko.yml'), 1576 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ko.yml'), 1577 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.ko.yml'), 1578 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.ko.yml'), 1579 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ko.yml'), 1580 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ko.yml'), 1581 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ko.yml'), 1582 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/validators.sr.yml'), 1583 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.sr.yml'), 1584 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/translations/messages.sr.yml'), 1585 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/translations/messages.sr.yml'), 1586 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.sr.yml'), 1587 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/validators.sr.yml'), 1588 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.sr.yml'), 1589 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/translations/messages.sr.yml'), 1590 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/translations/messages.sr.yml'), 1591 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.sr.yml'), 1592 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.sr.yml'), 1593 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/flashes.sr.yml'), 1594 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/translations/messages.sr.yml'), 1595 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.sr.yml'), 1596 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/translations/messages.sr.yml'), 1597 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/translations/messages.sr.yml'), 1598 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/translations/messages.ms.yml'), 1599 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/translations/messages.ms.yml'), 1600 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/translations/messages.ms.yml'), 1601 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/translations/messages.ms.yml'), 1602 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.ms.yml'), 1603 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/translations/messages.ms.yml'), 1604 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/translations/messages.is.yml'), 1605 => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/translations/pagerfanta.oc.xliff'))), 1 => new \Sylius\Bundle\ThemeBundle\Translation\Provider\Resource\ThemeTranslatorResourceProvider(new \Sylius\Bundle\ThemeBundle\Translation\Finder\OrderingTranslationFilesFinder(new \Sylius\Bundle\ThemeBundle\Translation\Finder\TranslationFilesFinder(new \Sylius\Bundle\ThemeBundle\Factory\FinderFactory())), $this->get('sylius.repository.theme'), ${($_ = isset($this->services['sylius.theme.hierarchy_provider']) ? $this->services['sylius.theme.hierarchy_provider'] : $this->getSylius_Theme_HierarchyProviderService()) && false ?: '_'}))), new \Symfony\Component\Translation\MessageSelector(), 'en_US', array('cache_dir' => (__DIR__.'/translations'), 'debug' => true));
        $b->setFallbackLocales(array(0 => 'en_US'));

        return $this->services['translator.default'] = new \Sylius\Bundle\ThemeBundle\Translation\ThemeAwareTranslator($b, $this->get('sylius.context.theme'));
    }

    /**
     * Gets the 'translator_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\TranslatorListener A Symfony\Component\HttpKernel\EventListener\TranslatorListener instance
     */
    protected function getTranslatorListenerService()
    {
        return $this->services['translator_listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener($this->get('translator'), $this->get('request_stack'));
    }

    /**
     * Gets the 'twig' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Environment A Twig_Environment instance
     */
    protected function getTwigService()
    {
        $a = $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $b = ${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->getDebug_FileLinkFormatterService()) && false ?: '_'};
        $c = $this->get('request_stack');
        $d = $this->get('knp_menu.matcher');

        $e = new \Knp\Menu\Util\MenuManipulator();

        $f = new \Symfony\Component\VarDumper\Dumper\HtmlDumper(NULL, 'UTF-8', 0);
        if ($this->has('debug.file_link_formatter')) {
            $f->setDisplayOptions(array('fileLinkFormat' => $b));
        }

        $g = new \Symfony\Component\VarDumper\Dumper\HtmlDumper(NULL, 'UTF-8', 1);
        $g->setDisplayOptions(array('maxStringLength' => 4096, 'fileLinkFormat' => $b));

        $h = new \Symfony\Bridge\Twig\AppVariable();
        $h->setEnvironment('test');
        $h->setDebug(true);
        if ($this->has('security.token_storage')) {
            $h->setTokenStorage($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->has('request_stack')) {
            $h->setRequestStack($c);
        }

        $this->services['twig'] = $instance = new \Twig_Environment($this->get('twig.loader'), array('debug' => true, 'strict_variables' => true, 'exception_controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction', 'form_themes' => array(0 => 'form_div_layout.html.twig'), 'autoescape' => 'name', 'cache' => (__DIR__.'/twig'), 'charset' => 'UTF-8', 'paths' => array(), 'date' => array('format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));

        $instance->addExtension(new \Sylius\Bundle\MoneyBundle\Twig\ConvertMoneyExtension($this->get('sylius.templating.helper.convert_money')));
        $instance->addExtension(new \Sylius\Bundle\OrderBundle\Twig\AggregateAdjustmentsExtension($this->get('sylius.templating.helper.adjustment')));
        $instance->addExtension(new \Sylius\Bundle\MoneyBundle\Twig\FormatMoneyExtension($this->get('sylius.templating.helper.format_money')));
        $instance->addExtension(new \Sylius\Bundle\CurrencyBundle\Twig\CurrencyExtension($this->get('sylius.templating.helper.currency')));
        $instance->addExtension(new \Sylius\Bundle\LocaleBundle\Twig\LocaleExtension($this->get('sylius.templating.helper.locale')));
        $instance->addExtension($this->get('sylius.twig.extension.country_name'));
        $instance->addExtension($this->get('sylius.twig.extension.province_naming'));
        $instance->addExtension(new \Sylius\Bundle\InventoryBundle\Twig\InventoryExtension($this->get('sylius.templating.helper.inventory')));
        $instance->addExtension(new \Sylius\Bundle\UiBundle\Twig\PercentageExtension());
        $instance->addExtension(new \Sylius\Bundle\UiBundle\Twig\SortByExtension());
        $instance->addExtension(new \Sylius\Bundle\CoreBundle\Twig\PriceExtension($this->get('sylius.templating.helper.price')));
        $instance->addExtension(new \Sylius\Bundle\CoreBundle\Twig\VariantResolverExtension($this->get('sylius.templating.helper.variant_resolver')));
        $instance->addExtension(new \Sylius\Bundle\CoreBundle\Twig\ProductVariantsPricesExtension($this->get('sylius.templating.helper.product_variants_prices')));
        $instance->addExtension(new \Sylius\Bundle\CoreBundle\Twig\CheckoutStepsExtension($this->get('sylius.templating.helper.checkout_steps')));
        $instance->addExtension(new \Sylius\Bundle\GridBundle\Twig\GridExtension($this->get('sylius.templating.helper.grid')));
        $instance->addExtension(new \SM\Extension\Twig\SMExtension($this->get('sm.factory')));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'}));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ProfilerExtension($this->get('twig.profile'), $a));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($this->get('translator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension($this->get('assets.packages')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension($b, ($this->targetDirs[3].'/app'), 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($this->get('router')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($a, true));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($c, ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}));
        $instance->addExtension(new \Twig_Extension_Debug());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(array(0 => $this, 1 => 'twig.form.renderer')));
        $instance->addExtension($this->get('sonata.core.flashmessage.twig.extension'));
        $instance->addExtension($this->get('sonata.core.twig.extension.wrapping'));
        $instance->addExtension($this->get('sonata.core.twig.extension.text'));
        $instance->addExtension($this->get('sonata.core.twig.status_extension'));
        $instance->addExtension($this->get('sonata.core.twig.template_extension'));
        $instance->addExtension(new \Sonata\BlockBundle\Twig\Extension\BlockExtension($this->get('sonata.block.templating.helper')));
        $instance->addExtension(new \Sonata\IntlBundle\Twig\Extension\LocaleExtension($this->get('sonata.intl.templating.helper.locale')));
        $instance->addExtension(new \Sonata\IntlBundle\Twig\Extension\NumberExtension($this->get('sonata.intl.templating.helper.number')));
        $instance->addExtension(new \Sonata\IntlBundle\Twig\Extension\DateTimeExtension($this->get('sonata.intl.templating.helper.datetime')));
        $instance->addExtension($this->get('hateoas.twig.link'));
        $instance->addExtension(new \JMS\Serializer\Twig\SerializerRuntimeExtension());
        $instance->addExtension(new \Knp\Menu\Twig\MenuExtension(new \Knp\Menu\Twig\Helper($this->get('knp_menu.renderer_provider'), $this->get('knp_menu.menu_provider'), $e, $d), $d, $e));
        $instance->addExtension(new \Liip\ImagineBundle\Templating\ImagineExtension($this->get('liip_imagine.cache.manager')));
        $instance->addExtension(new \WhiteOctober\PagerfantaBundle\Twig\PagerfantaExtension($this));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\DumpExtension($this->get('var_dumper.cloner'), $f));
        $instance->addExtension(new \Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension($g));
        $instance->addExtension($this->get('sylius.twig.extension.widget.admin_notification'));
        $instance->addGlobal('app', $h);
        $instance->addRuntimeLoader(new \Symfony\Bundle\TwigBundle\ContainerAwareRuntimeLoader($this, array('Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => 'twig.runtime.httpkernel', 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer' => 'twig.form.renderer', 'JMS\\Serializer\\Twig\\SerializerRuntimeHelper' => 'jms_serializer.twig_extension.serializer_runtime_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addGlobal('sylius', $this->get('sylius.context.shopper'));
        $instance->addGlobal('sonata_block', $this->get('sonata.block.twig.global'));
        (new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

        return $instance;
    }

    /**
     * Gets the 'twig.controller.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\ExceptionController A Symfony\Bundle\TwigBundle\Controller\ExceptionController instance
     */
    protected function getTwig_Controller_ExceptionService()
    {
        return $this->services['twig.controller.exception'] = new \Symfony\Bundle\TwigBundle\Controller\ExceptionController($this->get('twig'), true);
    }

    /**
     * Gets the 'twig.controller.preview_error' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController A Symfony\Bundle\TwigBundle\Controller\PreviewErrorController instance
     */
    protected function getTwig_Controller_PreviewErrorService()
    {
        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController($this->get('http_kernel'), 'FOS\\RestBundle\\Controller\\ExceptionController::showAction');
    }

    /**
     * Gets the 'twig.exception_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ExceptionListener A Symfony\Component\HttpKernel\EventListener\ExceptionListener instance
     */
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('FOS\\RestBundle\\Controller\\ExceptionController::showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'twig.form.renderer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Twig\Form\TwigRenderer A Symfony\Bridge\Twig\Form\TwigRenderer instance
     */
    protected function getTwig_Form_RendererService()
    {
        return $this->services['twig.form.renderer'] = new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'form_div_layout.html.twig', 1 => 'LiipImagineBundle:Form:form_div_layout.html.twig'), $this->get('twig')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'twig.loader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Sylius\Bundle\ThemeBundle\Twig\ThemeFilesystemLoader A Sylius\Bundle\ThemeBundle\Twig\ThemeFilesystemLoader instance
     */
    protected function getTwig_LoaderService()
    {
        $a = ${($_ = isset($this->services['sylius.theme.templating.file_locator']) ? $this->services['sylius.theme.templating.file_locator'] : $this->getSylius_Theme_Templating_FileLocatorService()) && false ?: '_'};
        $b = $this->get('templating.name_parser');

        $c = new \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader($a, $b, $this->targetDirs[5]);
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/views'), 'SyliusChannel');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/views'), 'SyliusAttribute');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/views'), 'SyliusUi');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/views'), 'SyliusCore');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/views'), 'SyliusResource');
        $c->addPath(($this->targetDirs[5].'/vendor/doctrine/doctrine-bundle/Resources/views'), 'Doctrine');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views'), 'Framework');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views'), 'Security');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views'), 'Twig');
        $c->addPath(($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/views'), 'SonataCore');
        $c->addPath(($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/views'), 'SonataBlock');
        $c->addPath(($this->targetDirs[5].'/vendor/sonata-project/intl-bundle/Resources/views'), 'SonataIntl');
        $c->addPath(($this->targetDirs[5].'/vendor/knplabs/knp-menu-bundle/Resources/views'), 'KnpMenu');
        $c->addPath(($this->targetDirs[5].'/vendor/liip/imagine-bundle/Resources/views'), 'LiipImagine');
        $c->addPath(($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/views'), 'Payum');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/views'), 'SyliusPayum');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ThemeBundle/Resources/views'), 'SyliusTheme');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views'), 'Debug');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views'), 'WebProfiler');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/views'), 'SyliusAdmin');
        $c->addPath(($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/views'), 'SyliusShop');
        $c->addPath(($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'));
        $c->addPath(($this->targetDirs[5].'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'));

        return $this->services['twig.loader'] = new \Sylius\Bundle\ThemeBundle\Twig\ThemeFilesystemLoader($c, $a, $b);
    }

    /**
     * Gets the 'twig.profile' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Twig_Profiler_Profile A Twig_Profiler_Profile instance
     */
    protected function getTwig_ProfileService()
    {
        return $this->services['twig.profile'] = new \Twig_Profiler_Profile();
    }

    /**
     * Gets the 'twig.runtime.httpkernel' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpKernelRuntime A Symfony\Bridge\Twig\Extension\HttpKernelRuntime instance
     */
    protected function getTwig_Runtime_HttpkernelService()
    {
        return $this->services['twig.runtime.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelRuntime($this->get('fragment.handler'));
    }

    /**
     * Gets the 'twig.translation.extractor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bridge\Twig\Translation\TwigExtractor A Symfony\Bridge\Twig\Translation\TwigExtractor instance
     */
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor($this->get('twig'));
    }

    /**
     * Gets the 'uri_signer' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\UriSigner A Symfony\Component\HttpKernel\UriSigner instance
     */
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('%secret');
    }

    /**
     * Gets the 'validate_request_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener A Symfony\Component\HttpKernel\EventListener\ValidateRequestListener instance
     */
    protected function getValidateRequestListenerService()
    {
        return $this->services['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener();
    }

    /**
     * Gets the 'validator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Validator\ValidatorInterface A Symfony\Component\Validator\Validator\ValidatorInterface instance
     */
    protected function getValidatorService()
    {
        return $this->services['validator'] = $this->get('validator.builder')->getValidator();
    }

    /**
     * Gets the 'validator.builder' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\ValidatorBuilderInterface A Symfony\Component\Validator\ValidatorBuilderInterface instance
     */
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();

        $instance->setConstraintValidatorFactory(${($_ = isset($this->services['validator.validator_factory']) ? $this->services['validator.validator_factory'] : $this->getValidator_ValidatorFactoryService()) && false ?: '_'});
        $instance->setTranslator($this->get('translator'));
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml'), 1 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/config/validation/Order.xml'), 2 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/config/validation/OrderItem.xml'), 3 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/config/validation/Currency.xml'), 4 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/config/validation/ExchangeRate.xml'), 5 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/config/validation/Locale.xml'), 6 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductTranslation.xml'), 7 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductOptionValueTranslation.xml'), 8 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductOptionValue.xml'), 9 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductOptionTranslation.xml'), 10 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductAssociationTypeTranslation.xml'), 11 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductOption.xml'), 12 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductAssociationType.xml'), 13 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/ProductVariant.xml'), 14 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/validation/Product.xml'), 15 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/config/validation/Channel.xml'), 16 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/config/validation/Attribute.xml'), 17 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/config/validation/AttributeTranslation.xml'), 18 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/config/validation/AttributeValue.xml'), 19 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/config/validation/TaxRate.xml'), 20 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/config/validation/TaxCategory.xml'), 21 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/validation/Shipment.xml'), 22 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/validation/ShippingMethod.xml'), 23 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/validation/ShippingCategory.xml'), 24 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/validation/ShippingMethodTranslation.xml'), 25 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/config/validation/PaymentMethodTranslation.xml'), 26 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/config/validation/PaymentMethod.xml'), 27 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/config/validation/Payment.xml'), 28 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/validation/PromotionRule.xml'), 29 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/validation/Promotion.xml'), 30 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/validation/PromotionAction.xml'), 31 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/validation/PromotionCouponGeneratorInstruction.xml'), 32 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/validation/PromotionCoupon.xml'), 33 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/validation/Country.xml'), 34 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/validation/ZoneMember.xml'), 35 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/validation/Address.xml'), 36 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/validation/Zone.xml'), 37 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/validation/Province.xml'), 38 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/config/validation/TaxonTranslation.xml'), 39 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/config/validation/Taxon.xml'), 40 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/validation/ChangePassword.xml'), 41 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/validation/User.xml'), 42 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/validation/PasswordReset.xml'), 43 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/validation/PasswordResetRequest.xml'), 44 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/config/validation/Customer.xml'), 45 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/config/validation/CustomerGroup.xml'), 46 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/config/validation/Review.xml'), 47 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/Customer.xml'), 48 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/ProductImage.xml'), 49 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/ProductReview.xml'), 50 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/TaxRate.xml'), 51 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/Channel.xml'), 52 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/ShippingMethod.xml'), 53 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/AddToCartCommand.xml'), 54 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/PaymentMethod.xml'), 55 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/Taxon.xml'), 56 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/Order.xml'), 57 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/ChannelPricing.xml'), 58 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/ProductVariant.xml'), 59 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/TaxonImage.xml'), 60 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/OrderItem.xml'), 61 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/AdminUser.xml'), 62 => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/validation/Product.xml'), 63 => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/config/validation.xml')));
        $instance->enableAnnotationMapping($this->get('annotation_reader'));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers(array(0 => $this->get('sylius.validator.customer_initializer'), 1 => $this->get('doctrine.orm.validator_initializer')));

        return $instance;
    }

    /**
     * Gets the 'validator.email' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Constraints\EmailValidator A Symfony\Component\Validator\Constraints\EmailValidator instance
     */
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }

    /**
     * Gets the 'validator.expression' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\Validator\Constraints\ExpressionValidator A Symfony\Component\Validator\Constraints\ExpressionValidator instance
     */
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator();
    }

    /**
     * Gets the 'var_dumper.cli_dumper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\VarDumper\Dumper\CliDumper A Symfony\Component\VarDumper\Dumper\CliDumper instance
     */
    protected function getVarDumper_CliDumperService()
    {
        return $this->services['var_dumper.cli_dumper'] = new \Symfony\Component\VarDumper\Dumper\CliDumper(NULL, 'UTF-8', 0);
    }

    /**
     * Gets the 'var_dumper.cloner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Component\VarDumper\Cloner\VarCloner A Symfony\Component\VarDumper\Cloner\VarCloner instance
     */
    protected function getVarDumper_ClonerService()
    {
        $this->services['var_dumper.cloner'] = $instance = new \Symfony\Component\VarDumper\Cloner\VarCloner();

        $instance->setMaxItems(2500);
        $instance->setMaxString(-1);

        return $instance;
    }

    /**
     * Gets the 'web_profiler.controller.exception' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController A Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController instance
     */
    protected function getWebProfiler_Controller_ExceptionService()
    {
        return $this->services['web_profiler.controller.exception'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController(NULL, $this->get('twig'), true);
    }

    /**
     * Gets the 'web_profiler.controller.profiler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController A Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController instance
     */
    protected function getWebProfiler_Controller_ProfilerService()
    {
        return $this->services['web_profiler.controller.profiler'] = new \Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController($this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), NULL, $this->get('twig'), array(), 'bottom', new \Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler(new \Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator()), $this->targetDirs[5]);
    }

    /**
     * Gets the 'web_profiler.controller.router' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Symfony\Bundle\WebProfilerBundle\Controller\RouterController A Symfony\Bundle\WebProfilerBundle\Controller\RouterController instance
     */
    protected function getWebProfiler_Controller_RouterService()
    {
        return $this->services['web_profiler.controller.router'] = new \Symfony\Bundle\WebProfilerBundle\Controller\RouterController(NULL, $this->get('twig'), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'white_october_pagerfanta.view_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * @return \Pagerfanta\View\ViewFactory A Pagerfanta\View\ViewFactory instance
     */
    protected function getWhiteOctoberPagerfanta_ViewFactoryService()
    {
        $a = $this->get('translator');

        $b = new \Pagerfanta\View\DefaultView();

        $c = new \Pagerfanta\View\TwitterBootstrapView();

        $d = new \Pagerfanta\View\TwitterBootstrap3View();

        $e = new \Pagerfanta\View\SemanticUiView();

        $this->services['white_october_pagerfanta.view_factory'] = $instance = new \Pagerfanta\View\ViewFactory(array());

        $instance->add(array('default' => $b, 'default_translated' => new \WhiteOctober\PagerfantaBundle\View\DefaultTranslatedView($b, $a), 'twitter_bootstrap' => $c, 'twitter_bootstrap3' => $d, 'semantic_ui' => $e, 'twitter_bootstrap3_translated' => new \WhiteOctober\PagerfantaBundle\View\TwitterBootstrap3TranslatedView($d, $a), 'twitter_bootstrap_translated' => new \WhiteOctober\PagerfantaBundle\View\TwitterBootstrapTranslatedView($c, $a), 'semantic_ui_translated' => new \WhiteOctober\PagerfantaBundle\View\SemanticUiTranslatedView($e, $a)));

        return $instance;
    }

    /**
     * Gets the 'annotations.reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Doctrine\Common\Annotations\AnnotationReader A Doctrine\Common\Annotations\AnnotationReader instance
     */
    protected function getAnnotations_ReaderService()
    {
        return $this->services['annotations.reader'] = new \Doctrine\Common\Annotations\AnnotationReader();
    }

    /**
     * Gets the 'cache.annotations' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface A Symfony\Component\Cache\Adapter\AdapterInterface instance
     */
    protected function getCache_AnnotationsService()
    {
        return $this->services['cache.annotations'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('fgvOs6OHkJ', 0, 'TXCJ048gZiLf+IC2XrghCo', (__DIR__.'/pools'), $this->get('monolog.logger.cache', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'controller_name_converter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser A Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser instance
     */
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel'));
    }

    /**
     * Gets the 'debug.file_link_formatter' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpKernel\Debug\FileLinkFormatter A Symfony\Component\HttpKernel\Debug\FileLinkFormatter instance
     */
    protected function getDebug_FileLinkFormatterService()
    {
        return $this->services['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL, $this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->targetDirs[5], '/_profiler/open?file=%f&line=%l#line%l');
    }

    /**
     * Gets the 'debug.security.access.decision_manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authorization\DebugAccessDecisionManager A Symfony\Component\Security\Core\Authorization\DebugAccessDecisionManager instance
     */
    protected function getDebug_Security_Access_DecisionManagerService()
    {
        $a = ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->getSecurity_Authentication_TrustResolverService()) && false ?: '_'};

        $this->services['debug.security.access.decision_manager'] = $instance = new \Symfony\Component\Security\Core\Authorization\DebugAccessDecisionManager(new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(array(), 'affirmative', false, true));

        $instance->setVoters(array(0 => new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter($a), 1 => new \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter(), 2 => new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), $a, new \Symfony\Component\Security\Core\Role\RoleHierarchy(array()))));

        return $instance;
    }

    /**
     * Gets the 'fos_rest.exception.codes_map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \FOS\RestBundle\Util\ExceptionValueMap A FOS\RestBundle\Util\ExceptionValueMap instance
     */
    protected function getFosRest_Exception_CodesMapService()
    {
        return $this->services['fos_rest.exception.codes_map'] = new \FOS\RestBundle\Util\ExceptionValueMap(array());
    }

    /**
     * Gets the 'fos_rest.request.param_fetcher.reader' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \FOS\RestBundle\Request\ParamReader A FOS\RestBundle\Request\ParamReader instance
     */
    protected function getFosRest_Request_ParamFetcher_ReaderService()
    {
        return $this->services['fos_rest.request.param_fetcher.reader'] = new \FOS\RestBundle\Request\ParamReader($this->get('annotation_reader'));
    }

    /**
     * Gets the 'fos_rest.serializer.jms_handler_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \JMS\Serializer\Handler\LazyHandlerRegistry A JMS\Serializer\Handler\LazyHandlerRegistry instance
     */
    protected function getFosRest_Serializer_JmsHandlerRegistryService()
    {
        return $this->services['fos_rest.serializer.jms_handler_registry'] = new \JMS\Serializer\Handler\LazyHandlerRegistry($this, array(2 => array('DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromyml')), 'DateTimeImmutable' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeImmutableFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeImmutableFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeImmutableFromyml')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateIntervalFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateIntervalFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateIntervalFromyml')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'))), 1 => array('DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime')), 'DateTimeImmutable' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTimeImmutable'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTimeImmutable'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTimeImmutable')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap')), 'Symfony\\Component\\Form\\Form' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToyml')), 'Symfony\\Component\\Form\\FormError' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToyml')), 'Symfony\\Component\\Validator\\ConstraintViolationList' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToyml')), 'Symfony\\Component\\Validator\\ConstraintViolation' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToyml')), 'Exception' => array('json' => array(0 => 'fos_rest.serializer.exception_normalizer.jms', 1 => 'serializeToJson'), 'xml' => array(0 => 'fos_rest.serializer.exception_normalizer.jms', 1 => 'serializeToXml')))));
    }

    /**
     * Gets the 'hateoas.configuration.relations_repository' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Hateoas\Configuration\RelationsRepository A Hateoas\Configuration\RelationsRepository instance
     */
    protected function getHateoas_Configuration_RelationsRepositoryService()
    {
        $a = ${($_ = isset($this->services['jms_serializer.metadata.file_locator']) ? $this->services['jms_serializer.metadata.file_locator'] : $this->getJmsSerializer_Metadata_FileLocatorService()) && false ?: '_'};
        $b = $this->get('annotation_reader');

        $c = new \Hateoas\Configuration\Metadata\Driver\YamlDriver($a);

        $d = new \Hateoas\Configuration\Metadata\Driver\XmlDriver($a);

        $e = new \Hateoas\Configuration\Metadata\Driver\AnnotationDriver($b);

        $f = new \Hateoas\Configuration\Metadata\Driver\ExtensionDriver($e);

        $g = new \Metadata\Driver\DriverChain(array(0 => $c, 1 => $d, 2 => $f));

        $h = new \Metadata\Cache\FileCache((__DIR__.'/hateoas'));

        $i = new \Metadata\MetadataFactory($g, 'Metadata\\ClassHierarchyMetadata', true);
        $i->setCache($h);

        return $this->services['hateoas.configuration.relations_repository'] = new \Hateoas\Configuration\RelationsRepository($i, new \Hateoas\Configuration\Provider\RelationProvider($i, $this->get('hateoas.configuration.provider.resolver')));
    }

    /**
     * Gets the 'hateoas.embeds_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Hateoas\Factory\EmbeddedsFactory A Hateoas\Factory\EmbeddedsFactory instance
     */
    protected function getHateoas_EmbedsFactoryService()
    {
        return $this->services['hateoas.embeds_factory'] = new \Hateoas\Factory\EmbeddedsFactory(${($_ = isset($this->services['hateoas.configuration.relations_repository']) ? $this->services['hateoas.configuration.relations_repository'] : $this->getHateoas_Configuration_RelationsRepositoryService()) && false ?: '_'}, $this->get('hateoas.expression.evaluator'), $this->get('hateoas.serializer.exclusion_manager'));
    }

    /**
     * Gets the 'hateoas.link_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Hateoas\Factory\LinkFactory A Hateoas\Factory\LinkFactory instance
     */
    protected function getHateoas_LinkFactoryService()
    {
        return $this->services['hateoas.link_factory'] = new \Hateoas\Factory\LinkFactory($this->get('hateoas.expression.evaluator'), $this->get('hateoas.generator.registry'));
    }

    /**
     * Gets the 'hateoas.links_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Hateoas\Factory\LinksFactory A Hateoas\Factory\LinksFactory instance
     */
    protected function getHateoas_LinksFactoryService()
    {
        return $this->services['hateoas.links_factory'] = new \Hateoas\Factory\LinksFactory(${($_ = isset($this->services['hateoas.configuration.relations_repository']) ? $this->services['hateoas.configuration.relations_repository'] : $this->getHateoas_Configuration_RelationsRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['hateoas.link_factory']) ? $this->services['hateoas.link_factory'] : $this->getHateoas_LinkFactoryService()) && false ?: '_'}, $this->get('hateoas.serializer.exclusion_manager'));
    }

    /**
     * Gets the 'jms_serializer.metadata.file_locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Metadata\Driver\FileLocator A Metadata\Driver\FileLocator instance
     */
    protected function getJmsSerializer_Metadata_FileLocatorService()
    {
        return $this->services['jms_serializer.metadata.file_locator'] = new \Metadata\Driver\FileLocator(array('Sylius\\Bundle\\OrderBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/config/serializer'), 'Sylius\\Bundle\\MoneyBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/MoneyBundle/Resources/config/serializer'), 'Sylius\\Bundle\\CurrencyBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/config/serializer'), 'Sylius\\Bundle\\LocaleBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ProductBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ChannelBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/config/serializer'), 'Sylius\\Bundle\\AttributeBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/config/serializer'), 'Sylius\\Bundle\\TaxationBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ShippingBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/serializer'), 'Sylius\\Bundle\\PaymentBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/config/serializer'), 'Sylius\\Bundle\\MailerBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/MailerBundle/Resources/config/serializer'), 'Sylius\\Bundle\\PromotionBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/serializer'), 'Sylius\\Bundle\\AddressingBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/serializer'), 'Sylius\\Bundle\\InventoryBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/InventoryBundle/Resources/config/serializer'), 'Sylius\\Bundle\\TaxonomyBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/config/serializer'), 'Sylius\\Bundle\\UserBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/serializer'), 'Sylius\\Bundle\\CustomerBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/config/serializer'), 'Sylius\\Bundle\\UiBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ReviewBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle/Resources/config/serializer'), 'Sylius\\Bundle\\CoreBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ResourceBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle/Resources/config/serializer'), 'Sylius\\Bundle\\GridBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/GridBundle/Resources/config/serializer'), 'winzou\\Bundle\\StateMachineBundle' => ($this->targetDirs[5].'/vendor/winzou/state-machine-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\DoctrineBundle' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\DoctrineCacheBundle' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-cache-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\FrameworkBundle' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer'), 'Symfony\\Bundle\\MonologBundle' => ($this->targetDirs[5].'/vendor/symfony/monolog-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\SecurityBundle' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer'), 'Symfony\\Bundle\\SwiftmailerBundle' => ($this->targetDirs[5].'/vendor/symfony/swiftmailer-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\TwigBundle' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer'), 'Sonata\\CoreBundle' => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle/Resources/config/serializer'), 'Sonata\\BlockBundle' => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle/Resources/config/serializer'), 'Sonata\\IntlBundle' => ($this->targetDirs[5].'/vendor/sonata-project/intl-bundle/Resources/config/serializer'), 'Bazinga\\Bundle\\HateoasBundle' => ($this->targetDirs[5].'/vendor/willdurand/hateoas-bundle/Bazinga/Bundle/HateoasBundle/Resources/config/serializer'), 'JMS\\SerializerBundle' => ($this->targetDirs[5].'/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer'), 'FOS\\RestBundle' => ($this->targetDirs[5].'/vendor/friendsofsymfony/rest-bundle/Resources/config/serializer'), 'Knp\\Bundle\\GaufretteBundle' => ($this->targetDirs[5].'/vendor/knplabs/knp-gaufrette-bundle/Resources/config/serializer'), 'Knp\\Bundle\\MenuBundle' => ($this->targetDirs[5].'/vendor/knplabs/knp-menu-bundle/Resources/config/serializer'), 'Liip\\ImagineBundle' => ($this->targetDirs[5].'/vendor/liip/imagine-bundle/Resources/config/serializer'), 'Payum\\Bundle\\PayumBundle' => ($this->targetDirs[5].'/vendor/payum/payum-bundle/Resources/config/serializer'), 'Stof\\DoctrineExtensionsBundle' => ($this->targetDirs[5].'/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer'), 'WhiteOctober\\PagerfantaBundle' => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\MigrationsBundle' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\FixturesBundle' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer'), 'Sylius\\Bundle\\FixturesBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/FixturesBundle/Resources/config/serializer'), 'Sylius\\Bundle\\PayumBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ThemeBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ThemeBundle/Resources/config/serializer'), 'Symfony\\Bundle\\DebugBundle' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer'), 'Symfony\\Bundle\\WebProfilerBundle' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer'), 'Sensio\\Bundle\\DistributionBundle' => ($this->targetDirs[5].'/vendor/sensio/distribution-bundle/Resources/config/serializer'), 'Kooli\\CatalogPromotion' => ($this->targetDirs[5].'/src/Resources/config/serializer'), 'Sylius\\Bundle\\AdminBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle/Resources/config/serializer'), 'Sylius\\Bundle\\ShopBundle' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle/Resources/config/serializer'), 'Sylius\\Component\\Addressing' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle/Resources/config/serializer'), 'Sylius\\Component\\Attribute' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle/Resources/config/serializer'), 'Sylius\\Component\\Channel' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle/Resources/config/serializer'), 'Sylius\\Component\\Currency' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle/Resources/config/serializer'), 'Sylius\\Component\\Customer' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle/Resources/config/serializer'), 'Sylius\\Component\\Inventory' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/InventoryBundle/Resources/config/serializer'), 'Sylius\\Component\\Locale' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle/Resources/config/serializer'), 'Sylius\\Component\\Order' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle/Resources/config/serializer'), 'Sylius\\Component\\Payment' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle/Resources/config/serializer'), 'Sylius\\Component\\Product' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle/Resources/config/serializer'), 'Sylius\\Component\\Promotion' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle/Resources/config/serializer'), 'Sylius\\Component\\Shipping' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle/Resources/config/serializer'), 'Sylius\\Component\\Taxation' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle/Resources/config/serializer'), 'Sylius\\Component\\Taxonomy' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle/Resources/config/serializer'), 'Sylius\\Component\\User' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle/Resources/config/serializer'), 'Sylius\\Component\\Core' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle/Resources/config/serializer')));
    }

    /**
     * Gets the 'jms_serializer.metadata_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Metadata\MetadataFactory A Metadata\MetadataFactory instance
     */
    protected function getJmsSerializer_MetadataFactoryService()
    {
        $this->services['jms_serializer.metadata_factory'] = $instance = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', true);

        $instance->setCache(new \Metadata\Cache\FileCache((__DIR__.'/jms_serializer')));

        return $instance;
    }

    /**
     * Gets the 'jms_serializer.unserialize_object_constructor' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \JMS\Serializer\Construction\UnserializeObjectConstructor A JMS\Serializer\Construction\UnserializeObjectConstructor instance
     */
    protected function getJmsSerializer_UnserializeObjectConstructorService()
    {
        return $this->services['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor();
    }

    /**
     * Gets the 'router.request_context' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Routing\RequestContext A Symfony\Component\Routing\RequestContext instance
     */
    protected function getRouter_RequestContextService()
    {
        return $this->services['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }

    /**
     * Gets the 'security.access_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\AccessListener A Symfony\Component\Security\Http\Firewall\AccessListener instance
     */
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener($this->get('security.token_storage'), ${($_ = isset($this->services['debug.security.access.decision_manager']) ? $this->services['debug.security.access.decision_manager'] : $this->getDebug_Security_Access_DecisionManagerService()) && false ?: '_'}, ${($_ = isset($this->services['security.access_map']) ? $this->services['security.access_map'] : $this->getSecurity_AccessMapService()) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'});
    }

    /**
     * Gets the 'security.access_map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\AccessMap A Symfony\Component\Security\Http\AccessMap instance
     */
    protected function getSecurity_AccessMapService()
    {
        $this->services['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();

        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/_partial.*', NULL, array(), array(0 => '127.0.0.1')), array(), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/login.*'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/register'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/verify'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('/account.*'), array(0 => 'ROLE_USER'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login-check'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin.*'), array(0 => 'ROLE_ADMINISTRATION_ACCESS'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/api'), array(0 => 'ROLE_API_ACCESS'), NULL);

        return $instance;
    }

    /**
     * Gets the 'security.authentication.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager A Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager instance
     */
    protected function getSecurity_Authentication_ManagerService()
    {
        $a = ${($_ = isset($this->services['security.user_checker']) ? $this->services['security.user_checker'] : $this->getSecurity_UserCheckerService()) && false ?: '_'};
        $b = $this->get('security.encoder_factory');

        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(array(0 => new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider($this->get('sylius.admin_user_provider.email_or_name_based'), $a, 'admin', $b, true), 1 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('593f9ae38cda70.35503236'), 2 => new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider($this->get('sylius.shop_user_provider.email_or_name_based'), $a, 'shop', $b, true), 3 => new \Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider($a, 'Three can keep a secret, if two of them are dead.', 'shop'), 4 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('593f9ae38cda70.35503236')), true);

        $instance->setEventDispatcher($this->get('debug.event_dispatcher'));

        return $instance;
    }

    /**
     * Gets the 'security.authentication.session_strategy' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy A Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy instance
     */
    protected function getSecurity_Authentication_SessionStrategyService()
    {
        return $this->services['security.authentication.session_strategy'] = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate');
    }

    /**
     * Gets the 'security.authentication.trust_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver A Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver instance
     */
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }

    /**
     * Gets the 'security.channel_listener' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Firewall\ChannelListener A Symfony\Component\Security\Http\Firewall\ChannelListener instance
     */
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener(${($_ = isset($this->services['security.access_map']) ? $this->services['security.access_map'] : $this->getSecurity_AccessMapService()) && false ?: '_'}, new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }

    /**
     * Gets the 'security.firewall.map' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallMap A Symfony\Bundle\SecurityBundle\Security\FirewallMap instance
     */
    protected function getSecurity_Firewall_MapService()
    {
        return $this->services['security.firewall.map'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($this, array('security.firewall.map.context.admin' => new \Symfony\Component\HttpFoundation\RequestMatcher('/admin(?:/.*)?$'), 'security.firewall.map.context.shop' => new \Symfony\Component\HttpFoundation\RequestMatcher('/.*'), 'security.firewall.map.context.dev' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/')));
    }

    /**
     * Gets the 'security.http_utils' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\HttpUtils A Symfony\Component\Security\Http\HttpUtils instance
     */
    protected function getSecurity_HttpUtilsService()
    {
        $a = $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE);

        return $this->services['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a);
    }

    /**
     * Gets the 'security.logout_url_generator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator A Symfony\Component\Security\Http\Logout\LogoutUrlGenerator instance
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator($this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->registerListener('admin', 'sylius_admin_logout', 'logout', '_csrf_token', NULL);
        $instance->registerListener('shop', 'sylius_shop_logout', 'logout', '_csrf_token', NULL);

        return $instance;
    }

    /**
     * Gets the 'security.user_checker' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\Security\Core\User\UserChecker A Symfony\Component\Security\Core\User\UserChecker instance
     */
    protected function getSecurity_UserCheckerService()
    {
        return $this->services['security.user_checker'] = new \Symfony\Component\Security\Core\User\UserChecker();
    }

    /**
     * Gets the 'session.storage.metadata_bag' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag A Symfony\Component\HttpFoundation\Session\Storage\MetadataBag instance
     */
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }

    /**
     * Gets the 'sonata.block.manager' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sonata\BlockBundle\Block\BlockServiceManager A Sonata\BlockBundle\Block\BlockServiceManager instance
     */
    protected function getSonata_Block_ManagerService()
    {
        $this->services['sonata.block.manager'] = $instance = new \Sonata\BlockBundle\Block\BlockServiceManager($this, true, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));

        $instance->add('sonata.block.service.container', 'sonata.block.service.container', array());
        $instance->add('sonata.block.service.empty', 'sonata.block.service.empty', array());
        $instance->add('sonata.block.service.text', 'sonata.block.service.text', array());
        $instance->add('sonata.block.service.rss', 'sonata.block.service.rss', array());
        $instance->add('sonata.block.service.menu', 'sonata.block.service.menu', array());
        $instance->add('sonata.block.service.template', 'sonata.block.service.template', array());

        return $instance;
    }

    /**
     * Gets the 'stof_doctrine_extensions.listener.loggable' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Gedmo\Loggable\LoggableListener A Gedmo\Loggable\LoggableListener instance
     */
    protected function getStofDoctrineExtensions_Listener_LoggableService()
    {
        $this->services['stof_doctrine_extensions.listener.loggable'] = $instance = new \Gedmo\Loggable\LoggableListener();

        $instance->setAnnotationReader($this->get('annotation_reader'));

        return $instance;
    }

    /**
     * Gets the 'sylius.context.channel.fake_channel.code_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelCodeProvider A Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelCodeProvider instance
     */
    protected function getSylius_Context_Channel_FakeChannel_CodeProviderService()
    {
        return $this->services['sylius.context.channel.fake_channel.code_provider'] = new \Sylius\Bundle\ChannelBundle\Context\FakeChannel\FakeChannelCodeProvider();
    }

    /**
     * Gets the 'sylius.custom_resource_controller.resource_update_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\CoreBundle\Doctrine\ORM\Updater\ResourceUpdateHandler A Sylius\Bundle\CoreBundle\Doctrine\ORM\Updater\ResourceUpdateHandler instance
     */
    protected function getSylius_CustomResourceController_ResourceUpdateHandlerService()
    {
        return $this->services['sylius.custom_resource_controller.resource_update_handler'] = new \Sylius\Bundle\CoreBundle\Doctrine\ORM\Updater\ResourceUpdateHandler(new \Sylius\Bundle\ResourceBundle\Controller\ResourceUpdateHandler(${($_ = isset($this->services['sylius.resource_controller.state_machine']) ? $this->services['sylius.resource_controller.state_machine'] : $this->getSylius_ResourceController_StateMachineService()) && false ?: '_'}));
    }

    /**
     * Gets the 'sylius.expression_language' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage A Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage instance
     */
    protected function getSylius_ExpressionLanguageService()
    {
        return $this->services['sylius.expression_language'] = new \Sylius\Bundle\ResourceBundle\ExpressionLanguage\ExpressionLanguage();
    }

    /**
     * Gets the 'sylius.resource_controller.event_dispatcher' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\EventDispatcher A Sylius\Bundle\ResourceBundle\Controller\EventDispatcher instance
     */
    protected function getSylius_ResourceController_EventDispatcherService()
    {
        return $this->services['sylius.resource_controller.event_dispatcher'] = new \Sylius\Bundle\ResourceBundle\Controller\EventDispatcher($this->get('debug.event_dispatcher'));
    }

    /**
     * Gets the 'sylius.resource_controller.flash_helper' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\FlashHelper A Sylius\Bundle\ResourceBundle\Controller\FlashHelper instance
     */
    protected function getSylius_ResourceController_FlashHelperService()
    {
        return $this->services['sylius.resource_controller.flash_helper'] = new \Sylius\Bundle\ResourceBundle\Controller\FlashHelper($this->get('session'), $this->get('translator'), 'en_US');
    }

    /**
     * Gets the 'sylius.resource_controller.form_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactory A Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactory instance
     */
    protected function getSylius_ResourceController_FormFactoryService()
    {
        return $this->services['sylius.resource_controller.form_factory'] = new \Sylius\Bundle\ResourceBundle\Controller\ResourceFormFactory($this->get('form.factory'));
    }

    /**
     * Gets the 'sylius.resource_controller.new_resource_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\NewResourceFactory A Sylius\Bundle\ResourceBundle\Controller\NewResourceFactory instance
     */
    protected function getSylius_ResourceController_NewResourceFactoryService()
    {
        return $this->services['sylius.resource_controller.new_resource_factory'] = new \Sylius\Bundle\ResourceBundle\Controller\NewResourceFactory();
    }

    /**
     * Gets the 'sylius.resource_controller.parameters_parser' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ParametersParser A Sylius\Bundle\ResourceBundle\Controller\ParametersParser instance
     */
    protected function getSylius_ResourceController_ParametersParserService()
    {
        return $this->services['sylius.resource_controller.parameters_parser'] = new \Sylius\Bundle\ResourceBundle\Controller\ParametersParser($this, ${($_ = isset($this->services['sylius.expression_language']) ? $this->services['sylius.expression_language'] : $this->getSylius_ExpressionLanguageService()) && false ?: '_'});
    }

    /**
     * Gets the 'sylius.resource_controller.redirect_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\RedirectHandler A Sylius\Bundle\ResourceBundle\Controller\RedirectHandler instance
     */
    protected function getSylius_ResourceController_RedirectHandlerService()
    {
        return $this->services['sylius.resource_controller.redirect_handler'] = new \Sylius\Bundle\ResourceBundle\Controller\RedirectHandler($this->get('router'));
    }

    /**
     * Gets the 'sylius.resource_controller.request_configuration_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactory A Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactory instance
     */
    protected function getSylius_ResourceController_RequestConfigurationFactoryService()
    {
        return $this->services['sylius.resource_controller.request_configuration_factory'] = new \Sylius\Bundle\ResourceBundle\Controller\RequestConfigurationFactory(${($_ = isset($this->services['sylius.resource_controller.parameters_parser']) ? $this->services['sylius.resource_controller.parameters_parser'] : $this->getSylius_ResourceController_ParametersParserService()) && false ?: '_'}, 'Sylius\\Bundle\\ResourceBundle\\Controller\\RequestConfiguration', array('paginate' => NULL, 'limit' => NULL, 'allowed_paginate' => array(0 => 10, 1 => 20, 2 => 30), 'default_page_size' => 10, 'sortable' => false, 'sorting' => NULL, 'filterable' => false, 'criteria' => NULL));
    }

    /**
     * Gets the 'sylius.resource_controller.resources_collection_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProvider A Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProvider instance
     */
    protected function getSylius_ResourceController_ResourcesCollectionProviderService()
    {
        return $this->services['sylius.resource_controller.resources_collection_provider'] = new \Sylius\Bundle\ResourceBundle\Controller\ResourcesCollectionProvider($this->get('sylius.resource_controller.resources_resolver.grid_aware'), new \Hateoas\Representation\Factory\PagerfantaFactory());
    }

    /**
     * Gets the 'sylius.resource_controller.single_resource_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\SingleResourceProvider A Sylius\Bundle\ResourceBundle\Controller\SingleResourceProvider instance
     */
    protected function getSylius_ResourceController_SingleResourceProviderService()
    {
        return $this->services['sylius.resource_controller.single_resource_provider'] = new \Sylius\Bundle\ResourceBundle\Controller\SingleResourceProvider();
    }

    /**
     * Gets the 'sylius.resource_controller.state_machine' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\StateMachine A Sylius\Bundle\ResourceBundle\Controller\StateMachine instance
     */
    protected function getSylius_ResourceController_StateMachineService()
    {
        return $this->services['sylius.resource_controller.state_machine'] = new \Sylius\Bundle\ResourceBundle\Controller\StateMachine($this->get('sm.factory'));
    }

    /**
     * Gets the 'sylius.resource_controller.view_handler' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ResourceBundle\Controller\ViewHandler A Sylius\Bundle\ResourceBundle\Controller\ViewHandler instance
     */
    protected function getSylius_ResourceController_ViewHandlerService()
    {
        return $this->services['sylius.resource_controller.view_handler'] = new \Sylius\Bundle\ResourceBundle\Controller\ViewHandler($this->get('fos_rest.view_handler'));
    }

    /**
     * Gets the 'sylius.resource_registry' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Component\Resource\Metadata\Registry A Sylius\Component\Resource\Metadata\Registry instance
     */
    protected function getSylius_ResourceRegistryService()
    {
        $this->services['sylius.resource_registry'] = $instance = new \Sylius\Component\Resource\Metadata\Registry();

        $instance->addFromAliasAndConfiguration('sylius.order', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Order', 'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\OrderController', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\OrderRepository', 'interface' => 'Sylius\\Component\\Order\\Model\\OrderInterface', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderType')));
        $instance->addFromAliasAndConfiguration('sylius.order_item', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\OrderItem', 'interface' => 'Sylius\\Component\\Order\\Model\\OrderItemInterface', 'controller' => 'Sylius\\Bundle\\OrderBundle\\Controller\\OrderItemController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderItemType')));
        $instance->addFromAliasAndConfiguration('sylius.order_item_unit', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit', 'interface' => 'Sylius\\Component\\Order\\Model\\OrderItemUnitInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Order\\Factory\\OrderItemUnitFactory')));
        $instance->addFromAliasAndConfiguration('sylius.order_sequence', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\OrderSequence', 'interface' => 'Sylius\\Component\\Order\\Model\\OrderSequenceInterface', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.adjustment', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Order\\Model\\Adjustment', 'interface' => 'Sylius\\Component\\Order\\Model\\AdjustmentInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.currency', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Currency\\Model\\Currency', 'interface' => 'Sylius\\Component\\Currency\\Model\\CurrencyInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyType')));
        $instance->addFromAliasAndConfiguration('sylius.exchange_rate', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Currency\\Model\\ExchangeRate', 'interface' => 'Sylius\\Component\\Currency\\Model\\ExchangeRateInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\ExchangeRateType')));
        $instance->addFromAliasAndConfiguration('sylius.locale', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Locale\\Model\\Locale', 'interface' => 'Sylius\\Component\\Locale\\Model\\LocaleInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\LocaleBundle\\Form\\Type\\LocaleType')));
        $instance->addFromAliasAndConfiguration('sylius.product', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Product', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductRepository', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ProductTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.product_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ProductTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.product_variant', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ProductVariant', 'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\ProductVariantController', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductVariantRepository', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductVariantInterface', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.product_variant_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.product_option', array('driver' => 'doctrine/orm', 'classes' => array('repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductOptionRepository', 'model' => 'Sylius\\Component\\Product\\Model\\ProductOption', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.product_option_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.product_association_type', array('driver' => 'doctrine/orm', 'classes' => array('repository' => 'Sylius\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductAssociationTypeRepository', 'model' => 'Sylius\\Component\\Product\\Model\\ProductAssociationType', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.product_association_type_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.product_option_value', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductOptionValue', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.product_option_value_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.product_association', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAssociation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationType')));
        $instance->addFromAliasAndConfiguration('sylius.channel', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Channel', 'interface' => 'Sylius\\Component\\Channel\\Model\\ChannelInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ChannelBundle\\Form\\Type\\ChannelType')));
        $instance->addFromAliasAndConfiguration('sylius.product_attribute', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttribute', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeInterface', 'controller' => 'Sylius\\Bundle\\ProductBundle\\Controller\\ProductAttributeController', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeType', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory'))));
        $instance->addFromAliasAndConfiguration('sylius.product_attribute_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.product_attribute_value', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValue', 'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValueInterface', 'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeValueType', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.tax_rate', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\TaxRate', 'interface' => 'Sylius\\Component\\Taxation\\Model\\TaxRateInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType')));
        $instance->addFromAliasAndConfiguration('sylius.tax_category', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Taxation\\Model\\TaxCategory', 'interface' => 'Sylius\\Component\\Taxation\\Model\\TaxCategoryInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxCategoryType')));
        $instance->addFromAliasAndConfiguration('sylius.shipment', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Shipment', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShipmentRepository', 'interface' => 'Sylius\\Component\\Shipping\\Model\\ShipmentInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShipmentType')));
        $instance->addFromAliasAndConfiguration('sylius.shipment_unit', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit', 'interface' => 'Sylius\\Component\\Shipping\\Model\\ShipmentUnitInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.shipping_method', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ShippingMethod', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShippingMethodRepository', 'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation', 'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.shipping_method_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation', 'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.shipping_category', array('driver' => 'doctrine/orm', 'classes' => array('repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShippingCategoryRepository', 'model' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory', 'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategoryInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingCategoryType')));
        $instance->addFromAliasAndConfiguration('sylius.payment', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Payment', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PaymentRepository', 'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentType')));
        $instance->addFromAliasAndConfiguration('sylius.payment_method', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\PaymentMethod', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PaymentMethodRepository', 'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\PaymentMethodController', 'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodInterface', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation', 'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.payment_method_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation', 'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.promotion_subject', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Order')));
        $instance->addFromAliasAndConfiguration('sylius.promotion', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Promotion', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PromotionRepository', 'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionType')));
        $instance->addFromAliasAndConfiguration('sylius.promotion_coupon', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\PromotionCoupon', 'repository' => 'Sylius\\Bundle\\PromotionBundle\\Doctrine\\ORM\\PromotionCouponRepository', 'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionCouponInterface', 'controller' => 'Sylius\\Bundle\\PromotionBundle\\Controller\\PromotionCouponController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionCouponType')));
        $instance->addFromAliasAndConfiguration('sylius.promotion_rule', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Promotion\\Model\\PromotionRule', 'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionRuleInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionRuleType')));
        $instance->addFromAliasAndConfiguration('sylius.promotion_action', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Promotion\\Model\\PromotionAction', 'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionActionInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionActionType')));
        $instance->addFromAliasAndConfiguration('sylius.address', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Address', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\AddressRepository', 'interface' => 'Sylius\\Component\\Addressing\\Model\\AddressInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\AddressType')));
        $instance->addFromAliasAndConfiguration('sylius.address_log_entry', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Addressing\\Model\\AddressLogEntry', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'repository' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\ResourceLogEntryRepository', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.country', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Addressing\\Model\\Country', 'interface' => 'Sylius\\Component\\Addressing\\Model\\CountryInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\CountryType')));
        $instance->addFromAliasAndConfiguration('sylius.province', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Addressing\\Model\\Province', 'interface' => 'Sylius\\Component\\Addressing\\Model\\ProvinceInterface', 'controller' => 'Sylius\\Bundle\\AddressingBundle\\Controller\\ProvinceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ProvinceType')));
        $instance->addFromAliasAndConfiguration('sylius.zone', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Addressing\\Model\\Zone', 'interface' => 'Sylius\\Component\\Addressing\\Model\\ZoneInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneType')));
        $instance->addFromAliasAndConfiguration('sylius.zone_member', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Addressing\\Model\\ZoneMember', 'interface' => 'Sylius\\Component\\Addressing\\Model\\ZoneMemberInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneMemberType')));
        $instance->addFromAliasAndConfiguration('sylius.inventory_unit', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit', 'interface' => 'Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.taxon', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Taxon', 'repository' => 'Sylius\\Bundle\\TaxonomyBundle\\Doctrine\\ORM\\TaxonRepository', 'interface' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory', 'form' => 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonType'), 'translation' => array('classes' => array('model' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation', 'interface' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonTranslationType'))));
        $instance->addFromAliasAndConfiguration('sylius.taxon_translation', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation', 'interface' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonTranslationType')));
        $instance->addFromAliasAndConfiguration('sylius.admin_user', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\AdminUser', 'repository' => 'Sylius\\Bundle\\UserBundle\\Doctrine\\ORM\\UserRepository', 'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\AdminUserType', 'interface' => 'Sylius\\Component\\User\\Model\\UserInterface', 'controller' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory'), 'templates' => 'SyliusUserBundle:User', 'resetting' => array('token' => array('ttl' => 'P1D', 'length' => 16, 'field_name' => 'passwordResetToken'), 'pin' => array('length' => 4, 'field_name' => 'passwordResetToken')), 'verification' => array('token' => array('length' => 16, 'field_name' => 'emailVerificationToken'))));
        $instance->addFromAliasAndConfiguration('sylius.shop_user', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ShopUser', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\UserRepository', 'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\ShopUserType', 'interface' => 'Sylius\\Component\\User\\Model\\UserInterface', 'controller' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory'), 'templates' => 'SyliusUserBundle:User', 'resetting' => array('token' => array('ttl' => 'P1D', 'length' => 16, 'field_name' => 'passwordResetToken'), 'pin' => array('length' => 4, 'field_name' => 'passwordResetToken')), 'verification' => array('token' => array('length' => 16, 'field_name' => 'emailVerificationToken'))));
        $instance->addFromAliasAndConfiguration('sylius.oauth_user', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\User\\Model\\UserOAuth', 'interface' => 'Sylius\\Component\\User\\Model\\UserOAuthInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory'), 'templates' => 'SyliusUserBundle:User', 'resetting' => array('token' => array('ttl' => 'P1D', 'length' => 16, 'field_name' => 'passwordResetToken'), 'pin' => array('length' => 4, 'field_name' => 'passwordResetToken')), 'verification' => array('token' => array('length' => 16, 'field_name' => 'emailVerificationToken'))));
        $instance->addFromAliasAndConfiguration('sylius.customer', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Customer', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\CustomerRepository', 'interface' => 'Sylius\\Component\\Customer\\Model\\CustomerInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerType')));
        $instance->addFromAliasAndConfiguration('sylius.customer_group', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Customer\\Model\\CustomerGroup', 'interface' => 'Sylius\\Component\\Customer\\Model\\CustomerGroupInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerGroupType')));
        $instance->addFromAliasAndConfiguration('sylius.product_review', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ProductReview', 'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductReviewRepository', 'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ProductReviewType', 'interface' => 'Sylius\\Component\\Review\\Model\\ReviewInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.product_reviewer', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\Customer', 'interface' => 'Sylius\\Component\\Review\\Model\\ReviewerInterface', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.product_taxon', array('driver' => 'doctrine/orm', 'classes' => array('repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductTaxonRepository', 'model' => 'Sylius\\Component\\Core\\Model\\ProductTaxon', 'interface' => 'Sylius\\Component\\Core\\Model\\ProductTaxonInterface', 'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\ProductTaxonController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.product_image', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ProductImage', 'interface' => 'Sylius\\Component\\Core\\Model\\ProductImageInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.taxon_image', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\TaxonImage', 'interface' => 'Sylius\\Component\\Core\\Model\\TaxonImageInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.channel_pricing', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Component\\Core\\Model\\ChannelPricing', 'interface' => 'Sylius\\Component\\Core\\Model\\ChannelPricingInterface', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ChannelPricingType')));
        $instance->addFromAliasAndConfiguration('sylius.payment_security_token', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory')));
        $instance->addFromAliasAndConfiguration('sylius.gateway_config', array('driver' => 'doctrine/orm', 'classes' => array('model' => 'Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig', 'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController', 'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory', 'form' => 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\GatewayConfigType')));

        return $instance;
    }

    /**
     * Gets the 'sylius.theme.asset.path_resolver' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ThemeBundle\Asset\PathResolver A Sylius\Bundle\ThemeBundle\Asset\PathResolver instance
     */
    protected function getSylius_Theme_Asset_PathResolverService()
    {
        return $this->services['sylius.theme.asset.path_resolver'] = new \Sylius\Bundle\ThemeBundle\Asset\PathResolver();
    }

    /**
     * Gets the 'sylius.theme.hierarchy_provider' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ThemeBundle\HierarchyProvider\ThemeHierarchyProvider A Sylius\Bundle\ThemeBundle\HierarchyProvider\ThemeHierarchyProvider instance
     */
    protected function getSylius_Theme_HierarchyProviderService()
    {
        return $this->services['sylius.theme.hierarchy_provider'] = new \Sylius\Bundle\ThemeBundle\HierarchyProvider\ThemeHierarchyProvider();
    }

    /**
     * Gets the 'sylius.theme.templating.file_locator' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ThemeBundle\Templating\Locator\TemplateFileLocator A Sylius\Bundle\ThemeBundle\Templating\Locator\TemplateFileLocator instance
     */
    protected function getSylius_Theme_Templating_FileLocatorService()
    {
        return $this->services['sylius.theme.templating.file_locator'] = new \Sylius\Bundle\ThemeBundle\Templating\Locator\TemplateFileLocator(${($_ = isset($this->services['sylius.theme.templating.file_locator.inner']) ? $this->services['sylius.theme.templating.file_locator.inner'] : $this->getSylius_Theme_Templating_FileLocator_InnerService()) && false ?: '_'}, $this->get('sylius.context.theme'), ${($_ = isset($this->services['sylius.theme.hierarchy_provider']) ? $this->services['sylius.theme.hierarchy_provider'] : $this->getSylius_Theme_HierarchyProviderService()) && false ?: '_'}, ${($_ = isset($this->services['sylius.theme.templating.locator.cached']) ? $this->services['sylius.theme.templating.locator.cached'] : $this->getSylius_Theme_Templating_Locator_CachedService()) && false ?: '_'}, __DIR__);
    }

    /**
     * Gets the 'sylius.theme.templating.file_locator.inner' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator A Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator instance
     */
    protected function getSylius_Theme_Templating_FileLocator_InnerService()
    {
        return $this->services['sylius.theme.templating.file_locator.inner'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator($this->get('file_locator'), __DIR__);
    }

    /**
     * Gets the 'sylius.theme.templating.locator.cached' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Sylius\Bundle\ThemeBundle\Templating\Locator\CachedTemplateLocator A Sylius\Bundle\ThemeBundle\Templating\Locator\CachedTemplateLocator instance
     */
    protected function getSylius_Theme_Templating_Locator_CachedService()
    {
        return $this->services['sylius.theme.templating.locator.cached'] = new \Sylius\Bundle\ThemeBundle\Templating\Locator\CachedTemplateLocator(new \Sylius\Bundle\ThemeBundle\Templating\Locator\TemplateLocator(new \Sylius\Bundle\ThemeBundle\Locator\ResourceLocator($this->get('sylius.theme.locator.application_resource'), $this->get('sylius.theme.locator.bundle_resource'))), $this->get('sylius.theme.templating.cache'));
    }

    /**
     * Gets the 'validator.validator_factory' service.
     *
     * This service is shared.
     * This method always returns the same instance of the service.
     *
     * This service is private.
     * If you want to be able to request this service from the container directly,
     * make it public, otherwise you might end up with broken code.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory A Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory instance
     */
    protected function getValidator_ValidatorFactoryService()
    {
        return $this->services['validator.validator_factory'] = new \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory($this, array('Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\DifferentSourceTargetCurrencyValidator' => 'sylius.validator.different_source_target_currency', 'Sylius\\Bundle\\CurrencyBundle\\Validator\\Constraints\\UniqueCurrencyPairValidator' => 'sylius.validator.unique_currency_pair', 'sylius.validator.product_variant_combination' => 'sylius.validator.product_variant_combination', 'Sylius\\Bundle\\ProductBundle\\Validator\\ProductVariantCombinationValidator' => 'sylius.validator.product_variant_combination', 'sylius.validator.unique_simple_product_code' => 'sylius.validator.product_code_uniqueness', 'Sylius\\Bundle\\ProductBundle\\Validator\\UniqueSimpleProductCodeValidator' => 'sylius.validator.product_code_uniqueness', 'sylius_valid_attribute_value_validator' => 'sylius.validator.locales_aware_valid_attribute_value', 'Sylius\\Bundle\\AttributeBundle\\Validator\\Constraints\\ValidAttributeValueValidator' => 'sylius.validator.valid_attribute_value', 'sylius_promotion_subject_validator' => 'sylius.validator.promotion_subject_coupon', 'Sylius\\Bundle\\PromotionBundle\\Validator\\PromotionSubjectCouponValidator' => 'sylius.validator.promotion_subject_coupon', 'sylius_promotion_date_range_validator' => 'sylius.validator.date_range', 'Sylius\\Bundle\\PromotionBundle\\Validator\\PromotionDateRangeValidator' => 'sylius.validator.date_range', 'sylius_coupon_generation_amount_validator' => 'sylius.validator.promotion_coupon_generation_amount', 'Sylius\\Bundle\\PromotionBundle\\Validator\\CouponGenerationAmountValidator' => 'sylius.validator.promotion_coupon_generation_amount', 'sylius_province_address_validator' => 'sylius.validator.valid_province_address', 'Sylius\\Bundle\\AddressingBundle\\Validator\\Constraints\\ProvinceAddressConstraintValidator' => 'sylius.validator.valid_province_address', 'sylius_in_stock' => 'sylius.validator.in_stock', 'Sylius\\Bundle\\InventoryBundle\\Validator\\Constraints\\InStockValidator' => 'sylius.validator.in_stock', 'sylius_has_enabled_entity' => 'sylius.validator.has_enabled_entity', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasEnabledEntityValidator' => 'sylius.validator.has_enabled_entity', 'registered_user_validator' => 'sylius.validator.unique.registered_user', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\RegisteredUserValidator' => 'sylius.validator.unique.registered_user', 'sylius_cart_item_availability' => 'sylius.validator.cart_item_availability', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\CartItemAvailabilityValidator' => 'sylius.validator.cart_item_availability', 'sylius_has_all_prices_defined' => 'sylius.validator.has_all_prices_defined', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllPricesDefinedValidator' => 'sylius.validator.has_all_prices_defined', 'sylius_has_all_variant_prices_defined' => 'sylius.validator.has_all_variant_prices_defined', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\HasAllVariantPricesDefinedValidator' => 'sylius.validator.has_all_variant_prices_defined', 'sylius_unique_reviewer_email_validator' => 'sylius.validator.unique_reviewer_email', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\UniqueReviewerEmailValidator' => 'sylius.validator.unique_reviewer_email', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\LocalesAwareValidAttributeValueValidator' => 'sylius.validator.locales_aware_valid_attribute_value', 'sylius_order_shipping_method_eligibility_validator' => 'sylius.validator.shipping_method_integrity', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderShippingMethodEligibilityValidator' => 'sylius.validator.shipping_method_integrity', 'sylius_order_payment_method_eligibility_validator' => 'sylius.validator.payment_method_integrity', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderPaymentMethodEligibilityValidator' => 'sylius.validator.payment_method_integrity', 'sylius_order_product_eligibility_validator' => 'sylius.validator.product_integrity', 'Sylius\\Bundle\\CoreBundle\\Validator\\Constraints\\OrderProductEligibilityValidator' => 'sylius.validator.product_integrity', 'doctrine.orm.validator.unique' => 'doctrine.orm.validator.unique', 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => 'doctrine.orm.validator.unique', 'validator.expression' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => 'validator.email', 'security.validator.user_password' => 'security.validator.user_password', 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => 'security.validator.user_password', 'sonata.core.validator.inline' => 'sonata.core.validator.inline', 'Sonata\\CoreBundle\\Validator\\InlineValidator' => 'sonata.core.validator.inline'));
    }

    /**
     * {@inheritdoc}
     */
    public function getParameter($name)
    {
        $name = strtolower($name);

        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters) || isset($this->loadedDynamicParameters[$name]))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    /**
     * {@inheritdoc}
     */
    public function hasParameter($name)
    {
        $name = strtolower($name);

        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters) || isset($this->loadedDynamicParameters[$name]);
    }

    /**
     * {@inheritdoc}
     */
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    /**
     * {@inheritdoc}
     */
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = array(
        'kernel.root_dir' => false,
        'kernel.logs_dir' => false,
        'kernel.bundles_metadata' => false,
        'router.resource' => false,
        'doctrine_migrations.dir_name' => false,
    );
    private $dynamicParameters = array();

    /**
     * Computes a dynamic parameter.
     *
     * @param string The name of the dynamic parameter to load
     *
     * @return mixed The value of the dynamic parameter
     *
     * @throws InvalidArgumentException When the dynamic parameter does not exist
     */
    private function getDynamicParameter($name)
    {
        switch ($name) {
            case 'kernel.root_dir': $value = ($this->targetDirs[3].'/app'); break;
            case 'kernel.logs_dir': $value = ($this->targetDirs[2].'/logs'); break;
            case 'kernel.bundles_metadata': $value = array(
                'SyliusOrderBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/OrderBundle'),
                    'namespace' => 'Sylius\\Bundle\\OrderBundle',
                ),
                'SyliusMoneyBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/MoneyBundle'),
                    'namespace' => 'Sylius\\Bundle\\MoneyBundle',
                ),
                'SyliusCurrencyBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CurrencyBundle'),
                    'namespace' => 'Sylius\\Bundle\\CurrencyBundle',
                ),
                'SyliusLocaleBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/LocaleBundle'),
                    'namespace' => 'Sylius\\Bundle\\LocaleBundle',
                ),
                'SyliusProductBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ProductBundle'),
                    'namespace' => 'Sylius\\Bundle\\ProductBundle',
                ),
                'SyliusChannelBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ChannelBundle'),
                    'namespace' => 'Sylius\\Bundle\\ChannelBundle',
                ),
                'SyliusAttributeBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AttributeBundle'),
                    'namespace' => 'Sylius\\Bundle\\AttributeBundle',
                ),
                'SyliusTaxationBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxationBundle'),
                    'namespace' => 'Sylius\\Bundle\\TaxationBundle',
                ),
                'SyliusShippingBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShippingBundle'),
                    'namespace' => 'Sylius\\Bundle\\ShippingBundle',
                ),
                'SyliusPaymentBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PaymentBundle'),
                    'namespace' => 'Sylius\\Bundle\\PaymentBundle',
                ),
                'SyliusMailerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/MailerBundle'),
                    'namespace' => 'Sylius\\Bundle\\MailerBundle',
                ),
                'SyliusPromotionBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PromotionBundle'),
                    'namespace' => 'Sylius\\Bundle\\PromotionBundle',
                ),
                'SyliusAddressingBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AddressingBundle'),
                    'namespace' => 'Sylius\\Bundle\\AddressingBundle',
                ),
                'SyliusInventoryBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/InventoryBundle'),
                    'namespace' => 'Sylius\\Bundle\\InventoryBundle',
                ),
                'SyliusTaxonomyBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/TaxonomyBundle'),
                    'namespace' => 'Sylius\\Bundle\\TaxonomyBundle',
                ),
                'SyliusUserBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UserBundle'),
                    'namespace' => 'Sylius\\Bundle\\UserBundle',
                ),
                'SyliusCustomerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CustomerBundle'),
                    'namespace' => 'Sylius\\Bundle\\CustomerBundle',
                ),
                'SyliusUiBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/UiBundle'),
                    'namespace' => 'Sylius\\Bundle\\UiBundle',
                ),
                'SyliusReviewBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ReviewBundle'),
                    'namespace' => 'Sylius\\Bundle\\ReviewBundle',
                ),
                'SyliusCoreBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/CoreBundle'),
                    'namespace' => 'Sylius\\Bundle\\CoreBundle',
                ),
                'SyliusResourceBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ResourceBundle'),
                    'namespace' => 'Sylius\\Bundle\\ResourceBundle',
                ),
                'SyliusGridBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/GridBundle'),
                    'namespace' => 'Sylius\\Bundle\\GridBundle',
                ),
                'winzouStateMachineBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/winzou/state-machine-bundle'),
                    'namespace' => 'winzou\\Bundle\\StateMachineBundle',
                ),
                'DoctrineBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineBundle',
                ),
                'DoctrineCacheBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-cache-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineCacheBundle',
                ),
                'FrameworkBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ),
                'MonologBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ),
                'SecurityBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle'),
                    'namespace' => 'Symfony\\Bundle\\SecurityBundle',
                ),
                'SwiftmailerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/swiftmailer-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SwiftmailerBundle',
                ),
                'TwigBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ),
                'SonataCoreBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sonata-project/core-bundle'),
                    'namespace' => 'Sonata\\CoreBundle',
                ),
                'SonataBlockBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sonata-project/block-bundle'),
                    'namespace' => 'Sonata\\BlockBundle',
                ),
                'SonataIntlBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sonata-project/intl-bundle'),
                    'namespace' => 'Sonata\\IntlBundle',
                ),
                'BazingaHateoasBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/willdurand/hateoas-bundle/Bazinga/Bundle/HateoasBundle'),
                    'namespace' => 'Bazinga\\Bundle\\HateoasBundle',
                ),
                'JMSSerializerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/jms/serializer-bundle/JMS/SerializerBundle'),
                    'namespace' => 'JMS\\SerializerBundle',
                ),
                'FOSRestBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/friendsofsymfony/rest-bundle'),
                    'namespace' => 'FOS\\RestBundle',
                ),
                'KnpGaufretteBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/knplabs/knp-gaufrette-bundle'),
                    'namespace' => 'Knp\\Bundle\\GaufretteBundle',
                ),
                'KnpMenuBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/knplabs/knp-menu-bundle'),
                    'namespace' => 'Knp\\Bundle\\MenuBundle',
                ),
                'LiipImagineBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/liip/imagine-bundle'),
                    'namespace' => 'Liip\\ImagineBundle',
                ),
                'PayumBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/payum/payum-bundle'),
                    'namespace' => 'Payum\\Bundle\\PayumBundle',
                ),
                'StofDoctrineExtensionsBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/stof/doctrine-extensions-bundle'),
                    'namespace' => 'Stof\\DoctrineExtensionsBundle',
                ),
                'WhiteOctoberPagerfantaBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/white-october/pagerfanta-bundle'),
                    'namespace' => 'WhiteOctober\\PagerfantaBundle',
                ),
                'DoctrineMigrationsBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-migrations-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\MigrationsBundle',
                ),
                'DoctrineFixturesBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/doctrine/doctrine-fixtures-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\FixturesBundle',
                ),
                'SyliusFixturesBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/FixturesBundle'),
                    'namespace' => 'Sylius\\Bundle\\FixturesBundle',
                ),
                'SyliusPayumBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/PayumBundle'),
                    'namespace' => 'Sylius\\Bundle\\PayumBundle',
                ),
                'SyliusThemeBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ThemeBundle'),
                    'namespace' => 'Sylius\\Bundle\\ThemeBundle',
                ),
                'DebugBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle'),
                    'namespace' => 'Symfony\\Bundle\\DebugBundle',
                ),
                'WebProfilerBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle'),
                    'namespace' => 'Symfony\\Bundle\\WebProfilerBundle',
                ),
                'SensioDistributionBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sensio/distribution-bundle'),
                    'namespace' => 'Sensio\\Bundle\\DistributionBundle',
                ),
                'CatalogPromotionPlugin' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/src'),
                    'namespace' => 'Kooli\\CatalogPromotion',
                ),
                'SyliusAdminBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/AdminBundle'),
                    'namespace' => 'Sylius\\Bundle\\AdminBundle',
                ),
                'SyliusShopBundle' => array(
                    'parent' => NULL,
                    'path' => ($this->targetDirs[5].'/vendor/sylius/sylius/src/Sylius/Bundle/ShopBundle'),
                    'namespace' => 'Sylius\\Bundle\\ShopBundle',
                ),
            ); break;
            case 'router.resource': $value = ($this->targetDirs[3].'/app/config/routing.yml'); break;
            case 'doctrine_migrations.dir_name': $value = ($this->targetDirs[3].'/app/DoctrineMigrations'); break;
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    /**
     * Gets the default parameters.
     *
     * @return array An array of the default parameters
     */
    protected function getDefaultParameters()
    {
        return array(
            'kernel.environment' => 'test',
            'kernel.debug' => true,
            'kernel.name' => 'app',
            'kernel.cache_dir' => __DIR__,
            'kernel.bundles' => array(
                'SyliusOrderBundle' => 'Sylius\\Bundle\\OrderBundle\\SyliusOrderBundle',
                'SyliusMoneyBundle' => 'Sylius\\Bundle\\MoneyBundle\\SyliusMoneyBundle',
                'SyliusCurrencyBundle' => 'Sylius\\Bundle\\CurrencyBundle\\SyliusCurrencyBundle',
                'SyliusLocaleBundle' => 'Sylius\\Bundle\\LocaleBundle\\SyliusLocaleBundle',
                'SyliusProductBundle' => 'Sylius\\Bundle\\ProductBundle\\SyliusProductBundle',
                'SyliusChannelBundle' => 'Sylius\\Bundle\\ChannelBundle\\SyliusChannelBundle',
                'SyliusAttributeBundle' => 'Sylius\\Bundle\\AttributeBundle\\SyliusAttributeBundle',
                'SyliusTaxationBundle' => 'Sylius\\Bundle\\TaxationBundle\\SyliusTaxationBundle',
                'SyliusShippingBundle' => 'Sylius\\Bundle\\ShippingBundle\\SyliusShippingBundle',
                'SyliusPaymentBundle' => 'Sylius\\Bundle\\PaymentBundle\\SyliusPaymentBundle',
                'SyliusMailerBundle' => 'Sylius\\Bundle\\MailerBundle\\SyliusMailerBundle',
                'SyliusPromotionBundle' => 'Sylius\\Bundle\\PromotionBundle\\SyliusPromotionBundle',
                'SyliusAddressingBundle' => 'Sylius\\Bundle\\AddressingBundle\\SyliusAddressingBundle',
                'SyliusInventoryBundle' => 'Sylius\\Bundle\\InventoryBundle\\SyliusInventoryBundle',
                'SyliusTaxonomyBundle' => 'Sylius\\Bundle\\TaxonomyBundle\\SyliusTaxonomyBundle',
                'SyliusUserBundle' => 'Sylius\\Bundle\\UserBundle\\SyliusUserBundle',
                'SyliusCustomerBundle' => 'Sylius\\Bundle\\CustomerBundle\\SyliusCustomerBundle',
                'SyliusUiBundle' => 'Sylius\\Bundle\\UiBundle\\SyliusUiBundle',
                'SyliusReviewBundle' => 'Sylius\\Bundle\\ReviewBundle\\SyliusReviewBundle',
                'SyliusCoreBundle' => 'Sylius\\Bundle\\CoreBundle\\SyliusCoreBundle',
                'SyliusResourceBundle' => 'Sylius\\Bundle\\ResourceBundle\\SyliusResourceBundle',
                'SyliusGridBundle' => 'Sylius\\Bundle\\GridBundle\\SyliusGridBundle',
                'winzouStateMachineBundle' => 'winzou\\Bundle\\StateMachineBundle\\winzouStateMachineBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'DoctrineCacheBundle' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\DoctrineCacheBundle',
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'SonataCoreBundle' => 'Sonata\\CoreBundle\\SonataCoreBundle',
                'SonataBlockBundle' => 'Sonata\\BlockBundle\\SonataBlockBundle',
                'SonataIntlBundle' => 'Sonata\\IntlBundle\\SonataIntlBundle',
                'BazingaHateoasBundle' => 'Bazinga\\Bundle\\HateoasBundle\\BazingaHateoasBundle',
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'FOSRestBundle' => 'FOS\\RestBundle\\FOSRestBundle',
                'KnpGaufretteBundle' => 'Knp\\Bundle\\GaufretteBundle\\KnpGaufretteBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle',
                'PayumBundle' => 'Payum\\Bundle\\PayumBundle\\PayumBundle',
                'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle',
                'WhiteOctoberPagerfantaBundle' => 'WhiteOctober\\PagerfantaBundle\\WhiteOctoberPagerfantaBundle',
                'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle',
                'DoctrineFixturesBundle' => 'Doctrine\\Bundle\\FixturesBundle\\DoctrineFixturesBundle',
                'SyliusFixturesBundle' => 'Sylius\\Bundle\\FixturesBundle\\SyliusFixturesBundle',
                'SyliusPayumBundle' => 'Sylius\\Bundle\\PayumBundle\\SyliusPayumBundle',
                'SyliusThemeBundle' => 'Sylius\\Bundle\\ThemeBundle\\SyliusThemeBundle',
                'DebugBundle' => 'Symfony\\Bundle\\DebugBundle\\DebugBundle',
                'WebProfilerBundle' => 'Symfony\\Bundle\\WebProfilerBundle\\WebProfilerBundle',
                'SensioDistributionBundle' => 'Sensio\\Bundle\\DistributionBundle\\SensioDistributionBundle',
                'CatalogPromotionPlugin' => 'Kooli\\CatalogPromotion\\CatalogPromotionPlugin',
                'SyliusAdminBundle' => 'Sylius\\Bundle\\AdminBundle\\SyliusAdminBundle',
                'SyliusShopBundle' => 'Sylius\\Bundle\\ShopBundle\\SyliusShopBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'appTestDebugProjectContainer',
            'sylius.cache' => array(
                'type' => 'file_system',
            ),
            'sylius.uploader.filesystem' => 'sylius_image',
            'locale' => 'en_US',
            'secret' => 'Three can keep a secret, if two of them are dead.',
            'sylius.repository.order.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\OrderRepository',
            'sylius.repository.order_item.class' => 'Sylius\\Bundle\\OrderBundle\\Doctrine\\ORM\\OrderItemRepository',
            'sylius_order.driver.doctrine/orm' => true,
            'sylius_order.driver' => 'doctrine/orm',
            'sylius.resources' => array(
                'sylius.order' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Order',
                        'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\OrderController',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\OrderRepository',
                        'interface' => 'Sylius\\Component\\Order\\Model\\OrderInterface',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderType',
                    ),
                ),
                'sylius.order_item' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\OrderItem',
                        'interface' => 'Sylius\\Component\\Order\\Model\\OrderItemInterface',
                        'controller' => 'Sylius\\Bundle\\OrderBundle\\Controller\\OrderItemController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\OrderBundle\\Form\\Type\\OrderItemType',
                    ),
                ),
                'sylius.order_item_unit' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit',
                        'interface' => 'Sylius\\Component\\Order\\Model\\OrderItemUnitInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Order\\Factory\\OrderItemUnitFactory',
                    ),
                ),
                'sylius.order_sequence' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\OrderSequence',
                        'interface' => 'Sylius\\Component\\Order\\Model\\OrderSequenceInterface',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.adjustment' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Order\\Model\\Adjustment',
                        'interface' => 'Sylius\\Component\\Order\\Model\\AdjustmentInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.currency' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Currency\\Model\\Currency',
                        'interface' => 'Sylius\\Component\\Currency\\Model\\CurrencyInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\CurrencyType',
                    ),
                ),
                'sylius.exchange_rate' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                        'interface' => 'Sylius\\Component\\Currency\\Model\\ExchangeRateInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\CurrencyBundle\\Form\\Type\\ExchangeRateType',
                    ),
                ),
                'sylius.locale' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Locale\\Model\\Locale',
                        'interface' => 'Sylius\\Component\\Locale\\Model\\LocaleInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\LocaleBundle\\Form\\Type\\LocaleType',
                    ),
                ),
                'sylius.product' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Product',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductRepository',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Core\\Model\\ProductTranslation',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType',
                        ),
                    ),
                ),
                'sylius.product_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ProductTranslation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductTranslationType',
                    ),
                ),
                'sylius.product_variant' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                        'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\ProductVariantController',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductVariantRepository',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductVariantInterface',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslation',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantTranslationType',
                        ),
                    ),
                ),
                'sylius.product_variant_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductVariantTranslationType',
                    ),
                ),
                'sylius.product_option' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductOptionRepository',
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductOption',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionTranslationType',
                        ),
                    ),
                ),
                'sylius.product_option_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionTranslationType',
                    ),
                ),
                'sylius.product_association_type' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'repository' => 'Sylius\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductAssociationTypeRepository',
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeTranslationType',
                        ),
                    ),
                ),
                'sylius.product_association_type_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationTypeTranslationType',
                    ),
                ),
                'sylius.product_option_value' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductOptionValue',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueTranslationType',
                        ),
                    ),
                ),
                'sylius.product_option_value_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductOptionValueTranslationType',
                    ),
                ),
                'sylius.product_association' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductAssociation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductAssociationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAssociationType',
                    ),
                ),
                'sylius.channel' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Channel',
                        'interface' => 'Sylius\\Component\\Channel\\Model\\ChannelInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ChannelBundle\\Form\\Type\\ChannelType',
                    ),
                ),
                'sylius.product_attribute' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductAttribute',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeInterface',
                        'controller' => 'Sylius\\Bundle\\ProductBundle\\Controller\\ProductAttributeController',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeType',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                    ),
                ),
                'sylius.product_attribute_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.product_attribute_value' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValue',
                        'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValueInterface',
                        'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeValueType',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.tax_rate' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\TaxRate',
                        'interface' => 'Sylius\\Component\\Taxation\\Model\\TaxRateInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxRateType',
                    ),
                ),
                'sylius.tax_category' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                        'interface' => 'Sylius\\Component\\Taxation\\Model\\TaxCategoryInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\TaxationBundle\\Form\\Type\\TaxCategoryType',
                    ),
                ),
                'sylius.shipment' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Shipment',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShipmentRepository',
                        'interface' => 'Sylius\\Component\\Shipping\\Model\\ShipmentInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShipmentType',
                    ),
                ),
                'sylius.shipment_unit' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit',
                        'interface' => 'Sylius\\Component\\Shipping\\Model\\ShipmentUnitInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.shipping_method' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ShippingMethod',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShippingMethodRepository',
                        'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                            'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodTranslationType',
                        ),
                    ),
                ),
                'sylius.shipping_method_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
                        'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingMethodTranslationType',
                    ),
                ),
                'sylius.shipping_category' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShippingCategoryRepository',
                        'model' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                        'interface' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategoryInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\ShippingBundle\\Form\\Type\\ShippingCategoryType',
                    ),
                ),
                'sylius.payment' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Payment',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PaymentRepository',
                        'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentType',
                    ),
                ),
                'sylius.payment_method' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\PaymentMethod',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PaymentMethodRepository',
                        'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\PaymentMethodController',
                        'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodInterface',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                            'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodTranslationType',
                        ),
                    ),
                ),
                'sylius.payment_method_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
                        'interface' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PaymentBundle\\Form\\Type\\PaymentMethodTranslationType',
                    ),
                ),
                'sylius.promotion_subject' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Order',
                    ),
                ),
                'sylius.promotion' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Promotion',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PromotionRepository',
                        'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionType',
                    ),
                ),
                'sylius.promotion_coupon' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\PromotionCoupon',
                        'repository' => 'Sylius\\Bundle\\PromotionBundle\\Doctrine\\ORM\\PromotionCouponRepository',
                        'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionCouponInterface',
                        'controller' => 'Sylius\\Bundle\\PromotionBundle\\Controller\\PromotionCouponController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionCouponType',
                    ),
                ),
                'sylius.promotion_rule' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Promotion\\Model\\PromotionRule',
                        'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionRuleInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionRuleType',
                    ),
                ),
                'sylius.promotion_action' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Promotion\\Model\\PromotionAction',
                        'interface' => 'Sylius\\Component\\Promotion\\Model\\PromotionActionInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PromotionBundle\\Form\\Type\\PromotionActionType',
                    ),
                ),
                'sylius.address' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Address',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\AddressRepository',
                        'interface' => 'Sylius\\Component\\Addressing\\Model\\AddressInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\AddressType',
                    ),
                ),
                'sylius.address_log_entry' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Addressing\\Model\\AddressLogEntry',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'repository' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\ResourceLogEntryRepository',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.country' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Addressing\\Model\\Country',
                        'interface' => 'Sylius\\Component\\Addressing\\Model\\CountryInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\CountryType',
                    ),
                ),
                'sylius.province' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Addressing\\Model\\Province',
                        'interface' => 'Sylius\\Component\\Addressing\\Model\\ProvinceInterface',
                        'controller' => 'Sylius\\Bundle\\AddressingBundle\\Controller\\ProvinceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ProvinceType',
                    ),
                ),
                'sylius.zone' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Addressing\\Model\\Zone',
                        'interface' => 'Sylius\\Component\\Addressing\\Model\\ZoneInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneType',
                    ),
                ),
                'sylius.zone_member' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Addressing\\Model\\ZoneMember',
                        'interface' => 'Sylius\\Component\\Addressing\\Model\\ZoneMemberInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\AddressingBundle\\Form\\Type\\ZoneMemberType',
                    ),
                ),
                'sylius.inventory_unit' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit',
                        'interface' => 'Sylius\\Component\\Inventory\\Model\\InventoryUnitInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.taxon' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Taxon',
                        'repository' => 'Sylius\\Bundle\\TaxonomyBundle\\Doctrine\\ORM\\TaxonRepository',
                        'interface' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        'form' => 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonType',
                    ),
                    'translation' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                            'interface' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            'form' => 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonTranslationType',
                        ),
                    ),
                ),
                'sylius.taxon_translation' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
                        'interface' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslationInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\TaxonomyBundle\\Form\\Type\\TaxonTranslationType',
                    ),
                ),
                'sylius.admin_user' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\AdminUser',
                        'repository' => 'Sylius\\Bundle\\UserBundle\\Doctrine\\ORM\\UserRepository',
                        'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\AdminUserType',
                        'interface' => 'Sylius\\Component\\User\\Model\\UserInterface',
                        'controller' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                    'templates' => 'SyliusUserBundle:User',
                    'resetting' => array(
                        'token' => array(
                            'ttl' => 'P1D',
                            'length' => 16,
                            'field_name' => 'passwordResetToken',
                        ),
                        'pin' => array(
                            'length' => 4,
                            'field_name' => 'passwordResetToken',
                        ),
                    ),
                    'verification' => array(
                        'token' => array(
                            'length' => 16,
                            'field_name' => 'emailVerificationToken',
                        ),
                    ),
                ),
                'sylius.shop_user' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ShopUser',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\UserRepository',
                        'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\ShopUserType',
                        'interface' => 'Sylius\\Component\\User\\Model\\UserInterface',
                        'controller' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                    'templates' => 'SyliusUserBundle:User',
                    'resetting' => array(
                        'token' => array(
                            'ttl' => 'P1D',
                            'length' => 16,
                            'field_name' => 'passwordResetToken',
                        ),
                        'pin' => array(
                            'length' => 4,
                            'field_name' => 'passwordResetToken',
                        ),
                    ),
                    'verification' => array(
                        'token' => array(
                            'length' => 16,
                            'field_name' => 'emailVerificationToken',
                        ),
                    ),
                ),
                'sylius.oauth_user' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\User\\Model\\UserOAuth',
                        'interface' => 'Sylius\\Component\\User\\Model\\UserOAuthInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                    'templates' => 'SyliusUserBundle:User',
                    'resetting' => array(
                        'token' => array(
                            'ttl' => 'P1D',
                            'length' => 16,
                            'field_name' => 'passwordResetToken',
                        ),
                        'pin' => array(
                            'length' => 4,
                            'field_name' => 'passwordResetToken',
                        ),
                    ),
                    'verification' => array(
                        'token' => array(
                            'length' => 16,
                            'field_name' => 'emailVerificationToken',
                        ),
                    ),
                ),
                'sylius.customer' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Customer',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\CustomerRepository',
                        'interface' => 'Sylius\\Component\\Customer\\Model\\CustomerInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerType',
                    ),
                ),
                'sylius.customer_group' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                        'interface' => 'Sylius\\Component\\Customer\\Model\\CustomerGroupInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\CustomerBundle\\Form\\Type\\CustomerGroupType',
                    ),
                ),
                'sylius.product_review' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ProductReview',
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductReviewRepository',
                        'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ProductReviewType',
                        'interface' => 'Sylius\\Component\\Review\\Model\\ReviewInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.product_reviewer' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\Customer',
                        'interface' => 'Sylius\\Component\\Review\\Model\\ReviewerInterface',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.product_taxon' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductTaxonRepository',
                        'model' => 'Sylius\\Component\\Core\\Model\\ProductTaxon',
                        'interface' => 'Sylius\\Component\\Core\\Model\\ProductTaxonInterface',
                        'controller' => 'Sylius\\Bundle\\CoreBundle\\Controller\\ProductTaxonController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.product_image' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ProductImage',
                        'interface' => 'Sylius\\Component\\Core\\Model\\ProductImageInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.taxon_image' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\TaxonImage',
                        'interface' => 'Sylius\\Component\\Core\\Model\\TaxonImageInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.channel_pricing' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
                        'interface' => 'Sylius\\Component\\Core\\Model\\ChannelPricingInterface',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ChannelPricingType',
                    ),
                ),
                'sylius.payment_security_token' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                    ),
                ),
                'sylius.gateway_config' => array(
                    'driver' => 'doctrine/orm',
                    'classes' => array(
                        'model' => 'Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig',
                        'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                        'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        'form' => 'Sylius\\Bundle\\PayumBundle\\Form\\Type\\GatewayConfigType',
                    ),
                ),
            ),
            'sylius.model.order.class' => 'Sylius\\Component\\Core\\Model\\Order',
            'sylius.controller.order.class' => 'Sylius\\Bundle\\CoreBundle\\Controller\\OrderController',
            'sylius.factory.order.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.order_item.class' => 'Sylius\\Component\\Core\\Model\\OrderItem',
            'sylius.controller.order_item.class' => 'Sylius\\Bundle\\OrderBundle\\Controller\\OrderItemController',
            'sylius.factory.order_item.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.order_item_unit.class' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit',
            'sylius.controller.order_item_unit.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.order_item_unit.class' => 'Sylius\\Component\\Order\\Factory\\OrderItemUnitFactory',
            'sylius.model.order_sequence.class' => 'Sylius\\Component\\Core\\Model\\OrderSequence',
            'sylius.factory.order_sequence.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.adjustment.class' => 'Sylius\\Component\\Order\\Model\\Adjustment',
            'sylius.controller.adjustment.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.adjustment.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.order.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.order_item.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.cart.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.cart_item.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius_order.cart_expiration_period' => '2 days',
            'sylius_order.order_expiration_period' => '5 days',
            'sylius_money.locale' => 'en_US',
            'sylius.repository.exchange_rate.class' => 'Sylius\\Bundle\\CurrencyBundle\\Doctrine\\ORM\\ExchangeRateRepository',
            'sylius_currency.driver.doctrine/orm' => true,
            'sylius_currency.driver' => 'doctrine/orm',
            'sylius.model.currency.class' => 'Sylius\\Component\\Currency\\Model\\Currency',
            'sylius.controller.currency.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.currency.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.exchange_rate.class' => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
            'sylius.controller.exchange_rate.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.exchange_rate.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.currency.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.exchange_rate.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius_locale.driver.doctrine/orm' => true,
            'sylius_locale.driver' => 'doctrine/orm',
            'sylius.model.locale.class' => 'Sylius\\Component\\Locale\\Model\\Locale',
            'sylius.controller.locale.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.locale.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.locale.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius_locale.locale' => 'en_US',
            'sylius.repository.product.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductRepository',
            'sylius.repository.product_variant.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductVariantRepository',
            'sylius.repository.product_attribute.class' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'sylius.repository.product_option.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductOptionRepository',
            'sylius_product.driver.doctrine/orm' => true,
            'sylius_product.driver' => 'doctrine/orm',
            'sylius.model.product.class' => 'Sylius\\Component\\Core\\Model\\Product',
            'sylius.controller.product.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.product_translation.class' => 'Sylius\\Component\\Core\\Model\\ProductTranslation',
            'sylius.controller.product_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.product_variant.class' => 'Sylius\\Component\\Core\\Model\\ProductVariant',
            'sylius.controller.product_variant.class' => 'Sylius\\Bundle\\CoreBundle\\Controller\\ProductVariantController',
            'sylius.factory.product_variant.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.product_variant_translation.class' => 'Sylius\\Component\\Product\\Model\\ProductVariantTranslation',
            'sylius.controller.product_variant_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_variant_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.product_option.class' => 'Sylius\\Component\\Product\\Model\\ProductOption',
            'sylius.controller.product_option.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_option.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.product_option_translation.class' => 'Sylius\\Component\\Product\\Model\\ProductOptionTranslation',
            'sylius.controller.product_option_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_option_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.product_association_type.class' => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
            'sylius.controller.product_association_type.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_association_type.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.repository.product_association_type.class' => 'Sylius\\Bundle\\ProductBundle\\Doctrine\\ORM\\ProductAssociationTypeRepository',
            'sylius.model.product_association_type_translation.class' => 'Sylius\\Component\\Product\\Model\\ProductAssociationTypeTranslation',
            'sylius.controller.product_association_type_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_association_type_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.product_option_value.class' => 'Sylius\\Component\\Product\\Model\\ProductOptionValue',
            'sylius.controller.product_option_value.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_option_value.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.product_option_value_translation.class' => 'Sylius\\Component\\Product\\Model\\ProductOptionValueTranslation',
            'sylius.controller.product_option_value_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_option_value_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.product_association.class' => 'Sylius\\Component\\Product\\Model\\ProductAssociation',
            'sylius.controller.product_association.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_association.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.product_association.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_association_type.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_association_type_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_attribute.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_attribute_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_attribute_value.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_generate_variants.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_option.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_option_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_option_value.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_option_value_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_variant.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_variant_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_variant_generation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.repository.channel.class' => 'Sylius\\Bundle\\ChannelBundle\\Doctrine\\ORM\\ChannelRepository',
            'sylius_channel.driver.doctrine/orm' => true,
            'sylius_channel.driver' => 'doctrine/orm',
            'sylius.model.channel.class' => 'Sylius\\Component\\Core\\Model\\Channel',
            'sylius.controller.channel.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.channel.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.channel.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.model.attribute.interface' => 'Sylius\\Component\\Attribute\\AttributeType\\AttributeTypeInterface',
            'sylius.attribute.subjects' => array(
                'product' => array(
                    'subject' => 'Sylius\\Component\\Core\\Model\\Product',
                    'attribute' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductAttribute',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeInterface',
                            'controller' => 'Sylius\\Bundle\\ProductBundle\\Controller\\ProductAttributeController',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeType',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
                        ),
                        'translation' => array(
                            'classes' => array(
                                'model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation',
                                'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslationInterface',
                                'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeTranslationType',
                                'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                                'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                            ),
                        ),
                    ),
                    'attribute_value' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValue',
                            'interface' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValueInterface',
                            'form' => 'Sylius\\Bundle\\ProductBundle\\Form\\Type\\ProductAttributeValueType',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                    ),
                ),
            ),
            'sylius_attribute.driver.doctrine/orm' => true,
            'sylius_attribute.driver' => 'doctrine/orm',
            'sylius.model.product_attribute.class' => 'Sylius\\Component\\Product\\Model\\ProductAttribute',
            'sylius.controller.product_attribute.class' => 'Sylius\\Bundle\\ProductBundle\\Controller\\ProductAttributeController',
            'sylius.factory.product_attribute.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.product_attribute_translation.class' => 'Sylius\\Component\\Product\\Model\\ProductAttributeTranslation',
            'sylius.controller.product_attribute_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_attribute_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.product_attribute_value.class' => 'Sylius\\Component\\Product\\Model\\ProductAttributeValue',
            'sylius.controller.product_attribute_value.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_attribute_value.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.tax_category.class' => 'Sylius\\Bundle\\TaxationBundle\\Doctrine\\ORM\\TaxCategoryRepository',
            'sylius_taxation.driver.doctrine/orm' => true,
            'sylius_taxation.driver' => 'doctrine/orm',
            'sylius.model.tax_rate.class' => 'Sylius\\Component\\Core\\Model\\TaxRate',
            'sylius.controller.tax_rate.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.tax_rate.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.tax_category.class' => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
            'sylius.controller.tax_category.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.tax_category.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.tax_category.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.tax_rate.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.tax_calculation_strategy.interface' => 'Sylius\\Component\\Core\\Taxation\\Strategy\\TaxCalculationStrategyInterface',
            'sylius.tax_calculator.interface' => 'Sylius\\Component\\Taxation\\Calculator\\CalculatorInterface',
            'sylius.repository.shipping_method.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShippingMethodRepository',
            'sylius_shipping.driver.doctrine/orm' => true,
            'sylius_shipping.driver' => 'doctrine/orm',
            'sylius.model.shipment.class' => 'Sylius\\Component\\Core\\Model\\Shipment',
            'sylius.controller.shipment.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.shipment.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.shipment.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShipmentRepository',
            'sylius.model.shipment_unit.class' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit',
            'sylius.controller.shipment_unit.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.shipment_unit.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.shipping_method.class' => 'Sylius\\Component\\Core\\Model\\ShippingMethod',
            'sylius.controller.shipping_method.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.shipping_method.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.shipping_method_translation.class' => 'Sylius\\Component\\Shipping\\Model\\ShippingMethodTranslation',
            'sylius.controller.shipping_method_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.shipping_method_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.shipping_category.class' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
            'sylius.controller.shipping_category.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.shipping_category.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.shipping_category.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ShippingCategoryRepository',
            'sylius.form.type.shipping_method.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.shipping_method_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.shipping_category.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.shipment.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.shipment_ship.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.shipping_methods_resolver.interface' => 'Sylius\\Component\\Shipping\\Resolver\\ShippingMethodsResolverInterface',
            'sylius_payment.driver.doctrine/orm' => true,
            'sylius_payment.driver' => 'doctrine/orm',
            'sylius.model.payment.class' => 'Sylius\\Component\\Core\\Model\\Payment',
            'sylius.controller.payment.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.payment.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.payment.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PaymentRepository',
            'sylius.model.payment_method.class' => 'Sylius\\Component\\Core\\Model\\PaymentMethod',
            'sylius.controller.payment_method.class' => 'Sylius\\Bundle\\CoreBundle\\Controller\\PaymentMethodController',
            'sylius.factory.payment_method.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.repository.payment_method.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PaymentMethodRepository',
            'sylius.model.payment_method_translation.class' => 'Sylius\\Component\\Payment\\Model\\PaymentMethodTranslation',
            'sylius.controller.payment_method_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.payment_method_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.payment.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.payment_method.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.payment_method_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.payment_methods_resolver.interface' => 'Sylius\\Component\\Payment\\Resolver\\PaymentMethodsResolverInterface',
            'sylius.payment_gateways' => array(
                'offline' => 'sylius.payum_gateway.offline',
            ),
            'sylius.mailer.sender_name' => 'Example.com',
            'sylius.mailer.sender_address' => 'no-reply@example.com',
            'sylius.mailer.emails' => array(
                'shipment_confirmation' => array(
                    'subject' => 'sylius.emails.shipment_confirmation.subject',
                    'template' => 'SyliusAdminBundle:Email:shipmentConfirmation.html.twig',
                    'enabled' => true,
                ),
            ),
            'sylius.mailer.templates' => array(

            ),
            'sylius.form.type.promotion.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.promotion_action.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.promotion_rule.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.promotion_coupon.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.repository.promotion.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\PromotionRepository',
            'sylius.repository.promotion_coupon.class' => 'Sylius\\Bundle\\PromotionBundle\\Doctrine\\ORM\\PromotionCouponRepository',
            'sylius_promotion.driver.doctrine/orm' => true,
            'sylius_promotion.driver' => 'doctrine/orm',
            'sylius.model.promotion_subject.class' => 'Sylius\\Component\\Core\\Model\\Order',
            'sylius.model.promotion.class' => 'Sylius\\Component\\Core\\Model\\Promotion',
            'sylius.controller.promotion.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.promotion.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.promotion_coupon.class' => 'Sylius\\Component\\Core\\Model\\PromotionCoupon',
            'sylius.controller.promotion_coupon.class' => 'Sylius\\Bundle\\PromotionBundle\\Controller\\PromotionCouponController',
            'sylius.factory.promotion_coupon.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.promotion_rule.class' => 'Sylius\\Component\\Promotion\\Model\\PromotionRule',
            'sylius.controller.promotion_rule.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.promotion_rule.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.promotion_action.class' => 'Sylius\\Component\\Promotion\\Model\\PromotionAction',
            'sylius.controller.promotion_action.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.promotion_action.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius_addressing.driver.doctrine/orm' => true,
            'sylius_addressing.driver' => 'doctrine/orm',
            'sylius.model.address.class' => 'Sylius\\Component\\Core\\Model\\Address',
            'sylius.controller.address.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.address.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.address.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\AddressRepository',
            'sylius.model.address_log_entry.class' => 'Sylius\\Component\\Addressing\\Model\\AddressLogEntry',
            'sylius.controller.address_log_entry.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.address_log_entry.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.address_log_entry.class' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\ResourceLogEntryRepository',
            'sylius.model.country.class' => 'Sylius\\Component\\Addressing\\Model\\Country',
            'sylius.controller.country.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.country.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.province.class' => 'Sylius\\Component\\Addressing\\Model\\Province',
            'sylius.controller.province.class' => 'Sylius\\Bundle\\AddressingBundle\\Controller\\ProvinceController',
            'sylius.factory.province.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.zone.class' => 'Sylius\\Component\\Addressing\\Model\\Zone',
            'sylius.controller.zone.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.zone.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.zone_member.class' => 'Sylius\\Component\\Addressing\\Model\\ZoneMember',
            'sylius.controller.zone_member.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.zone_member.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.address.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.country.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.province.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.zone.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.zone_member.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.scope.zone' => array(
                'shipping' => 'sylius.form.zone.scopes.shipping',
                'tax' => 'sylius.form.zone.scopes.tax',
                'all' => 'sylius.form.zone.scopes.all',
            ),
            'sylius_inventory.driver.doctrine/orm' => true,
            'sylius_inventory.driver' => 'doctrine/orm',
            'sylius.model.inventory_unit.class' => 'Sylius\\Component\\Core\\Model\\OrderItemUnit',
            'sylius.controller.inventory_unit.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.inventory_unit.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.taxon.class' => 'Sylius\\Bundle\\TaxonomyBundle\\Doctrine\\ORM\\TaxonRepository',
            'sylius_taxonomy.driver.doctrine/orm' => true,
            'sylius_taxonomy.driver' => 'doctrine/orm',
            'sylius.model.taxon.class' => 'Sylius\\Component\\Core\\Model\\Taxon',
            'sylius.controller.taxon.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.taxon.class' => 'Sylius\\Component\\Resource\\Factory\\TranslatableFactory',
            'sylius.model.taxon_translation.class' => 'Sylius\\Component\\Taxonomy\\Model\\TaxonTranslation',
            'sylius.controller.taxon_translation.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.taxon_translation.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.taxon.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.taxon_translation.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.taxon_position.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.repository.user.class' => 'Sylius\\Bundle\\UserBundle\\Doctrine\\ORM\\UserRepository',
            'sylius.user.users' => array(
                'admin' => array(
                    'user' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Core\\Model\\AdminUser',
                            'repository' => 'Sylius\\Bundle\\UserBundle\\Doctrine\\ORM\\UserRepository',
                            'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\AdminUserType',
                            'interface' => 'Sylius\\Component\\User\\Model\\UserInterface',
                            'controller' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                        'templates' => 'SyliusUserBundle:User',
                        'resetting' => array(
                            'token' => array(
                                'ttl' => 'P1D',
                                'length' => 16,
                                'field_name' => 'passwordResetToken',
                            ),
                            'pin' => array(
                                'length' => 4,
                                'field_name' => 'passwordResetToken',
                            ),
                        ),
                        'verification' => array(
                            'token' => array(
                                'length' => 16,
                                'field_name' => 'emailVerificationToken',
                            ),
                        ),
                    ),
                ),
                'shop' => array(
                    'user' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Core\\Model\\ShopUser',
                            'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\UserRepository',
                            'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\User\\ShopUserType',
                            'interface' => 'Sylius\\Component\\User\\Model\\UserInterface',
                            'controller' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                        'templates' => 'SyliusUserBundle:User',
                        'resetting' => array(
                            'token' => array(
                                'ttl' => 'P1D',
                                'length' => 16,
                                'field_name' => 'passwordResetToken',
                            ),
                            'pin' => array(
                                'length' => 4,
                                'field_name' => 'passwordResetToken',
                            ),
                        ),
                        'verification' => array(
                            'token' => array(
                                'length' => 16,
                                'field_name' => 'emailVerificationToken',
                            ),
                        ),
                    ),
                ),
                'oauth' => array(
                    'user' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\User\\Model\\UserOAuth',
                            'interface' => 'Sylius\\Component\\User\\Model\\UserOAuthInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                        'templates' => 'SyliusUserBundle:User',
                        'resetting' => array(
                            'token' => array(
                                'ttl' => 'P1D',
                                'length' => 16,
                                'field_name' => 'passwordResetToken',
                            ),
                            'pin' => array(
                                'length' => 4,
                                'field_name' => 'passwordResetToken',
                            ),
                        ),
                        'verification' => array(
                            'token' => array(
                                'length' => 16,
                                'field_name' => 'emailVerificationToken',
                            ),
                        ),
                    ),
                ),
            ),
            'sylius_user.driver.doctrine/orm' => true,
            'sylius_user.driver' => 'doctrine/orm',
            'sylius.model.admin_user.class' => 'Sylius\\Component\\Core\\Model\\AdminUser',
            'sylius.controller.admin_user.class' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController',
            'sylius.factory.admin_user.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.admin_user.class' => 'Sylius\\Bundle\\UserBundle\\Doctrine\\ORM\\UserRepository',
            'sylius.model.shop_user.class' => 'Sylius\\Component\\Core\\Model\\ShopUser',
            'sylius.controller.shop_user.class' => 'Sylius\\Bundle\\UserBundle\\Controller\\UserController',
            'sylius.factory.shop_user.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.shop_user.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\UserRepository',
            'sylius.model.oauth_user.class' => 'Sylius\\Component\\User\\Model\\UserOAuth',
            'sylius.controller.oauth_user.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.oauth_user.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.user_request_password_reset.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.user_reset_password.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.user_change_password.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius_customer.driver.doctrine/orm' => true,
            'sylius_customer.driver' => 'doctrine/orm',
            'sylius.model.customer.class' => 'Sylius\\Component\\Core\\Model\\Customer',
            'sylius.controller.customer.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.customer.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.customer.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\CustomerRepository',
            'sylius.model.customer_group.class' => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
            'sylius.controller.customer_group.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.customer_group.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.customer.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.customer_profile.validation_groups' => array(
                0 => 'sylius',
                1 => 'sylius_customer_profile',
            ),
            'sylius.form.type.customer_group.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.review.subjects' => array(
                'product' => array(
                    'subject' => 'Sylius\\Component\\Core\\Model\\Product',
                    'review' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Core\\Model\\ProductReview',
                            'repository' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductReviewRepository',
                            'form' => 'Sylius\\Bundle\\CoreBundle\\Form\\Type\\Product\\ProductReviewType',
                            'interface' => 'Sylius\\Component\\Review\\Model\\ReviewInterface',
                            'controller' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                    ),
                    'reviewer' => array(
                        'classes' => array(
                            'model' => 'Sylius\\Component\\Core\\Model\\Customer',
                            'interface' => 'Sylius\\Component\\Review\\Model\\ReviewerInterface',
                            'factory' => 'Sylius\\Component\\Resource\\Factory\\Factory',
                        ),
                    ),
                ),
            ),
            'sylius_review.driver.doctrine/orm' => true,
            'sylius_review.driver' => 'doctrine/orm',
            'sylius.model.product_review.class' => 'Sylius\\Component\\Core\\Model\\ProductReview',
            'sylius.controller.product_review.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_review.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.product_review.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductReviewRepository',
            'sylius.model.product_reviewer.class' => 'Sylius\\Component\\Core\\Model\\Customer',
            'sylius.factory.product_reviewer.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius_core.driver.doctrine/orm' => true,
            'sylius_core.driver' => 'doctrine/orm',
            'sylius.model.product_taxon.class' => 'Sylius\\Component\\Core\\Model\\ProductTaxon',
            'sylius.controller.product_taxon.class' => 'Sylius\\Bundle\\CoreBundle\\Controller\\ProductTaxonController',
            'sylius.factory.product_taxon.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.repository.product_taxon.class' => 'Sylius\\Bundle\\CoreBundle\\Doctrine\\ORM\\ProductTaxonRepository',
            'sylius.model.product_image.class' => 'Sylius\\Component\\Core\\Model\\ProductImage',
            'sylius.controller.product_image.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.product_image.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.taxon_image.class' => 'Sylius\\Component\\Core\\Model\\TaxonImage',
            'sylius.controller.taxon_image.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.taxon_image.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.channel_pricing.class' => 'Sylius\\Component\\Core\\Model\\ChannelPricing',
            'sylius.controller.channel_pricing.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.channel_pricing.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.checkout_address.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.checkout_select_shipping.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.checkout_shipment.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.checkout_select_payment.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.checkout_payment.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.checkout_complete.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_review.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.admin_user.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.shop_user.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.shop_user_registration.validation_groups' => array(
                0 => 'sylius',
                1 => 'sylius_user_registration',
            ),
            'sylius.form.type.customer_guest.validation_groups' => array(
                0 => 'sylius_customer_guest',
            ),
            'sylius.form.type.customer_simple_registration.validation_groups' => array(
                0 => 'sylius',
                1 => 'sylius_user_registration',
            ),
            'sylius.form.type.customer_registration.validation_groups' => array(
                0 => 'sylius',
                1 => 'sylius_user_registration',
                2 => 'sylius_customer_profile',
            ),
            'sylius.form.type.add_to_cart.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.channel_pricing.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.form.type.product_image.validation_groups' => array(
                0 => 'sylius',
            ),
            'sylius.state_machine.class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
            'sylius.resource.settings' => array(
                'paginate' => NULL,
                'limit' => NULL,
                'allowed_paginate' => array(
                    0 => 10,
                    1 => 20,
                    2 => 30,
                ),
                'default_page_size' => 10,
                'sortable' => false,
                'sorting' => NULL,
                'filterable' => false,
                'criteria' => NULL,
            ),
            'sylius.orm.repository.class' => 'Sylius\\Bundle\\ResourceBundle\\Doctrine\\ORM\\EntityRepository',
            'sylius.translation.translatable_listener.doctrine.orm.class' => 'Sylius\\Bundle\\ResourceBundle\\EventListener\\ORMTranslatableListener',
            'sylius.grid.templates.action' => array(
                'default' => '@SyliusUi/Grid/Action/default.html.twig',
                'create' => '@SyliusUi/Grid/Action/create.html.twig',
                'delete' => '@SyliusUi/Grid/Action/delete.html.twig',
                'show' => '@SyliusUi/Grid/Action/show.html.twig',
                'update' => '@SyliusUi/Grid/Action/update.html.twig',
                'apply_transition' => '@SyliusUi/Grid/Action/applyTransition.html.twig',
                'links' => '@SyliusUi/Grid/Action/links.html.twig',
                'archive' => '@SyliusUi/Grid/Action/archive.html.twig',
                'create_payment_method' => '@SyliusAdmin/PaymentMethod/Grid/Action/create.html.twig',
                'create_product_attribute' => '@SyliusAdmin/ProductAttribute/Grid/Action/create.html.twig',
                'generate_variants' => '@SyliusAdmin/Product/Grid/Action/generateVariants.html.twig',
                'update_product_positions' => '@SyliusAdmin/Product/Grid/Action/updatePositions.html.twig',
                'update_product_variant_positions' => '@SyliusAdmin/ProductVariant/Grid/Action/updatePositions.html.twig',
            ),
            'sylius.grid.templates.filter' => array(
                'string' => '@SyliusUi/Grid/Filter/string.html.twig',
                'boolean' => '@SyliusUi/Grid/Filter/boolean.html.twig',
                'date' => '@SyliusUi/Grid/Filter/date.html.twig',
                'entity' => '@SyliusUi/Grid/Filter/entity.html.twig',
                'money' => '@SyliusUi/Grid/Filter/money.html.twig',
                'exists' => '@SyliusUi/Grid/Filter/exists.html.twig',
            ),
            'sylius.grids_definitions' => array(
                'sylius_admin_address_log_entry' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Addressing\\Model\\AddressLogEntry',
                            'repository' => array(
                                'method' => 'createByObjectIdQueryBuilder',
                                'arguments' => array(
                                    'objectId' => '$id',
                                ),
                            ),
                        ),
                    ),
                    'fields' => array(
                        'action' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.action',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/logAction.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'loggedAt' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.logged_at',
                            'options' => array(
                                'format' => 'd-m-Y H:i:s',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'data' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.changes',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/logData.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                    'filters' => array(

                    ),
                    'actions' => array(

                    ),
                ),
                'sylius_admin_admin_user' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\AdminUser',
                        ),
                    ),
                    'sorting' => array(
                        'createdAt' => 'desc',
                    ),
                    'fields' => array(
                        'firstName' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.first_name',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'lastName' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.last_name',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'username' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.username',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'email' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.email',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'createdAt' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.registration_date',
                            'sortable' => NULL,
                            'options' => array(
                                'format' => 'd-m-Y H:i',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'email',
                                    1 => 'username',
                                    2 => 'firstName',
                                    3 => 'lastName',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.enabled',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_channel' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\Channel',
                        ),
                    ),
                    'sorting' => array(
                        'nameAndDescription' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.code',
                            'path' => '.',
                            'sortable' => 'code',
                            'options' => array(
                                'template' => '@SyliusAdmin/Channel/Grid/Field/code.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'nameAndDescription' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.name',
                            'path' => '.',
                            'sortable' => 'name',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/nameAndDescription.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'themeName' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.theme',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusAdmin/Channel/Grid/Field/themeName.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.enabled',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_country' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Addressing\\Model\\Country',
                        ),
                    ),
                    'sorting' => array(
                        'code' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.name',
                            'path' => '.',
                            'sortable' => 'code',
                            'options' => array(
                                'template' => '@SyliusAdmin/Country/Grid/Field/name.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.enabled',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_currency' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Currency\\Model\\Currency',
                        ),
                    ),
                    'sorting' => array(
                        'code' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_customer' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\Customer',
                        ),
                    ),
                    'sorting' => array(
                        'createdAt' => 'desc',
                    ),
                    'fields' => array(
                        'firstName' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.first_name',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'lastName' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.last_name',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'email' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.email',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'createdAt' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.registration_date',
                            'sortable' => NULL,
                            'options' => array(
                                'format' => 'd-m-Y H:i',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'path' => '.',
                            'options' => array(
                                'template' => '@SyliusAdmin/Customer/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'verified' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.verified',
                            'path' => '.',
                            'options' => array(
                                'template' => '@SyliusAdmin/Customer/Grid/Field/verified.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'email',
                                    1 => 'firstName',
                                    2 => 'lastName',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'show_orders' => array(
                                'type' => 'show',
                                'label' => 'sylius.ui.show_orders',
                                'options' => array(
                                    'link' => array(
                                        'route' => 'sylius_admin_customer_order_index',
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'show' => array(
                                'type' => 'show',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_customer_group' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Customer\\Model\\CustomerGroup',
                        ),
                    ),
                    'sorting' => array(
                        'name' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_customer_order' => array(
                    'extends' => 'sylius_admin_order',
                    'driver' => array(
                        'options' => array(
                            'repository' => array(
                                'method' => 'createByCustomerIdQueryBuilder',
                                'arguments' => array(
                                    'customerId' => '$id',
                                ),
                            ),
                        ),
                        'name' => 'doctrine/orm',
                    ),
                    'filters' => array(
                        'customer' => array(
                            'type' => 'string',
                            'enabled' => false,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                    'fields' => array(

                    ),
                    'actions' => array(

                    ),
                ),
                'sylius_admin_exchange_rate' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Currency\\Model\\ExchangeRate',
                        ),
                    ),
                    'sorting' => array(
                        'id' => 'desc',
                    ),
                    'fields' => array(
                        'id' => array(
                            'type' => 'string',
                            'enabled' => false,
                            'sortable' => NULL,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'sourceCurrency' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.base_currency',
                            'path' => '.',
                            'options' => array(
                                'template' => '@SyliusAdmin/ExchangeRate/Grid/Field/sourceCurrencyName.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'targetCurrency' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.target_currency',
                            'path' => '.',
                            'options' => array(
                                'template' => '@SyliusAdmin/ExchangeRate/Grid/Field/targetCurrencyName.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'ratio' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.ratio',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'currency' => array(
                            'type' => 'entity',
                            'label' => 'sylius.ui.currency',
                            'options' => array(
                                'fields' => array(
                                    0 => 'sourceCurrency',
                                    1 => 'targetCurrency',
                                ),
                            ),
                            'form_options' => array(
                                'class' => 'Sylius\\Component\\Currency\\Model\\Currency',
                                'choice_label' => 'name',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_inventory' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                            'repository' => array(
                                'method' => 'createInventoryListQueryBuilder',
                                'arguments' => array(
                                    0 => 'en_US',
                                ),
                            ),
                        ),
                    ),
                    'fields' => array(
                        'name' => array(
                            'type' => 'twig',
                            'path' => '.',
                            'label' => 'sylius.ui.name',
                            'options' => array(
                                'template' => '@SyliusAdmin/ProductVariant/Grid/Field/name.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'inventory' => array(
                            'type' => 'twig',
                            'path' => '.',
                            'label' => 'sylius.ui.inventory',
                            'options' => array(
                                'template' => '@SyliusAdmin/ProductVariant/Grid/Field/inventory.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'options' => array(
                                'fields' => array(
                                    0 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'item' => array(
                            'update_product' => array(
                                'type' => 'update',
                                'label' => 'sylius.ui.edit_product',
                                'options' => array(
                                    'link' => array(
                                        'route' => 'sylius_admin_product_update',
                                        'parameters' => array(
                                            'id' => 'resource.product.id',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'update' => array(
                                'type' => 'update',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                            'productId' => 'resource.product.id',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_locale' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Locale\\Model\\Locale',
                        ),
                    ),
                    'sorting' => array(
                        'code' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.name',
                            'path' => '.',
                            'sortable' => 'code',
                            'options' => array(
                                'template' => '@SyliusAdmin/Locale/Grid/Field/name.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_order' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\Order',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'number' => 'desc',
                    ),
                    'fields' => array(
                        'channel' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.channel',
                            'sortable' => 'channel.code',
                            'options' => array(
                                'template' => '@SyliusAdmin/Order/Grid/Field/channel.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'number' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.number',
                            'path' => '.',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusAdmin/Order/Grid/Field/number.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'date' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.date',
                            'path' => 'checkoutCompletedAt',
                            'sortable' => 'checkoutCompletedAt',
                            'options' => array(
                                'format' => 'd-m-Y H:i:s',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'customer' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.customer',
                            'sortable' => 'customer.lastName',
                            'options' => array(
                                'template' => '@SyliusAdmin/Order/Grid/Field/customer.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'state' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.state',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/state.html.twig',
                                'vars' => array(
                                    'labels' => '@SyliusAdmin/Order/Label/State',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'paymentState' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.payment_state',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/state.html.twig',
                                'vars' => array(
                                    'labels' => '@SyliusAdmin/Order/Label/PaymentState',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'shippingState' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.shipping_state',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/state.html.twig',
                                'vars' => array(
                                    'labels' => '@SyliusAdmin/Order/Label/ShippingState',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'total' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.total',
                            'path' => '.',
                            'sortable' => 'total',
                            'options' => array(
                                'template' => '@SyliusAdmin/Order/Grid/Field/total.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'currencyCode' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.currency',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'number' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.number',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'customer' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.customer',
                            'options' => array(
                                'fields' => array(
                                    0 => 'customer.email',
                                    1 => 'customer.firstName',
                                    2 => 'customer.lastName',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'date' => array(
                            'type' => 'date',
                            'label' => 'sylius.ui.date',
                            'options' => array(
                                'field' => 'checkoutCompletedAt',
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'channel' => array(
                            'type' => 'entity',
                            'label' => 'sylius.ui.channel',
                            'form_options' => array(
                                'class' => 'Sylius\\Component\\Core\\Model\\Channel',
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'total' => array(
                            'type' => 'money',
                            'label' => 'sylius.ui.total',
                            'options' => array(
                                'currency_field' => 'currencyCode',
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'item' => array(
                            'show' => array(
                                'type' => 'show',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_payment_method' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\PaymentMethod',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                                'arguments' => array(
                                    0 => 'en_US',
                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'position' => 'asc',
                    ),
                    'fields' => array(
                        'position' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.position',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/position.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'sortable' => 'translation.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'gateway' => array(
                            'type' => 'string',
                            'path' => 'gatewayConfig.gatewayName',
                            'label' => 'sylius.ui.gateway',
                            'sortable' => 'gatewayConfig.gatewayName',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.enabled',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create_payment_method',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_product' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\Product',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                                'arguments' => array(
                                    0 => 'en_US',
                                    1 => '$taxonId',
                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'code' => 'asc',
                    ),
                    'fields' => array(
                        'image' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.image',
                            'path' => '.',
                            'options' => array(
                                'template' => '@SyliusAdmin/Product/Grid/Field/image.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'sortable' => 'translation.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.enabled',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'links',
                                'label' => 'sylius.ui.create',
                                'options' => array(
                                    'class' => 'primary',
                                    'icon' => 'plus',
                                    'header' => array(
                                        'icon' => 'cube',
                                        'label' => 'sylius.ui.type',
                                    ),
                                    'links' => array(
                                        'simple' => array(
                                            'label' => 'sylius.ui.simple_product',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_product_create_simple',
                                        ),
                                        'configurable' => array(
                                            'label' => 'sylius.ui.configurable_product',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_product_create',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'subitem' => array(
                            'variants' => array(
                                'type' => 'links',
                                'label' => 'sylius.ui.manage_variants',
                                'options' => array(
                                    'icon' => 'cubes',
                                    'links' => array(
                                        'index' => array(
                                            'label' => 'sylius.ui.list_variants',
                                            'icon' => 'list',
                                            'route' => 'sylius_admin_product_variant_index',
                                            'parameters' => array(
                                                'productId' => 'resource.id',
                                            ),
                                        ),
                                        'create' => array(
                                            'label' => 'sylius.ui.create',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_product_variant_create',
                                            'parameters' => array(
                                                'productId' => 'resource.id',
                                            ),
                                        ),
                                        'generate' => array(
                                            'label' => 'sylius.ui.generate',
                                            'icon' => 'random',
                                            'route' => 'sylius_admin_product_variant_generate',
                                            'visible' => 'resource.hasOptions',
                                            'parameters' => array(
                                                'productId' => 'resource.id',
                                            ),
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_product_association_type' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Product\\Model\\ProductAssociationType',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                                'arguments' => array(
                                    0 => 'en_US',
                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'code' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'options' => array(
                                'fields' => array(
                                    0 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_product_attribute' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Product\\Model\\ProductAttribute',
                        ),
                    ),
                    'sorting' => array(
                        'position' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'position' => array(
                            'type' => 'string',
                            'enabled' => false,
                            'sortable' => NULL,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'type' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.type',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/rawLabel.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create_product_attribute',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_product_from_taxon' => array(
                    'extends' => 'sylius_admin_product',
                    'sorting' => array(
                        'position' => 'asc',
                    ),
                    'fields' => array(
                        'position' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.position',
                            'path' => '.',
                            'sortable' => 'productTaxon.position',
                            'options' => array(
                                'template' => '@SyliusAdmin/Product/Grid/Field/position.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'update_positions' => array(
                                'type' => 'update_product_positions',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(

                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                    'filters' => array(

                    ),
                ),
                'sylius_admin_product_option' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Product\\Model\\ProductOption',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                                'arguments' => array(
                                    0 => 'en_US',
                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'position' => 'asc',
                    ),
                    'fields' => array(
                        'position' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.position',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/position.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'sortable' => 'translation.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_product_review' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\ProductReview',
                        ),
                    ),
                    'sorting' => array(
                        'date' => 'desc',
                    ),
                    'fields' => array(
                        'date' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.date',
                            'path' => 'createdAt',
                            'sortable' => 'createdAt',
                            'options' => array(
                                'format' => 'd-m-Y H:i:s',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'title' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.title',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'rating' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.rating',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'status' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.status',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/state.html.twig',
                                'vars' => array(
                                    'labels' => '@SyliusAdmin/ProductReview/Label/Status',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'reviewSubject' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.product',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'author' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.customer',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                    ),
                    'filters' => array(
                        'title' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.title',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'accept' => array(
                                'type' => 'apply_transition',
                                'label' => 'sylius.ui.accept',
                                'icon' => 'checkmark',
                                'options' => array(
                                    'link' => array(
                                        'route' => 'sylius_admin_product_review_accept',
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                        ),
                                    ),
                                    'class' => 'green',
                                    'transition' => 'accept',
                                    'graph' => 'sylius_product_review',
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'reject' => array(
                                'type' => 'apply_transition',
                                'label' => 'sylius.ui.reject',
                                'icon' => 'remove',
                                'options' => array(
                                    'link' => array(
                                        'route' => 'sylius_admin_product_review_reject',
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                        ),
                                    ),
                                    'class' => 'yellow',
                                    'transition' => 'reject',
                                    'graph' => 'sylius_product_review',
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_product_variant' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\ProductVariant',
                            'repository' => array(
                                'method' => 'createQueryBuilderByProductId',
                                'arguments' => array(
                                    0 => 'en_US',
                                    1 => '$productId',
                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'position' => 'asc',
                    ),
                    'fields' => array(
                        'name' => array(
                            'type' => 'twig',
                            'path' => '.',
                            'label' => 'sylius.ui.name',
                            'options' => array(
                                'template' => '@SyliusAdmin/ProductVariant/Grid/Field/name.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'inventory' => array(
                            'type' => 'twig',
                            'path' => '.',
                            'label' => 'sylius.ui.inventory',
                            'options' => array(
                                'template' => '@SyliusAdmin/ProductVariant/Grid/Field/inventory.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'position' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.position',
                            'path' => '.',
                            'sortable' => 'position',
                            'options' => array(
                                'template' => '@SyliusAdmin/ProductVariant/Grid/Field/position.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'options' => array(
                                'fields' => array(
                                    0 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'generate' => array(
                                'type' => 'generate_variants',
                                'options' => array(
                                    'product' => 'expr:service(\'sylius.repository.product\').find($productId)',
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'update_positions' => array(
                                'type' => 'update_product_variant_positions',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'create' => array(
                                'type' => 'create',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'productId' => '$productId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                            'productId' => '$productId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                            'productId' => '$productId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_promotion' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\Promotion',
                        ),
                    ),
                    'sorting' => array(
                        'priority' => 'desc',
                    ),
                    'fields' => array(
                        'priority' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.priority',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/position.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.name',
                            'path' => '.',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/nameAndDescription.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'couponBased' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.coupons',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/yesNo.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'usage' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.usage',
                            'path' => '.',
                            'sortable' => 'used',
                            'options' => array(
                                'template' => '@SyliusAdmin/Promotion/Grid/Field/usage.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'couponBased' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.coupon_based',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'coupons' => array(
                                'type' => 'links',
                                'label' => 'sylius.ui.manage_coupons',
                                'options' => array(
                                    'visible' => 'resource.couponBased',
                                    'icon' => 'ticket',
                                    'links' => array(
                                        'index' => array(
                                            'label' => 'sylius.ui.list_coupons',
                                            'icon' => 'list',
                                            'route' => 'sylius_admin_promotion_coupon_index',
                                            'parameters' => array(
                                                'promotionId' => 'resource.id',
                                            ),
                                        ),
                                        'create' => array(
                                            'label' => 'sylius.ui.create',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_promotion_coupon_create',
                                            'parameters' => array(
                                                'promotionId' => 'resource.id',
                                            ),
                                        ),
                                        'generate' => array(
                                            'label' => 'sylius.ui.generate',
                                            'icon' => 'random',
                                            'route' => 'sylius_admin_promotion_coupon_generate',
                                            'parameters' => array(
                                                'promotionId' => 'resource.id',
                                            ),
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_promotion_coupon' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\PromotionCoupon',
                            'repository' => array(
                                'method' => 'createQueryBuilderByPromotionId',
                                'arguments' => array(
                                    'promotionId' => '$promotionId',
                                ),
                            ),
                        ),
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'usageLimit' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.usage_limit',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'perCustomerUsageLimit' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.per_customer_usage_limit',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'used' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.used',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'expiresAt' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.expires_at',
                            'sortable' => NULL,
                            'options' => array(
                                'format' => 'd-m-Y',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'generate' => array(
                                'type' => 'default',
                                'label' => 'sylius.ui.generate',
                                'icon' => 'random',
                                'options' => array(
                                    'link' => array(
                                        'route' => 'sylius_admin_promotion_coupon_generate',
                                        'parameters' => array(
                                            'promotionId' => '$promotionId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'create' => array(
                                'type' => 'create',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'promotionId' => '$promotionId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                            'promotionId' => '$promotionId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'options' => array(
                                    'link' => array(
                                        'parameters' => array(
                                            'id' => 'resource.id',
                                            'promotionId' => '$promotionId',
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_shipping_category' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Shipping\\Model\\ShippingCategory',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                            ),
                        ),
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'createdAt' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.creation_date',
                            'options' => array(
                                'format' => 'd-m-Y H:i',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'updatedAt' => array(
                            'type' => 'datetime',
                            'label' => 'sylius.ui.updating_date',
                            'options' => array(
                                'format' => 'd-m-Y H:i',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_shipping_method' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\ShippingMethod',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                                'arguments' => array(
                                    0 => 'en_US',
                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(
                        'position' => 'asc',
                    ),
                    'fields' => array(
                        'position' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.position',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/position.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'sortable' => 'translation.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'zone' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.zone',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.enabled',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/enabled.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'enabled' => array(
                            'type' => 'boolean',
                            'label' => 'sylius.ui.enabled',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'archival' => array(
                            'type' => 'exists',
                            'label' => 'sylius.ui.archival',
                            'options' => array(
                                'field' => 'archivedAt',
                            ),
                            'default_value' => false,
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'archive' => array(
                                'type' => 'archive',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_tax_category' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Taxation\\Model\\TaxCategory',
                        ),
                    ),
                    'sorting' => array(
                        'nameAndDescription' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'nameAndDescription' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.name',
                            'path' => '.',
                            'sortable' => 'name',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/nameAndDescription.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_tax_rate' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\TaxRate',
                        ),
                    ),
                    'sorting' => array(
                        'name' => 'asc',
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'sortable' => NULL,
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'zone' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.zone',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'category' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.category',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'amount' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.amount',
                            'sortable' => NULL,
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/percent.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'search' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.search',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                    1 => 'name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'create',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
                'sylius_admin_taxon' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Core\\Model\\Taxon',
                            'repository' => array(
                                'method' => 'createListQueryBuilder',
                            ),
                        ),
                    ),
                    'filters' => array(
                        'code' => array(
                            'type' => 'string',
                            'options' => array(
                                'fields' => array(
                                    0 => 'code',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'options' => array(
                                'fields' => array(
                                    0 => 'translation.name',
                                ),
                            ),
                            'enabled' => true,
                            'position' => 100,
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                    'fields' => array(

                    ),
                    'actions' => array(

                    ),
                ),
                'sylius_admin_zone' => array(
                    'driver' => array(
                        'name' => 'doctrine/orm',
                        'options' => array(
                            'class' => 'Sylius\\Component\\Addressing\\Model\\Zone',
                        ),
                    ),
                    'fields' => array(
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                        ),
                        'type' => array(
                            'type' => 'twig',
                            'label' => 'sylius.ui.type',
                            'options' => array(
                                'template' => '@SyliusUi/Grid/Field/label.html.twig',
                            ),
                            'enabled' => true,
                            'position' => 100,
                        ),
                    ),
                    'filters' => array(
                        'name' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.name',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                        'code' => array(
                            'type' => 'string',
                            'label' => 'sylius.ui.code',
                            'enabled' => true,
                            'position' => 100,
                            'options' => array(

                            ),
                            'form_options' => array(

                            ),
                        ),
                    ),
                    'actions' => array(
                        'main' => array(
                            'create' => array(
                                'type' => 'links',
                                'label' => 'sylius.ui.create',
                                'options' => array(
                                    'class' => 'primary',
                                    'icon' => 'plus',
                                    'header' => array(
                                        'icon' => 'cube',
                                        'label' => 'sylius.ui.type',
                                    ),
                                    'links' => array(
                                        'country' => array(
                                            'label' => 'sylius.ui.zone_consisting_of_countries',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_zone_create',
                                            'parameters' => array(
                                                'type' => 'country',
                                            ),
                                        ),
                                        'province' => array(
                                            'label' => 'sylius.ui.zone_consisting_of_provinces',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_zone_create',
                                            'parameters' => array(
                                                'type' => 'province',
                                            ),
                                        ),
                                        'zone' => array(
                                            'label' => 'sylius.ui.zone_consisting_of_other_zones',
                                            'icon' => 'plus',
                                            'route' => 'sylius_admin_zone_create',
                                            'parameters' => array(
                                                'type' => 'zone',
                                            ),
                                        ),
                                    ),
                                ),
                                'enabled' => true,
                                'position' => 100,
                            ),
                        ),
                        'item' => array(
                            'update' => array(
                                'type' => 'update',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                            'delete' => array(
                                'type' => 'delete',
                                'enabled' => true,
                                'position' => 100,
                                'options' => array(

                                ),
                            ),
                        ),
                    ),
                    'sorting' => array(

                    ),
                    'limits' => array(
                        0 => 10,
                        1 => 25,
                        2 => 50,
                    ),
                ),
            ),
            'sm.configs' => array(
                'sylius_order_checkout' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\Order',
                    'property_path' => 'checkoutState',
                    'graph' => 'sylius_order_checkout',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'cart',
                        1 => 'addressed',
                        2 => 'shipping_selected',
                        3 => 'shipping_skipped',
                        4 => 'payment_skipped',
                        5 => 'payment_selected',
                        6 => 'completed',
                    ),
                    'transitions' => array(
                        'address' => array(
                            'from' => array(
                                0 => 'cart',
                                1 => 'addressed',
                                2 => 'shipping_selected',
                                3 => 'shipping_skipped',
                                4 => 'payment_selected',
                                5 => 'payment_skipped',
                            ),
                            'to' => 'addressed',
                        ),
                        'skip_shipping' => array(
                            'from' => array(
                                0 => 'addressed',
                            ),
                            'to' => 'shipping_skipped',
                        ),
                        'select_shipping' => array(
                            'from' => array(
                                0 => 'addressed',
                                1 => 'shipping_selected',
                                2 => 'payment_selected',
                                3 => 'payment_skipped',
                            ),
                            'to' => 'shipping_selected',
                        ),
                        'skip_payment' => array(
                            'from' => array(
                                0 => 'shipping_selected',
                                1 => 'shipping_skipped',
                            ),
                            'to' => 'payment_skipped',
                        ),
                        'select_payment' => array(
                            'from' => array(
                                0 => 'payment_selected',
                                1 => 'shipping_skipped',
                                2 => 'shipping_selected',
                            ),
                            'to' => 'payment_selected',
                        ),
                        'complete' => array(
                            'from' => array(
                                0 => 'payment_selected',
                                1 => 'payment_skipped',
                            ),
                            'to' => 'completed',
                        ),
                    ),
                    'callbacks' => array(
                        'after' => array(
                            'sylius_process_cart' => array(
                                'on' => array(
                                    0 => 'select_shipping',
                                    1 => 'address',
                                    2 => 'select_payment',
                                    3 => 'skip_shipping',
                                    4 => 'skip_payment',
                                ),
                                'do' => array(
                                    0 => '@sylius.order_processing.order_processor',
                                    1 => 'process',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_create_order' => array(
                                'on' => array(
                                    0 => 'complete',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object',
                                    1 => 'event',
                                    2 => '\'create\'',
                                    3 => '\'sylius_order\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_save_checkout_completion_date' => array(
                                'on' => array(
                                    0 => 'complete',
                                ),
                                'do' => array(
                                    0 => 'object',
                                    1 => 'completeCheckout',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_skip_shipping' => array(
                                'on' => array(
                                    0 => 'address',
                                ),
                                'do' => array(
                                    0 => '@sylius.state_resolver.order_checkout',
                                    1 => 'resolve',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'priority' => 1,
                                'disabled' => false,
                            ),
                            'sylius_skip_payment' => array(
                                'on' => array(
                                    0 => 'select_shipping',
                                ),
                                'do' => array(
                                    0 => '@sylius.state_resolver.order_checkout',
                                    1 => 'resolve',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'priority' => 1,
                                'disabled' => false,
                            ),
                        ),
                        'guard' => array(

                        ),
                        'before' => array(

                        ),
                    ),
                ),
                'sylius_order_shipping' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\Order',
                    'property_path' => 'shippingState',
                    'graph' => 'sylius_order_shipping',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'cart',
                        1 => 'ready',
                        2 => 'cancelled',
                        3 => 'partially_shipped',
                        4 => 'shipped',
                    ),
                    'transitions' => array(
                        'request_shipping' => array(
                            'from' => array(
                                0 => 'cart',
                            ),
                            'to' => 'ready',
                        ),
                        'cancel' => array(
                            'from' => array(
                                0 => 'ready',
                            ),
                            'to' => 'cancelled',
                        ),
                        'partially_ship' => array(
                            'from' => array(
                                0 => 'ready',
                            ),
                            'to' => 'partially_shipped',
                        ),
                        'ship' => array(
                            'from' => array(
                                0 => 'ready',
                                1 => 'partially_shipped',
                            ),
                            'to' => 'shipped',
                        ),
                    ),
                    'callbacks' => array(
                        'after' => array(
                            'sylius_resolve_state' => array(
                                'on' => array(
                                    0 => 'ship',
                                ),
                                'do' => array(
                                    0 => '@sylius.state_resolver.order',
                                    1 => 'resolve',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'guard' => array(

                        ),
                        'before' => array(

                        ),
                    ),
                ),
                'sylius_order_payment' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\Order',
                    'property_path' => 'paymentState',
                    'graph' => 'sylius_order_payment',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'cart',
                        1 => 'awaiting_payment',
                        2 => 'partially_paid',
                        3 => 'cancelled',
                        4 => 'paid',
                        5 => 'partially_refunded',
                        6 => 'refunded',
                    ),
                    'transitions' => array(
                        'request_payment' => array(
                            'from' => array(
                                0 => 'cart',
                            ),
                            'to' => 'awaiting_payment',
                        ),
                        'partially_pay' => array(
                            'from' => array(
                                0 => 'awaiting_payment',
                                1 => 'partially_paid',
                            ),
                            'to' => 'partially_paid',
                        ),
                        'cancel' => array(
                            'from' => array(
                                0 => 'awaiting_payment',
                            ),
                            'to' => 'cancelled',
                        ),
                        'pay' => array(
                            'from' => array(
                                0 => 'awaiting_payment',
                                1 => 'partially_paid',
                            ),
                            'to' => 'paid',
                        ),
                        'partially_refund' => array(
                            'from' => array(
                                0 => 'paid',
                                1 => 'partially_paid',
                                2 => 'partially_refunded',
                            ),
                            'to' => 'partially_refunded',
                        ),
                        'refund' => array(
                            'from' => array(
                                0 => 'paid',
                                1 => 'partially_paid',
                                2 => 'partially_refunded',
                            ),
                            'to' => 'refunded',
                        ),
                    ),
                    'callbacks' => array(
                        'after' => array(
                            'sylius_order_paid' => array(
                                'on' => array(
                                    0 => 'pay',
                                ),
                                'do' => array(
                                    0 => '@sylius.inventory.order_inventory_operator',
                                    1 => 'sell',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_resolve_state' => array(
                                'on' => array(
                                    0 => 'pay',
                                ),
                                'do' => array(
                                    0 => '@sylius.state_resolver.order',
                                    1 => 'resolve',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'guard' => array(

                        ),
                        'before' => array(

                        ),
                    ),
                ),
                'sylius_order' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\Order',
                    'property_path' => 'state',
                    'graph' => 'sylius_order',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'cart',
                        1 => 'new',
                        2 => 'cancelled',
                        3 => 'fulfilled',
                    ),
                    'transitions' => array(
                        'create' => array(
                            'from' => array(
                                0 => 'cart',
                            ),
                            'to' => 'new',
                        ),
                        'cancel' => array(
                            'from' => array(
                                0 => 'new',
                            ),
                            'to' => 'cancelled',
                        ),
                        'fulfill' => array(
                            'from' => array(
                                0 => 'new',
                            ),
                            'to' => 'fulfilled',
                        ),
                    ),
                    'callbacks' => array(
                        'before' => array(
                            'sylius_assign_number' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sylius.order_number_assigner',
                                    1 => 'assignNumber',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_assign_token' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sylius.unique_id_based_order_token_assigner',
                                    1 => 'assignTokenValue',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'after' => array(
                            'sylius_request_shipping' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object',
                                    1 => 'event',
                                    2 => '\'request_shipping\'',
                                    3 => '\'sylius_order_shipping\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_request_payment' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object',
                                    1 => 'event',
                                    2 => '\'request_payment\'',
                                    3 => '\'sylius_order_payment\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_create_payment' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object.getPayments()',
                                    1 => 'event',
                                    2 => '\'create\'',
                                    3 => '\'sylius_payment\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_create_shipment' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object.getShipments()',
                                    1 => 'event',
                                    2 => '\'create\'',
                                    3 => '\'sylius_shipment\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_hold_inventory' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sylius.inventory.order_inventory_operator',
                                    1 => 'hold',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_increment_promotions_usages' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sylius.promotion_usage_modifier',
                                    1 => 'increment',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_save_addresses_on_customer' => array(
                                'on' => array(
                                    0 => 'create',
                                ),
                                'do' => array(
                                    0 => '@sylius.customer_order_addresses_saver',
                                    1 => 'saveAddresses',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_cancel_payment' => array(
                                'on' => array(
                                    0 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object.getPayments()',
                                    1 => 'event',
                                    2 => '\'cancel\'',
                                    3 => '\'sylius_payment\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_cancel_shipment' => array(
                                'on' => array(
                                    0 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object.getShipments()',
                                    1 => 'event',
                                    2 => '\'cancel\'',
                                    3 => '\'sylius_shipment\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_cancel_order_payment' => array(
                                'on' => array(
                                    0 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object',
                                    1 => 'event',
                                    2 => '\'cancel\'',
                                    3 => '\'sylius_order_payment\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_cancel_order_shipment' => array(
                                'on' => array(
                                    0 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sm.callback.cascade_transition',
                                    1 => 'apply',
                                ),
                                'args' => array(
                                    0 => 'object',
                                    1 => 'event',
                                    2 => '\'cancel\'',
                                    3 => '\'sylius_order_shipping\'',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylis_cancel_order' => array(
                                'on' => array(
                                    0 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sylius.inventory.order_inventory_operator',
                                    1 => 'cancel',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_decrement_promotions_usages' => array(
                                'on' => array(
                                    0 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sylius.promotion_usage_modifier',
                                    1 => 'decrement',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'guard' => array(

                        ),
                    ),
                ),
                'sylius_shipment' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\Shipment',
                    'property_path' => 'state',
                    'graph' => 'sylius_shipment',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'cart',
                        1 => 'ready',
                        2 => 'shipped',
                        3 => 'cancelled',
                    ),
                    'transitions' => array(
                        'create' => array(
                            'from' => array(
                                0 => 'cart',
                            ),
                            'to' => 'ready',
                        ),
                        'ship' => array(
                            'from' => array(
                                0 => 'ready',
                            ),
                            'to' => 'shipped',
                        ),
                        'cancel' => array(
                            'from' => array(
                                0 => 'ready',
                            ),
                            'to' => 'cancelled',
                        ),
                    ),
                    'callbacks' => array(
                        'after' => array(
                            'sylius_resolve_state' => array(
                                'on' => array(
                                    0 => 'ship',
                                ),
                                'do' => array(
                                    0 => '@sylius.state_resolver.order_shipping',
                                    1 => 'resolve',
                                ),
                                'args' => array(
                                    0 => 'object.getOrder()',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'guard' => array(

                        ),
                        'before' => array(

                        ),
                    ),
                ),
                'sylius_payment' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\Payment',
                    'property_path' => 'state',
                    'graph' => 'sylius_payment',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'cart',
                        1 => 'new',
                        2 => 'processing',
                        3 => 'completed',
                        4 => 'failed',
                        5 => 'cancelled',
                        6 => 'refunded',
                    ),
                    'transitions' => array(
                        'create' => array(
                            'from' => array(
                                0 => 'cart',
                            ),
                            'to' => 'new',
                        ),
                        'process' => array(
                            'from' => array(
                                0 => 'new',
                            ),
                            'to' => 'processing',
                        ),
                        'complete' => array(
                            'from' => array(
                                0 => 'new',
                                1 => 'processing',
                            ),
                            'to' => 'completed',
                        ),
                        'fail' => array(
                            'from' => array(
                                0 => 'new',
                                1 => 'processing',
                            ),
                            'to' => 'failed',
                        ),
                        'cancel' => array(
                            'from' => array(
                                0 => 'new',
                                1 => 'processing',
                            ),
                            'to' => 'cancelled',
                        ),
                        'refund' => array(
                            'from' => array(
                                0 => 'completed',
                            ),
                            'to' => 'refunded',
                        ),
                    ),
                    'callbacks' => array(
                        'after' => array(
                            'sylius_process_order' => array(
                                'on' => array(
                                    0 => 'fail',
                                    1 => 'cancel',
                                ),
                                'do' => array(
                                    0 => '@sylius.order_processing.order_payment_processor.after_checkout',
                                    1 => 'process',
                                ),
                                'args' => array(
                                    0 => 'object.getOrder()',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                            'sylius_resolve_state' => array(
                                'on' => array(
                                    0 => 'complete',
                                    1 => 'refund',
                                ),
                                'do' => array(
                                    0 => '@sylius.state_resolver.order_payment',
                                    1 => 'resolve',
                                ),
                                'args' => array(
                                    0 => 'object.getOrder()',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'guard' => array(

                        ),
                        'before' => array(

                        ),
                    ),
                ),
                'sylius_product_review' => array(
                    'class' => 'Sylius\\Component\\Core\\Model\\ProductReview',
                    'property_path' => 'status',
                    'graph' => 'sylius_product_review',
                    'state_machine_class' => 'Sylius\\Component\\Resource\\StateMachine\\StateMachine',
                    'states' => array(
                        0 => 'new',
                        1 => 'accepted',
                        2 => 'rejected',
                    ),
                    'transitions' => array(
                        'accept' => array(
                            'from' => array(
                                0 => 'new',
                            ),
                            'to' => 'accepted',
                        ),
                        'reject' => array(
                            'from' => array(
                                0 => 'new',
                            ),
                            'to' => 'rejected',
                        ),
                    ),
                    'callbacks' => array(
                        'after' => array(
                            'sylius_update_rating' => array(
                                'on' => array(
                                    0 => 'accept',
                                ),
                                'do' => array(
                                    0 => '@sylius.product_review.average_rating_updater',
                                    1 => 'updateFromReview',
                                ),
                                'args' => array(
                                    0 => 'object',
                                ),
                                'disabled' => false,
                                'priority' => 0,
                            ),
                        ),
                        'guard' => array(

                        ),
                        'before' => array(

                        ),
                    ),
                ),
            ),
            'sm.factory.class' => 'SM\\Factory\\Factory',
            'sm.callback_factory.class' => 'winzou\\Bundle\\StateMachineBundle\\Callback\\ContainerAwareCallbackFactory',
            'sm.callback.class' => 'winzou\\Bundle\\StateMachineBundle\\Callback\\ContainerAwareCallback',
            'sm.twig_extension.class' => 'SM\\Extension\\Twig\\SMExtension',
            'sm.callback.cascade_transition.class' => 'SM\\Callback\\CascadeTransitionCallback',
            'doctrine_cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine_cache.apcu.class' => 'Doctrine\\Common\\Cache\\ApcuCache',
            'doctrine_cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine_cache.chain.class' => 'Doctrine\\Common\\Cache\\ChainCache',
            'doctrine_cache.couchbase.class' => 'Doctrine\\Common\\Cache\\CouchbaseCache',
            'doctrine_cache.couchbase.connection.class' => 'Couchbase',
            'doctrine_cache.couchbase.hostnames' => 'localhost:8091',
            'doctrine_cache.file_system.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'doctrine_cache.php_file.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'doctrine_cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine_cache.memcache.connection.class' => 'Memcache',
            'doctrine_cache.memcache.host' => 'localhost',
            'doctrine_cache.memcache.port' => 11211,
            'doctrine_cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcached.connection.class' => 'Memcached',
            'doctrine_cache.memcached.host' => 'localhost',
            'doctrine_cache.memcached.port' => 11211,
            'doctrine_cache.mongodb.class' => 'Doctrine\\Common\\Cache\\MongoDBCache',
            'doctrine_cache.mongodb.collection.class' => 'MongoCollection',
            'doctrine_cache.mongodb.connection.class' => 'MongoClient',
            'doctrine_cache.mongodb.server' => 'localhost:27017',
            'doctrine_cache.predis.client.class' => 'Predis\\Client',
            'doctrine_cache.predis.scheme' => 'tcp',
            'doctrine_cache.predis.host' => 'localhost',
            'doctrine_cache.predis.port' => 6379,
            'doctrine_cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine_cache.redis.connection.class' => 'Redis',
            'doctrine_cache.redis.host' => 'localhost',
            'doctrine_cache.redis.port' => 6379,
            'doctrine_cache.riak.class' => 'Doctrine\\Common\\Cache\\RiakCache',
            'doctrine_cache.riak.bucket.class' => 'Riak\\Bucket',
            'doctrine_cache.riak.connection.class' => 'Riak\\Connection',
            'doctrine_cache.riak.bucket_property_list.class' => 'Riak\\BucketPropertyList',
            'doctrine_cache.riak.host' => 'localhost',
            'doctrine_cache.riak.port' => 8087,
            'doctrine_cache.sqlite3.class' => 'Doctrine\\Common\\Cache\\SQLite3Cache',
            'doctrine_cache.sqlite3.connection.class' => 'SQLite3',
            'doctrine_cache.void.class' => 'Doctrine\\Common\\Cache\\VoidCache',
            'doctrine_cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine_cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine_cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine_cache.security.acl.cache.class' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\Acl\\Model\\AclCache',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
                'default' => 'doctrine.orm.default_entity_manager',
            ),
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => array(

            ),
            'doctrine.connections' => array(
                'default' => 'doctrine.dbal.default_connection',
            ),
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerAwareEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => true,
            'doctrine.orm.proxy_dir' => (__DIR__.'/doctrine/orm/Proxies'),
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.path' => '/_fragment',
            'kernel.secret' => '%secret',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(

            ),
            'kernel.trusted_proxies' => array(

            ),
            'kernel.default_locale' => 'en_US',
            'templating.helper.code.file_link_format' => NULL,
            'debug.file_link_format' => NULL,
            'test.client.parameters' => array(

            ),
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => array(
                'cookie_httponly' => true,
                'gc_probability' => 1,
            ),
            'session.save_path' => (__DIR__.'/sessions'),
            'session.metadata.update_threshold' => '0',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'twig',
            ),
            'validator.mapping.cache.prefix' => '',
            'validator.mapping.cache.file' => (__DIR__.'/validation.php'),
            'validator.translation_domain' => 'validators',
            'translator.logging' => true,
            'data_collector.templates' => array(

            ),
            'debug.error_handler.throw_at' => -1,
            'debug.container.dump' => (__DIR__.'/appTestDebugProjectContainer.xml'),
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.options.matcher.cache_class' => 'appTestDebugProjectContainerUrlMatcher',
            'router.options.generator.cache_class' => 'appTestDebugProjectContainerUrlGenerator',
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.cache_class_prefix' => 'appTestDebugProjectContainer',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => array(

            ),
            'monolog.handlers_to_channels' => array(

            ),
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.role_hierarchy.roles' => array(

            ),
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.redirecting.class' => 'Swift_Plugins_RedirectingPlugin',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.default.transport.name' => 'smtp',
            'swiftmailer.mailer.default.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.default.transport.smtp.port' => 25,
            'swiftmailer.mailer.default.transport.smtp.host' => 'localhost',
            'swiftmailer.mailer.default.transport.smtp.username' => NULL,
            'swiftmailer.mailer.default.transport.smtp.password' => NULL,
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.mailer.default.transport.smtp.local_domain' => NULL,
            'swiftmailer.mailer.default.spool.enabled' => false,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.spool.enabled' => false,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => array(
                'default' => 'swiftmailer.mailer.default',
            ),
            'swiftmailer.default_mailer' => 'default',
            'twig.exception_listener.controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction',
            'twig.form.resources' => array(
                0 => 'form_div_layout.html.twig',
                1 => 'LiipImagineBundle:Form:form_div_layout.html.twig',
            ),
            'sonata.core.flashmessage.manager.class' => 'Sonata\\CoreBundle\\FlashMessage\\FlashManager',
            'sonata.core.twig.extension.flashmessage.class' => 'Sonata\\CoreBundle\\Twig\\Extension\\FlashMessageExtension',
            'sonata.core.form_type' => 'standard',
            'sonata.core.form.mapping.type' => array(

            ),
            'sonata.core.form.mapping.extension' => array(

            ),
            'sonata.block.service.container.class' => 'Sonata\\BlockBundle\\Block\\Service\\ContainerBlockService',
            'sonata.block.service.empty.class' => 'Sonata\\BlockBundle\\Block\\Service\\EmptyBlockService',
            'sonata.block.service.text.class' => 'Sonata\\BlockBundle\\Block\\Service\\TextBlockService',
            'sonata.block.service.rss.class' => 'Sonata\\BlockBundle\\Block\\Service\\RssBlockService',
            'sonata.block.service.menu.class' => 'Sonata\\BlockBundle\\Block\\Service\\MenuBlockService',
            'sonata.block.service.template.class' => 'Sonata\\BlockBundle\\Block\\Service\\TemplateBlockService',
            'sonata.block.exception.strategy.manager.class' => 'Sonata\\BlockBundle\\Exception\\Strategy\\StrategyManager',
            'sonata.block.container.types' => array(
                0 => 'sonata.block.service.container',
                1 => 'sonata.page.block.container',
                2 => 'sonata.dashboard.block.container',
                3 => 'cmf.block.container',
                4 => 'cmf.block.slideshow',
            ),
            'sonata_block.blocks' => array(
                'sonata.block.service.template' => array(
                    'settings' => array(
                        'address' => NULL,
                        'addresses' => NULL,
                        'cart' => NULL,
                        'customer' => NULL,
                        'form' => NULL,
                        'order' => NULL,
                        'order_item' => NULL,
                        'orders' => NULL,
                        'product' => NULL,
                        'product_review' => NULL,
                        'product_reviews' => NULL,
                        'products' => NULL,
                        'resource' => NULL,
                        'resources' => NULL,
                        'statistics' => NULL,
                        'taxon' => NULL,
                    ),
                    'contexts' => array(

                    ),
                    'templates' => array(

                    ),
                    'cache' => 'sonata.cache.noop',
                ),
            ),
            'sonata_block.blocks_by_class' => array(

            ),
            'sonata_block.cache_blocks' => array(
                'by_type' => array(
                    'sonata.block.service.template' => 'sonata.cache.noop',
                ),
            ),
            'sonata.intl.locale_detector.request.class' => 'Sonata\\IntlBundle\\Locale\\RequestDetector',
            'sonata.intl.locale_detector.session.class' => 'Sonata\\IntlBundle\\Locale\\SessionDetector',
            'sonata.intl.templating.helper.locale.class' => 'Sonata\\IntlBundle\\Templating\\Helper\\LocaleHelper',
            'sonata.intl.templating.helper.number.class' => 'Sonata\\IntlBundle\\Templating\\Helper\\NumberHelper',
            'sonata.intl.templating.helper.datetime.class' => 'Sonata\\IntlBundle\\Templating\\Helper\\DateTimeHelper',
            'sonata.intl.timezone_detector.chain.class' => 'Sonata\\IntlBundle\\Timezone\\ChainTimezoneDetector',
            'sonata.intl.timezone_detector.user.class' => 'Sonata\\IntlBundle\\Timezone\\UserBasedTimezoneDetector',
            'sonata.intl.timezone_detector.locale.class' => 'Sonata\\IntlBundle\\Timezone\\LocaleBasedTimezoneDetector',
            'sonata.intl.twig.helper.locale.class' => 'Sonata\\IntlBundle\\Twig\\Extension\\LocaleExtension',
            'sonata.intl.twig.helper.number.class' => 'Sonata\\IntlBundle\\Twig\\Extension\\NumberExtension',
            'sonata.intl.twig.helper.datetime.class' => 'Sonata\\IntlBundle\\Twig\\Extension\\DateTimeExtension',
            'sonata_intl.timezone.detectors' => array(
                0 => 'sonata.intl.timezone_detector.locale',
            ),
            'hateoas.link_factory.class' => 'Hateoas\\Factory\\LinkFactory',
            'hateoas.links_factory.class' => 'Hateoas\\Factory\\LinksFactory',
            'hateoas.embeds_factory.class' => 'Hateoas\\Factory\\EmbeddedsFactory',
            'hateoas.expression.evaluator.class' => 'Bazinga\\Bundle\\HateoasBundle\\Hateoas\\Expression\\LazyFunctionExpressionEvaluator',
            'bazinga_hateoas.expression_language.class' => 'Bazinga\\Bundle\\HateoasBundle\\ExpressionLanguage\\ExpressionLanguage',
            'hateoas.expression.link.class' => 'Hateoas\\Expression\\LinkExpressionFunction',
            'hateoas.serializer.xml.class' => 'Hateoas\\Serializer\\XmlSerializer',
            'hateoas.serializer.json_hal.class' => 'Hateoas\\Serializer\\JsonHalSerializer',
            'hateoas.serializer.exclusion_manager.class' => 'Hateoas\\Serializer\\ExclusionManager',
            'hateoas.event_subscriber.xml.class' => 'Hateoas\\Serializer\\EventSubscriber\\XmlEventSubscriber',
            'hateoas.event_subscriber.json.class' => 'Hateoas\\Serializer\\EventSubscriber\\JsonEventSubscriber',
            'hateoas.inline_deferrer.embeds.class' => 'Hateoas\\Serializer\\Metadata\\InlineDeferrer',
            'hateoas.inline_deferrer.links.class' => 'Hateoas\\Serializer\\Metadata\\InlineDeferrer',
            'hateoas.configuration.provider.resolver.chain.class' => 'Hateoas\\Configuration\\Provider\\Resolver\\ChainResolver',
            'hateoas.configuration.provider.resolver.method.class' => 'Hateoas\\Configuration\\Provider\\Resolver\\MethodResolver',
            'hateoas.configuration.provider.resolver.static_method.class' => 'Hateoas\\Configuration\\Provider\\Resolver\\StaticMethodResolver',
            'hateoas.configuration.provider.resolver.symfony_container.class' => 'Hateoas\\Configuration\\Provider\\Resolver\\SymfonyContainerResolver',
            'hateoas.configuration.relation_provider.class' => 'Hateoas\\Configuration\\Provider\\RelationProvider',
            'hateoas.configuration.relations_repository.class' => 'Hateoas\\Configuration\\RelationsRepository',
            'hateoas.configuration.metadata.yaml_driver.class' => 'Hateoas\\Configuration\\Metadata\\Driver\\YamlDriver',
            'hateoas.configuration.metadata.xml_driver.class' => 'Hateoas\\Configuration\\Metadata\\Driver\\XmlDriver',
            'hateoas.configuration.metadata.annotation_driver.class' => 'Hateoas\\Configuration\\Metadata\\Driver\\AnnotationDriver',
            'hateoas.configuration.metadata.extension_driver.class' => 'Hateoas\\Configuration\\Metadata\\Driver\\ExtensionDriver',
            'hateoas.generator.registry.class' => 'Hateoas\\UrlGenerator\\UrlGeneratorRegistry',
            'hateoas.generator.symfony.class' => 'Hateoas\\UrlGenerator\\SymfonyUrlGenerator',
            'hateoas.helper.link.class' => 'Hateoas\\Helper\\LinkHelper',
            'hateoas.twig.link.class' => 'Hateoas\\Twig\\Extension\\LinkExtension',
            'jms_serializer.metadata.file_locator.class' => 'Metadata\\Driver\\FileLocator',
            'jms_serializer.metadata.annotation_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\AnnotationDriver',
            'jms_serializer.metadata.chain_driver.class' => 'Metadata\\Driver\\DriverChain',
            'jms_serializer.metadata.yaml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\YamlDriver',
            'jms_serializer.metadata.xml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\XmlDriver',
            'jms_serializer.metadata.php_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\PhpDriver',
            'jms_serializer.metadata.doctrine_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrineTypeDriver',
            'jms_serializer.metadata.doctrine_phpcr_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrinePHPCRTypeDriver',
            'jms_serializer.metadata.lazy_loading_driver.class' => 'Metadata\\Driver\\LazyLoadingDriver',
            'jms_serializer.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'jms_serializer.metadata.cache.file_cache.class' => 'Metadata\\Cache\\FileCache',
            'jms_serializer.event_dispatcher.class' => 'JMS\\Serializer\\EventDispatcher\\LazyEventDispatcher',
            'jms_serializer.camel_case_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CamelCaseNamingStrategy',
            'jms_serializer.identical_property_naming_strategy.class' => 'JMS\\Serializer\\Naming\\IdenticalPropertyNamingStrategy',
            'jms_serializer.serialized_name_annotation_strategy.class' => 'JMS\\Serializer\\Naming\\SerializedNameAnnotationStrategy',
            'jms_serializer.cache_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CacheNamingStrategy',
            'jms_serializer.doctrine_object_constructor.class' => 'JMS\\Serializer\\Construction\\DoctrineObjectConstructor',
            'jms_serializer.unserialize_object_constructor.class' => 'JMS\\Serializer\\Construction\\UnserializeObjectConstructor',
            'jms_serializer.version_exclusion_strategy.class' => 'JMS\\Serializer\\Exclusion\\VersionExclusionStrategy',
            'jms_serializer.serializer.class' => 'JMS\\Serializer\\Serializer',
            'jms_serializer.twig_extension.class' => 'JMS\\Serializer\\Twig\\SerializerExtension',
            'jms_serializer.twig_runtime_extension.class' => 'JMS\\Serializer\\Twig\\SerializerRuntimeExtension',
            'jms_serializer.twig_runtime_extension_helper.class' => 'JMS\\Serializer\\Twig\\SerializerRuntimeHelper',
            'jms_serializer.templating.helper.class' => 'JMS\\SerializerBundle\\Templating\\SerializerHelper',
            'jms_serializer.json_serialization_visitor.class' => 'JMS\\Serializer\\JsonSerializationVisitor',
            'jms_serializer.json_serialization_visitor.options' => 0,
            'jms_serializer.json_deserialization_visitor.class' => 'JMS\\Serializer\\JsonDeserializationVisitor',
            'jms_serializer.xml_serialization_visitor.class' => 'JMS\\Serializer\\XmlSerializationVisitor',
            'jms_serializer.xml_deserialization_visitor.class' => 'JMS\\Serializer\\XmlDeserializationVisitor',
            'jms_serializer.xml_deserialization_visitor.doctype_whitelist' => array(

            ),
            'jms_serializer.xml_serialization_visitor.format_output' => true,
            'jms_serializer.yaml_serialization_visitor.class' => 'JMS\\Serializer\\YamlSerializationVisitor',
            'jms_serializer.handler_registry.class' => 'JMS\\Serializer\\Handler\\LazyHandlerRegistry',
            'jms_serializer.datetime_handler.class' => 'JMS\\Serializer\\Handler\\DateHandler',
            'jms_serializer.array_collection_handler.class' => 'JMS\\Serializer\\Handler\\ArrayCollectionHandler',
            'jms_serializer.php_collection_handler.class' => 'JMS\\Serializer\\Handler\\PhpCollectionHandler',
            'jms_serializer.form_error_handler.class' => 'FOS\\RestBundle\\Serializer\\Normalizer\\FormErrorHandler',
            'jms_serializer.constraint_violation_handler.class' => 'JMS\\Serializer\\Handler\\ConstraintViolationHandler',
            'jms_serializer.doctrine_proxy_subscriber.class' => 'JMS\\Serializer\\EventDispatcher\\Subscriber\\DoctrineProxySubscriber',
            'jms_serializer.stopwatch_subscriber.class' => 'JMS\\SerializerBundle\\Serializer\\StopwatchEventSubscriber',
            'jms_serializer.configured_context_factory.class' => 'JMS\\SerializerBundle\\ContextFactory\\ConfiguredContextFactory',
            'jms_serializer.expression_evaluator.class' => 'JMS\\Serializer\\Expression\\ExpressionEvaluator',
            'jms_serializer.expression_language.class' => 'Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage',
            'jms_serializer.expression_language.function_provider.class' => 'JMS\\SerializerBundle\\ExpressionLanguage\\BasicSerializerFunctionsProvider',
            'jms_serializer.accessor_strategy.default.class' => 'JMS\\Serializer\\Accessor\\DefaultAccessorStrategy',
            'jms_serializer.accessor_strategy.expression.class' => 'JMS\\Serializer\\Accessor\\ExpressionAccessorStrategy',
            'knp_gaufrette.filesystem_map.class' => 'Knp\\Bundle\\GaufretteBundle\\FilesystemMap',
            'knp_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'knp_menu.factory_extension.routing.class' => 'Knp\\Menu\\Integration\\Symfony\\RoutingExtension',
            'knp_menu.helper.class' => 'Knp\\Menu\\Twig\\Helper',
            'knp_menu.matcher.class' => 'Knp\\Menu\\Matcher\\Matcher',
            'knp_menu.menu_provider.chain.class' => 'Knp\\Menu\\Provider\\ChainProvider',
            'knp_menu.menu_provider.container_aware.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\ContainerAwareProvider',
            'knp_menu.menu_provider.builder_alias.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\BuilderAliasProvider',
            'knp_menu.renderer_provider.class' => 'Knp\\Bundle\\MenuBundle\\Renderer\\ContainerAwareProvider',
            'knp_menu.renderer.list.class' => 'Knp\\Menu\\Renderer\\ListRenderer',
            'knp_menu.renderer.list.options' => array(

            ),
            'knp_menu.listener.voters.class' => 'Knp\\Bundle\\MenuBundle\\EventListener\\VoterInitializerListener',
            'knp_menu.voter.router.class' => 'Knp\\Menu\\Matcher\\Voter\\RouteVoter',
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => array(

            ),
            'knp_menu.renderer.twig.template' => 'KnpMenuBundle::menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'liip_imagine.filter.configuration.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterConfiguration',
            'liip_imagine.filter.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager',
            'liip_imagine.data.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\DataManager',
            'liip_imagine.cache.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager',
            'liip_imagine.cache.signer.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Signer',
            'liip_imagine.binary.mime_type_guesser.class' => 'Liip\\ImagineBundle\\Binary\\SimpleMimeTypeGuesser',
            'liip_imagine.controller.class' => 'Liip\\ImagineBundle\\Controller\\ImagineController',
            'liip_imagine.twig.extension.class' => 'Liip\\ImagineBundle\\Templating\\ImagineExtension',
            'liip_imagine.templating.helper.class' => 'Liip\\ImagineBundle\\Templating\\Helper\\ImagineHelper',
            'liip_imagine.gd.class' => 'Imagine\\Gd\\Imagine',
            'liip_imagine.imagick.class' => 'Imagine\\Imagick\\Imagine',
            'liip_imagine.gmagick.class' => 'Imagine\\Gmagick\\Imagine',
            'liip_imagine.filter.loader.relative_resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RelativeResizeFilterLoader',
            'liip_imagine.filter.loader.resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResizeFilterLoader',
            'liip_imagine.filter.loader.thumbnail.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ThumbnailFilterLoader',
            'liip_imagine.filter.loader.crop.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\CropFilterLoader',
            'liip_imagine.filter.loader.grayscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\GrayscaleFilterLoader',
            'liip_imagine.filter.loader.paste.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\PasteFilterLoader',
            'liip_imagine.filter.loader.watermark.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\WatermarkFilterLoader',
            'liip_imagine.filter.loader.strip.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\StripFilterLoader',
            'liip_imagine.filter.loader.background.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\BackgroundFilterLoader',
            'liip_imagine.filter.loader.scale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ScaleFilterLoader',
            'liip_imagine.filter.loader.upscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\UpscaleFilterLoader',
            'liip_imagine.filter.loader.downscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\DownscaleFilterLoader',
            'liip_imagine.filter.loader.auto_rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\AutoRotateFilterLoader',
            'liip_imagine.filter.loader.rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RotateFilterLoader',
            'liip_imagine.filter.loader.flip.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\FlipFilterLoader',
            'liip_imagine.filter.loader.interlace.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\InterlaceFilterLoader',
            'liip_imagine.binary.loader.filesystem.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\FileSystemLoader',
            'liip_imagine.binary.loader.stream.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\StreamLoader',
            'liip_imagine.binary.loader.flysystem.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\FlysystemLoader',
            'liip_imagine.binary.locator.filesystem.class' => 'Liip\\ImagineBundle\\Binary\\Locator\\FileSystemLocator',
            'liip_imagine.binary.locator.filesystem_insecure.class' => 'Liip\\ImagineBundle\\Binary\\Locator\\FileSystemInsecureLocator',
            'liip_imagine.cache.resolver.web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver',
            'liip_imagine.cache.resolver.no_cache_web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\NoCacheWebPathResolver',
            'liip_imagine.cache.resolver.aws_s3.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\AwsS3Resolver',
            'liip_imagine.cache.resolver.cache.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\CacheResolver',
            'liip_imagine.cache.resolver.flysystem.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\FlysystemResolver',
            'liip_imagine.cache.resolver.proxy.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\ProxyResolver',
            'liip_imagine.form.type.image.class' => 'Liip\\ImagineBundle\\Form\\Type\\ImageType',
            'liip_imagine.meta_data.reader.class' => 'Imagine\\Image\\Metadata\\ExifMetadataReader',
            'liip_imagine.filter.post_processor.jpegoptim.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\JpegOptimPostProcessor',
            'liip_imagine.jpegoptim.binary' => '/usr/bin/jpegoptim',
            'liip_imagine.jpegoptim.stripall' => true,
            'liip_imagine.jpegoptim.max' => NULL,
            'liip_imagine.jpegoptim.progressive' => true,
            'liip_imagine.jpegoptim.tempdir' => NULL,
            'liip_imagine.filter.post_processor.optipng.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\OptiPngPostProcessor',
            'liip_imagine.optipng.binary' => '/usr/bin/optipng',
            'liip_imagine.optipng.level' => 7,
            'liip_imagine.optipng.stripall' => true,
            'liip_imagine.optipng.tempdir' => NULL,
            'liip_imagine.filter.post_processor.pngquant.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\PngquantPostProcessor',
            'liip_imagine.pngquant.binary' => '/usr/bin/pngquant',
            'liip_imagine.filter.post_processor.mozjpeg.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\MozJpegPostProcessor',
            'liip_imagine.mozjpeg.binary' => '/opt/mozjpeg/bin/cjpeg',
            'liip_imagine.cache.resolver.default' => 'default',
            'liip_imagine.default_image' => NULL,
            'liip_imagine.filter_sets' => array(
                'sylius_small' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 120,
                                1 => 90,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(

                    ),
                ),
                'sylius_medium' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 240,
                                1 => 180,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(

                    ),
                ),
                'sylius_large' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 640,
                                1 => 480,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(

                    ),
                ),
                'sylius_admin_product_tiny_thumbnail' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 64,
                                1 => 64,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(

                    ),
                ),
                'sylius_admin_product_thumbnail' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 50,
                                1 => 50,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(

                    ),
                ),
            ),
            'liip_imagine.binary.loader.default' => 'default',
            'liip_imagine.controller.filter_action' => 'liip_imagine.controller:filterAction',
            'liip_imagine.controller.filter_runtime_action' => 'liip_imagine.controller:filterRuntimeAction',
            'payum.capture_path' => 'payum_capture_do',
            'payum.notify_path' => 'payum_notify_do',
            'payum.authorize_path' => 'payum_authorize_do',
            'payum.refund_path' => 'payum_refund_do',
            'payum.cancel_path' => 'payum_cancel_do',
            'payum.payout_path' => 'payum_payout_do',
            'payum.available_gateway_factories' => array(

            ),
            'payum.storage.doctrine.orm.class' => 'Payum\\Core\\Bridge\\Doctrine\\Storage\\DoctrineStorage',
            'stof_doctrine_extensions.event_listener.locale.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LocaleListener',
            'stof_doctrine_extensions.event_listener.logger.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener',
            'stof_doctrine_extensions.event_listener.blame.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\BlameListener',
            'stof_doctrine_extensions.uploadable.manager.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadableManager',
            'stof_doctrine_extensions.uploadable.mime_type_guesser.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\MimeTypeGuesserAdapter',
            'stof_doctrine_extensions.uploadable.default_file_info.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo',
            'stof_doctrine_extensions.default_locale' => 'en_US',
            'stof_doctrine_extensions.default_file_path' => NULL,
            'stof_doctrine_extensions.translation_fallback' => false,
            'stof_doctrine_extensions.persist_default_translation' => false,
            'stof_doctrine_extensions.skip_translation_on_load' => false,
            'stof_doctrine_extensions.uploadable.validate_writable_directory' => true,
            'stof_doctrine_extensions.listener.translatable.class' => 'Gedmo\\Translatable\\TranslatableListener',
            'stof_doctrine_extensions.listener.timestampable.class' => 'Gedmo\\Timestampable\\TimestampableListener',
            'stof_doctrine_extensions.listener.blameable.class' => 'Gedmo\\Blameable\\BlameableListener',
            'stof_doctrine_extensions.listener.sluggable.class' => 'Gedmo\\Sluggable\\SluggableListener',
            'stof_doctrine_extensions.listener.tree.class' => 'Gedmo\\Tree\\TreeListener',
            'stof_doctrine_extensions.listener.loggable.class' => 'Gedmo\\Loggable\\LoggableListener',
            'stof_doctrine_extensions.listener.sortable.class' => 'Gedmo\\Sortable\\SortableListener',
            'stof_doctrine_extensions.listener.softdeleteable.class' => 'Gedmo\\SoftDeleteable\\SoftDeleteableListener',
            'stof_doctrine_extensions.listener.uploadable.class' => 'Gedmo\\Uploadable\\UploadableListener',
            'stof_doctrine_extensions.listener.reference_integrity.class' => 'Gedmo\\ReferenceIntegrity\\ReferenceIntegrityListener',
            'white_october_pagerfanta.default_view' => 'default',
            'white_october_pagerfanta.view_factory.class' => 'Pagerfanta\\View\\ViewFactory',
            'doctrine_migrations.namespace' => 'Application\\Migrations',
            'doctrine_migrations.table_name' => 'migration_versions',
            'doctrine_migrations.name' => 'Application Migrations',
            'doctrine_migrations.organize_migrations' => false,
            'sylius_payum.driver.doctrine/orm' => true,
            'sylius_payum.driver' => 'doctrine/orm',
            'sylius.model.payment_security_token.class' => 'Sylius\\Bundle\\PayumBundle\\Model\\PaymentSecurityToken',
            'sylius.controller.payment_security_token.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.payment_security_token.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.model.gateway_config.class' => 'Sylius\\Bundle\\PayumBundle\\Model\\GatewayConfig',
            'sylius.controller.gateway_config.class' => 'Sylius\\Bundle\\ResourceBundle\\Controller\\ResourceController',
            'sylius.factory.gateway_config.class' => 'Sylius\\Component\\Resource\\Factory\\Factory',
            'sylius.form.type.gateway_config.validation_groups' => array(
                0 => 'sylius',
            ),
            'payum.template.layout' => 'SyliusPayumBundle::layout.html.twig',
            'payum.template.obtain_credit_card' => 'SyliusPayumBundle:Action:obtainCreditCard.html.twig',
            'web_profiler.debug_toolbar.position' => 'bottom',
            'sylius.admin.notification.enabled' => true,
            'sylius.admin.notification.frequency' => 60,
            'sylius.admin.notification.uri' => 'http://gus.sylius.com/version',
            'sylius.attribute.attribute_types' => array(
                'text' => 'Text',
                'textarea' => 'Textarea',
                'checkbox' => 'Checkbox',
                'integer' => 'Integer',
                'percent' => 'Percent',
                'datetime' => 'Datetime',
                'date' => 'Date',
                'select' => 'Select',
            ),
            'sylius.tax_calculators' => array(
                'default' => 'default',
            ),
            'sylius.shipping_calculators' => array(
                'flat_rate' => 'sylius.form.shipping_calculator.flat_rate_configuration.label',
                'per_unit_rate' => 'sylius.form.shipping_calculator.per_unit_rate_configuration.label',
            ),
            'sylius.shipping_method_resolvers' => array(
                'default' => 'Default',
                'zones_and_channel_based' => 'sylius.shipping_methods_resolver.zones_and_channel_based',
            ),
            'sylius.payment_method_resolvers' => array(
                'default' => 'Default',
                'channel_based' => 'sylius.payment_methods_resolver.channel_based',
            ),
            'sylius.promotion_rules' => array(
                'item_total' => 'Item total',
                'cart_quantity' => 'Cart quantity',
                'customer_group' => 'Customer group',
                'nth_order' => 'Nth order',
                'shipping_country' => 'Shipping country',
                'has_taxon' => 'Has at least one from taxons',
                'total_of_items_from_taxon' => 'Total price of items from taxon',
                'contains_product' => 'Contains product',
            ),
            'sylius.promotion_actions' => array(
                'order_fixed_discount' => 'Order fixed discount',
                'unit_fixed_discount' => 'Item fixed discount',
                'order_percentage_discount' => 'Order percentage discount',
                'unit_percentage_discount' => 'Item percentage discount',
                'shipping_percentage_discount' => 'Shipping percentage discount',
            ),
            'sylius.tax_calculation_strategies' => array(
                'order_items_based' => 'Order items based',
                'order_item_units_based' => 'Order item units based',
            ),
            'console.command.ids' => array(
                0 => 'sylius.console.command.resource_debug',
                1 => 'sensio_distribution.security_checker.command',
            ),
            'sonata.core.form.types' => array(
                0 => 'sylius.form.type.order',
                1 => 'sylius.form.type.order_item',
                2 => 'sylius.form.type.cart',
                3 => 'sylius.form.type.cart_item',
                4 => 'sylius.form.type.money',
                5 => 'sylius.form.type.currency',
                6 => 'sylius.form.type.currency_choice',
                7 => 'sylius.form.type.exchange_rate',
                8 => 'sylius.form.type.locale',
                9 => 'sylius.form.type.locale_choice',
                10 => 'sylius.form.type.product_association',
                11 => 'sylius.form.type.product_association_type',
                12 => 'sylius.form.type.product_association_type_translation',
                13 => 'sylius.form.type.product_association_type_choice',
                14 => 'sylius.form.type.sylius_product_associations',
                15 => 'sylius.form.type.product_attribute',
                16 => 'sylius.form.type.product_attribute_translation',
                17 => 'sylius.form.type.product_attribute_choice',
                18 => 'sylius.form.type.product_attribute_value',
                19 => 'sylius.form.type.product',
                20 => 'sylius.form.type.product_translation',
                21 => 'sylius.form.type.product_choice',
                22 => 'sylius.form.type.product_code_choice',
                23 => 'sylius.form.type.product_generate_variants',
                24 => 'sylius.form.type.product_option',
                25 => 'sylius.form.type.product_option_translation',
                26 => 'sylius.form.type.product_option_choice',
                27 => 'sylius.form.type.product_option_value',
                28 => 'sylius.form.type.product_option_value_translation',
                29 => 'sylius.form.type.product_variant',
                30 => 'sylius.form.type.product_variant_translation',
                31 => 'sylius.form.type.product_variant_generation',
                32 => 'sylius.form.type.channel',
                33 => 'sylius.form.type.channel_choice',
                34 => 'sylius.form.type.attribute_type_choice',
                35 => 'sylius.form.type.tax_category',
                36 => 'sylius.form.type.tax_category_choice',
                37 => 'sylius.form.type.tax_rate',
                38 => 'sylius.form.type.tax_calculator_choice',
                39 => 'sylius.form.type.shipping_method',
                40 => 'sylius.form.type.shipping_method_translation',
                41 => 'sylius.form.type.shipping_method_choice',
                42 => 'sylius.form.type.shipping_category',
                43 => 'sylius.form.type.shipping_category_choice',
                44 => 'sylius.form.type.shipment',
                45 => 'sylius.form.type.shipment_ship',
                46 => 'sylius.form.type.shipping_calculator_choice',
                47 => 'sylius.form.type.payment',
                48 => 'sylius.form.type.payment_method',
                49 => 'sylius.form.type.payment_method_translation',
                50 => 'sylius.form.type.payment_method_choice',
                51 => 'sylius.form.type.payment_gateway_choice',
                52 => 'sylius.form.type.promotion',
                53 => 'sylius.form.type.promotion_action',
                54 => 'sylius.form.type.promotion_rule',
                55 => 'sylius.form.type.promotion_coupon',
                56 => 'sylius.form.type.promotion_action.collection',
                57 => 'sylius.form.type.promotion_rule.collection',
                58 => 'sylius.form.type.promotion_action_choice',
                59 => 'sylius.form.type.promotion_rule_choice',
                60 => 'sylius.form.type.promotion_coupon_to_code',
                61 => 'sylius.form.type.promotion_coupon_generator_instruction',
                62 => 'sylius.form.type.address',
                63 => 'sylius.form.type.country',
                64 => 'sylius.form.type.country_choice',
                65 => 'sylius.form.type.country_code_choice',
                66 => 'sylius.form.type.province',
                67 => 'sylius.form.type.province_choice',
                68 => 'sylius.form.type.province_code_choice',
                69 => 'sylius.form.type.zone',
                70 => 'sylius.form.type.zone_choice',
                71 => 'sylius.form.type.zone_code_choice',
                72 => 'sylius.form.type.zone_member',
                73 => 'sylius.form.type.taxon',
                74 => 'sylius.form.type.taxon_translation',
                75 => 'sylius.form.type.taxon_position',
                76 => 'sylius.form.type.user_login',
                77 => 'sylius.form.type.user_request_password_reset',
                78 => 'sylius.form.type.user_reset_password',
                79 => 'sylius.form.type.user_change_password',
                80 => 'sylius.form.type.customer',
                81 => 'sylius.form.type.customer_profile',
                82 => 'sylius.form.type.customer_choice',
                83 => 'sylius.form.type.customer_group',
                84 => 'sylius.form.type.customer_group_choice',
                85 => 'sylius.form.type.customer_group_code_choice',
                86 => 'sylius.form.type.security_login',
                87 => 'sylius.form.type.checkout_address',
                88 => 'sylius.form.type.checkout_select_shipping',
                89 => 'sylius.form.type.checkout_shipment',
                90 => 'sylius.form.type.checkout_select_payment',
                91 => 'sylius.form.type.checkout_payment',
                92 => 'sylius.form.type.checkout_complete',
                93 => 'sylius.form.type.product_review',
                94 => 'sylius.form.type.admin_user',
                95 => 'sylius.form.type.shop_user',
                96 => 'sylius.form.type.shop_user_registration',
                97 => 'sylius.form.type.product_image',
                98 => 'sylius.form.type.taxon_image',
                99 => 'sylius.form.type.tax_calculation_strategy_choice',
                100 => 'sylius.form.type.promotion_rule.customer_group_configuration',
                101 => 'sylius.form.type.promotion_rule.has_taxon_configuration',
                102 => 'sylius.form.type.promotion_rule.total_of_items_from_taxon_configuration',
                103 => 'sylius.form.type.promotion_rule.contains_product_configuration',
                104 => 'sylius.form.type.promotion_action.filter.taxon',
                105 => 'sylius.form.type.promotion_action.filter.product',
                106 => 'sylius.form.type.customer_guest',
                107 => 'sylius.form.type.customer_simple_registration',
                108 => 'sylius.form.type.customer_registration',
                109 => 'sylius.form.type.address_choice',
                110 => 'sylius.form.type.add_to_cart',
                111 => 'sylius.form.type.channel_pricing',
                112 => 'sylius.form.type.channels_collection',
                113 => 'sylius.form.type.channel_based_shipping_calculator.flat_rate',
                114 => 'sylius.form.type.channel_based_shipping_calculator.per_unit_rate',
                115 => 'sylius.form.type.autocomplete_product_taxon_choice',
                116 => 'sylius.form.type.resource_autocomplete_choice',
                117 => 'sylius.form.type.default',
                118 => 'sylius.form.type.resource_translations',
                119 => 'sylius.form.type.grid_filter.string',
                120 => 'sylius.form.type.grid_filter.boolean',
                121 => 'sylius.form.type.grid_filter.date',
                122 => 'sylius.form.type.grid_filter.entity',
                123 => 'sylius.form.type.grid_filter.money',
                124 => 'sylius.form.type.grid_filter.exists',
                125 => 'form.type.entity',
                126 => 'form.type.form',
                127 => 'form.type.choice',
                128 => 'sonata.core.form.type.array',
                129 => 'sonata.core.form.type.boolean',
                130 => 'sonata.core.form.type.collection',
                131 => 'sonata.core.form.type.translatable_choice',
                132 => 'sonata.core.form.type.date_range',
                133 => 'sonata.core.form.type.datetime_range',
                134 => 'sonata.core.form.type.date_picker',
                135 => 'sonata.core.form.type.datetime_picker',
                136 => 'sonata.core.form.type.date_range_picker',
                137 => 'sonata.core.form.type.datetime_range_picker',
                138 => 'sonata.core.form.type.equal',
                139 => 'sonata.core.form.type.color_selector',
                140 => 'sonata.block.form.type.block',
                141 => 'sonata.block.form.type.container_template',
                142 => 'liip_imagine.form.type.image',
                143 => 'payum.form.type.credit_card_expiration_date',
                144 => 'payum.form.type.credit_card',
                145 => 'payum.form.type.gateway_config',
                146 => 'payum.form.type.gateway_factories_choice',
                147 => 'sylius.form.type.gateway_config',
                148 => 'sylius.form.type.gateway_configuration.paypal',
                149 => 'sylius.form.type.gateway_configuration.stripe',
                150 => 'sylius.theme.form.type.theme_choice',
                151 => 'sylius.theme.form.type.theme_name_choice',
            ),
            'sonata.core.form.type_extensions' => array(
                0 => 'sylius.form.extension.type.country',
                1 => 'sylius.form.extension.type.channel',
                2 => 'sylius.form.extension.type.locale',
                3 => 'sylius.form.extension.type.order',
                4 => 'sylius.form.extension.type.cart',
                5 => 'sylius.form.extension.type.cart_item',
                6 => 'sylius.form.extension.type.payment_method',
                7 => 'sylius.form.extension.type.tax_rate',
                8 => 'sylius.form.extension.type.taxon',
                9 => 'sylius.form.extension.type.customer',
                10 => 'sylius.form.extension.type.promotion',
                11 => 'sylius.form.extension.type.promotion_coupon',
                12 => 'sylius.form.extension.type.promotion_filter_collection',
                13 => 'sylius.form.extension.type.shipping_method',
                14 => 'sylius.form.extension.type.product',
                15 => 'sylius.form.extension.type.product_translation',
                16 => 'sylius.form.extension.type.product_variant',
                17 => 'sylius.form.extension.type.product_variant_generation',
                18 => 'sylius.form.extension.type.collection',
                19 => 'form.type_extension.form.http_foundation',
                20 => 'form.type_extension.form.validator',
                21 => 'form.type_extension.repeated.validator',
                22 => 'form.type_extension.submit.validator',
                23 => 'form.type_extension.upload.validator',
                24 => 'form.type_extension.csrf',
                25 => 'payum.form.extension.gateway_factories_choice',
                26 => 'sylius.form.extension.type.gateway_config.crypted',
            ),
            'sylius.gateway_factories' => array(
                'offline' => 'sylius.payum_gateway_factory.offline',
                'paypal_express_checkout' => 'sylius.payum_gateway_factory.paypal_express_checkout',
                'stripe_checkout' => 'sylius.payum_gateway_factory.stripe_checkout',
            ),
        );
    }
}

class SyliusBundleMoneyBundleTemplatingHelperConvertMoneyHelper_0000000042552370000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\MoneyBundle\Templating\Helper\ConvertMoneyHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae814a58569300869 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae814a7d729433056 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae814a0a507853932 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function convertAmount($amount, $sourceCurrencyCode, $targetCurrencyCode)
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, 'convertAmount', array('amount' => $amount, 'sourceCurrencyCode' => $sourceCurrencyCode, 'targetCurrencyCode' => $targetCurrencyCode), $this->initializer593f9ae814a7d729433056);

        return $this->valueHolder593f9ae814a58569300869->convertAmount($amount, $sourceCurrencyCode, $targetCurrencyCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, 'getName', array(), $this->initializer593f9ae814a7d729433056);

        return $this->valueHolder593f9ae814a58569300869->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, 'setCharset', array('charset' => $charset), $this->initializer593f9ae814a7d729433056);

        return $this->valueHolder593f9ae814a58569300869->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, 'getCharset', array(), $this->initializer593f9ae814a7d729433056);

        return $this->valueHolder593f9ae814a58569300869->getCharset();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae814a7d729433056 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, '__get', array('name' => $name), $this->initializer593f9ae814a7d729433056);

        if (isset(self::$publicProperties593f9ae814a0a507853932[$name])) {
            return $this->valueHolder593f9ae814a58569300869->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae814a58569300869;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae814a58569300869;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae814a7d729433056);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae814a58569300869;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae814a58569300869;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, '__isset', array('name' => $name), $this->initializer593f9ae814a7d729433056);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae814a58569300869;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae814a58569300869;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, '__unset', array('name' => $name), $this->initializer593f9ae814a7d729433056);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae814a58569300869;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae814a58569300869;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, '__clone', array(), $this->initializer593f9ae814a7d729433056);

        $this->valueHolder593f9ae814a58569300869 = clone $this->valueHolder593f9ae814a58569300869;
    }

    public function __sleep()
    {
        $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, '__sleep', array(), $this->initializer593f9ae814a7d729433056);

        return array('valueHolder593f9ae814a58569300869');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae814a7d729433056 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae814a7d729433056;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae814a7d729433056 && $this->initializer593f9ae814a7d729433056->__invoke($this->valueHolder593f9ae814a58569300869, $this, 'initializeProxy', array(), $this->initializer593f9ae814a7d729433056);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae814a58569300869;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae814a58569300869;
    }


}

class SyliusBundleMoneyBundleTemplatingHelperFormatMoneyHelper_00000000425526d1000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\MoneyBundle\Templating\Helper\FormatMoneyHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae815e1c770891683 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae815e3e753800755 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae815ddc099524671 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function formatAmount($amount, $currencyCode, $localeCode)
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, 'formatAmount', array('amount' => $amount, 'currencyCode' => $currencyCode, 'localeCode' => $localeCode), $this->initializer593f9ae815e3e753800755);

        return $this->valueHolder593f9ae815e1c770891683->formatAmount($amount, $currencyCode, $localeCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, 'getName', array(), $this->initializer593f9ae815e3e753800755);

        return $this->valueHolder593f9ae815e1c770891683->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, 'setCharset', array('charset' => $charset), $this->initializer593f9ae815e3e753800755);

        return $this->valueHolder593f9ae815e1c770891683->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, 'getCharset', array(), $this->initializer593f9ae815e3e753800755);

        return $this->valueHolder593f9ae815e1c770891683->getCharset();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae815e3e753800755 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, '__get', array('name' => $name), $this->initializer593f9ae815e3e753800755);

        if (isset(self::$publicProperties593f9ae815ddc099524671[$name])) {
            return $this->valueHolder593f9ae815e1c770891683->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae815e1c770891683;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae815e1c770891683;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae815e3e753800755);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae815e1c770891683;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae815e1c770891683;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, '__isset', array('name' => $name), $this->initializer593f9ae815e3e753800755);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae815e1c770891683;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae815e1c770891683;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, '__unset', array('name' => $name), $this->initializer593f9ae815e3e753800755);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae815e1c770891683;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae815e1c770891683;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, '__clone', array(), $this->initializer593f9ae815e3e753800755);

        $this->valueHolder593f9ae815e1c770891683 = clone $this->valueHolder593f9ae815e1c770891683;
    }

    public function __sleep()
    {
        $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, '__sleep', array(), $this->initializer593f9ae815e3e753800755);

        return array('valueHolder593f9ae815e1c770891683');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae815e3e753800755 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae815e3e753800755;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae815e3e753800755 && $this->initializer593f9ae815e3e753800755->__invoke($this->valueHolder593f9ae815e1c770891683, $this, 'initializeProxy', array(), $this->initializer593f9ae815e3e753800755);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae815e1c770891683;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae815e1c770891683;
    }


}

class SyliusBundleCurrencyBundleTemplatingHelperCurrencyHelper_000000004255265f000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\CurrencyBundle\Templating\Helper\CurrencyHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae817049762128072 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae81706b390671807 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae81700c072472553 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function convertCurrencyCodeToSymbol($code)
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, 'convertCurrencyCodeToSymbol', array('code' => $code), $this->initializer593f9ae81706b390671807);

        return $this->valueHolder593f9ae817049762128072->convertCurrencyCodeToSymbol($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, 'getName', array(), $this->initializer593f9ae81706b390671807);

        return $this->valueHolder593f9ae817049762128072->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, 'setCharset', array('charset' => $charset), $this->initializer593f9ae81706b390671807);

        return $this->valueHolder593f9ae817049762128072->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, 'getCharset', array(), $this->initializer593f9ae81706b390671807);

        return $this->valueHolder593f9ae817049762128072->getCharset();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae81706b390671807 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, '__get', array('name' => $name), $this->initializer593f9ae81706b390671807);

        if (isset(self::$publicProperties593f9ae81700c072472553[$name])) {
            return $this->valueHolder593f9ae817049762128072->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae817049762128072;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae817049762128072;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae81706b390671807);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae817049762128072;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae817049762128072;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, '__isset', array('name' => $name), $this->initializer593f9ae81706b390671807);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae817049762128072;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae817049762128072;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, '__unset', array('name' => $name), $this->initializer593f9ae81706b390671807);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae817049762128072;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae817049762128072;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, '__clone', array(), $this->initializer593f9ae81706b390671807);

        $this->valueHolder593f9ae817049762128072 = clone $this->valueHolder593f9ae817049762128072;
    }

    public function __sleep()
    {
        $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, '__sleep', array(), $this->initializer593f9ae81706b390671807);

        return array('valueHolder593f9ae817049762128072');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae81706b390671807 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae81706b390671807;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae81706b390671807 && $this->initializer593f9ae81706b390671807->__invoke($this->valueHolder593f9ae817049762128072, $this, 'initializeProxy', array(), $this->initializer593f9ae81706b390671807);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae817049762128072;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae817049762128072;
    }


}

class SyliusBundleResourceBundleDoctrineORMEntityRepository_000000004255266e000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae818235329316060 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae818257294630727 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae8181f7418304556 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function add(\Sylius\Component\Resource\Model\ResourceInterface $resource)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'add', array('resource' => $resource), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->add($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function remove(\Sylius\Component\Resource\Model\ResourceInterface $resource)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'remove', array('resource' => $resource), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->remove($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function createPaginator(array $criteria = array(), array $sorting = array())
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'createPaginator', array('criteria' => $criteria, 'sorting' => $sorting), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->createPaginator($criteria, $sorting);
    }

    /**
     * {@inheritDoc}
     */
    public function createQueryBuilder($alias, $indexBy = null)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'createQueryBuilder', array('alias' => $alias, 'indexBy' => $indexBy), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->createQueryBuilder($alias, $indexBy);
    }

    /**
     * {@inheritDoc}
     */
    public function createResultSetMappingBuilder($alias)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'createResultSetMappingBuilder', array('alias' => $alias), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->createResultSetMappingBuilder($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function createNamedQuery($queryName)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'createNamedQuery', array('queryName' => $queryName), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->createNamedQuery($queryName);
    }

    /**
     * {@inheritDoc}
     */
    public function createNativeNamedQuery($queryName)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'createNativeNamedQuery', array('queryName' => $queryName), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->createNativeNamedQuery($queryName);
    }

    /**
     * {@inheritDoc}
     */
    public function clear()
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'clear', array(), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->clear();
    }

    /**
     * {@inheritDoc}
     */
    public function find($id, $lockMode = null, $lockVersion = null)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'find', array('id' => $id, 'lockMode' => $lockMode, 'lockVersion' => $lockVersion), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->find($id, $lockMode, $lockVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function findAll()
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'findAll', array(), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->findAll();
    }

    /**
     * {@inheritDoc}
     */
    public function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'findBy', array('criteria' => $criteria, 'orderBy' => $orderBy, 'limit' => $limit, 'offset' => $offset), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->findBy($criteria, $orderBy, $limit, $offset);
    }

    /**
     * {@inheritDoc}
     */
    public function findOneBy(array $criteria, array $orderBy = null)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'findOneBy', array('criteria' => $criteria, 'orderBy' => $orderBy), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->findOneBy($criteria, $orderBy);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, $arguments)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__call', array('method' => $method, 'arguments' => $arguments), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->__call($method, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassName()
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'getClassName', array(), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->getClassName();
    }

    /**
     * {@inheritDoc}
     */
    public function matching(\Doctrine\Common\Collections\Criteria $criteria)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'matching', array('criteria' => $criteria), $this->initializer593f9ae818257294630727);

        return $this->valueHolder593f9ae818235329316060->matching($criteria);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae818257294630727 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__get', array('name' => $name), $this->initializer593f9ae818257294630727);

        if (isset(self::$publicProperties593f9ae8181f7418304556[$name])) {
            return $this->valueHolder593f9ae818235329316060->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae818235329316060;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae818235329316060;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae818257294630727);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae818235329316060;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae818235329316060;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__isset', array('name' => $name), $this->initializer593f9ae818257294630727);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae818235329316060;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae818235329316060;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__unset', array('name' => $name), $this->initializer593f9ae818257294630727);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae818235329316060;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae818235329316060;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__clone', array(), $this->initializer593f9ae818257294630727);

        $this->valueHolder593f9ae818235329316060 = clone $this->valueHolder593f9ae818235329316060;
    }

    public function __sleep()
    {
        $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, '__sleep', array(), $this->initializer593f9ae818257294630727);

        return array('valueHolder593f9ae818235329316060');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae818257294630727 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae818257294630727;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae818257294630727 && $this->initializer593f9ae818257294630727->__invoke($this->valueHolder593f9ae818235329316060, $this, 'initializeProxy', array(), $this->initializer593f9ae818257294630727);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae818235329316060;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae818235329316060;
    }


}

class SyliusBundleChannelBundleDoctrineORMChannelRepository_0000000042552998000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\ChannelBundle\Doctrine\ORM\ChannelRepository implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae81dcc6947242633 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae81dce8530479935 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae81dc82160587247 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function findOneByHostname($hostname)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'findOneByHostname', array('hostname' => $hostname), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->findOneByHostname($hostname);
    }

    /**
     * {@inheritDoc}
     */
    public function findOneByCode($code)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'findOneByCode', array('code' => $code), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->findOneByCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function findByName($name)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'findByName', array('name' => $name), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->findByName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function add(\Sylius\Component\Resource\Model\ResourceInterface $resource)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'add', array('resource' => $resource), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->add($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function remove(\Sylius\Component\Resource\Model\ResourceInterface $resource)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'remove', array('resource' => $resource), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->remove($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function createPaginator(array $criteria = array(), array $sorting = array())
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'createPaginator', array('criteria' => $criteria, 'sorting' => $sorting), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->createPaginator($criteria, $sorting);
    }

    /**
     * {@inheritDoc}
     */
    public function createQueryBuilder($alias, $indexBy = null)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'createQueryBuilder', array('alias' => $alias, 'indexBy' => $indexBy), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->createQueryBuilder($alias, $indexBy);
    }

    /**
     * {@inheritDoc}
     */
    public function createResultSetMappingBuilder($alias)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'createResultSetMappingBuilder', array('alias' => $alias), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->createResultSetMappingBuilder($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function createNamedQuery($queryName)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'createNamedQuery', array('queryName' => $queryName), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->createNamedQuery($queryName);
    }

    /**
     * {@inheritDoc}
     */
    public function createNativeNamedQuery($queryName)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'createNativeNamedQuery', array('queryName' => $queryName), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->createNativeNamedQuery($queryName);
    }

    /**
     * {@inheritDoc}
     */
    public function clear()
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'clear', array(), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->clear();
    }

    /**
     * {@inheritDoc}
     */
    public function find($id, $lockMode = null, $lockVersion = null)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'find', array('id' => $id, 'lockMode' => $lockMode, 'lockVersion' => $lockVersion), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->find($id, $lockMode, $lockVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function findAll()
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'findAll', array(), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->findAll();
    }

    /**
     * {@inheritDoc}
     */
    public function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'findBy', array('criteria' => $criteria, 'orderBy' => $orderBy, 'limit' => $limit, 'offset' => $offset), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->findBy($criteria, $orderBy, $limit, $offset);
    }

    /**
     * {@inheritDoc}
     */
    public function findOneBy(array $criteria, array $orderBy = null)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'findOneBy', array('criteria' => $criteria, 'orderBy' => $orderBy), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->findOneBy($criteria, $orderBy);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, $arguments)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__call', array('method' => $method, 'arguments' => $arguments), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->__call($method, $arguments);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassName()
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'getClassName', array(), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->getClassName();
    }

    /**
     * {@inheritDoc}
     */
    public function matching(\Doctrine\Common\Collections\Criteria $criteria)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'matching', array('criteria' => $criteria), $this->initializer593f9ae81dce8530479935);

        return $this->valueHolder593f9ae81dcc6947242633->matching($criteria);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae81dce8530479935 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__get', array('name' => $name), $this->initializer593f9ae81dce8530479935);

        if (isset(self::$publicProperties593f9ae81dc82160587247[$name])) {
            return $this->valueHolder593f9ae81dcc6947242633->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae81dcc6947242633;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae81dcc6947242633;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae81dce8530479935);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae81dcc6947242633;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae81dcc6947242633;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__isset', array('name' => $name), $this->initializer593f9ae81dce8530479935);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae81dcc6947242633;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae81dcc6947242633;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__unset', array('name' => $name), $this->initializer593f9ae81dce8530479935);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae81dcc6947242633;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae81dcc6947242633;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__clone', array(), $this->initializer593f9ae81dce8530479935);

        $this->valueHolder593f9ae81dcc6947242633 = clone $this->valueHolder593f9ae81dcc6947242633;
    }

    public function __sleep()
    {
        $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, '__sleep', array(), $this->initializer593f9ae81dce8530479935);

        return array('valueHolder593f9ae81dcc6947242633');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae81dce8530479935 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae81dce8530479935;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae81dce8530479935 && $this->initializer593f9ae81dce8530479935->__invoke($this->valueHolder593f9ae81dcc6947242633, $this, 'initializeProxy', array(), $this->initializer593f9ae81dce8530479935);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae81dcc6947242633;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae81dcc6947242633;
    }


}

class SyliusComponentAddressingProviderProvinceNamingProvider_0000000042552e73000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Component\Addressing\Provider\ProvinceNamingProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae823ca5071104845 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae823cc8422280900 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae823c53810347061 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getName(\Sylius\Component\Addressing\Model\AddressInterface $address)
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, 'getName', array('address' => $address), $this->initializer593f9ae823cc8422280900);

        return $this->valueHolder593f9ae823ca5071104845->getName($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbbreviation(\Sylius\Component\Addressing\Model\AddressInterface $address)
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, 'getAbbreviation', array('address' => $address), $this->initializer593f9ae823cc8422280900);

        return $this->valueHolder593f9ae823ca5071104845->getAbbreviation($address);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae823cc8422280900 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, '__get', array('name' => $name), $this->initializer593f9ae823cc8422280900);

        if (isset(self::$publicProperties593f9ae823c53810347061[$name])) {
            return $this->valueHolder593f9ae823ca5071104845->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae823ca5071104845;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae823ca5071104845;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae823cc8422280900);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae823ca5071104845;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae823ca5071104845;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, '__isset', array('name' => $name), $this->initializer593f9ae823cc8422280900);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae823ca5071104845;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae823ca5071104845;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, '__unset', array('name' => $name), $this->initializer593f9ae823cc8422280900);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae823ca5071104845;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae823ca5071104845;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, '__clone', array(), $this->initializer593f9ae823cc8422280900);

        $this->valueHolder593f9ae823ca5071104845 = clone $this->valueHolder593f9ae823ca5071104845;
    }

    public function __sleep()
    {
        $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, '__sleep', array(), $this->initializer593f9ae823cc8422280900);

        return array('valueHolder593f9ae823ca5071104845');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae823cc8422280900 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae823cc8422280900;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae823cc8422280900 && $this->initializer593f9ae823cc8422280900->__invoke($this->valueHolder593f9ae823ca5071104845, $this, 'initializeProxy', array(), $this->initializer593f9ae823cc8422280900);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae823ca5071104845;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae823ca5071104845;
    }


}

class SyliusBundleUserBundleProviderEmailProvider_000000004255233d000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\EmailProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae824b26841302498 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae824b59021783280 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae824abd879525895 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae824b59021783280);

        return $this->valueHolder593f9ae824b26841302498->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae824b59021783280);

        return $this->valueHolder593f9ae824b26841302498->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae824b59021783280);

        return $this->valueHolder593f9ae824b26841302498->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae824b59021783280 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, '__get', array('name' => $name), $this->initializer593f9ae824b59021783280);

        if (isset(self::$publicProperties593f9ae824abd879525895[$name])) {
            return $this->valueHolder593f9ae824b26841302498->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae824b26841302498;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae824b26841302498;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae824b59021783280);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae824b26841302498;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae824b26841302498;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, '__isset', array('name' => $name), $this->initializer593f9ae824b59021783280);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae824b26841302498;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae824b26841302498;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, '__unset', array('name' => $name), $this->initializer593f9ae824b59021783280);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae824b26841302498;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae824b26841302498;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, '__clone', array(), $this->initializer593f9ae824b59021783280);

        $this->valueHolder593f9ae824b26841302498 = clone $this->valueHolder593f9ae824b26841302498;
    }

    public function __sleep()
    {
        $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, '__sleep', array(), $this->initializer593f9ae824b59021783280);

        return array('valueHolder593f9ae824b26841302498');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae824b59021783280 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae824b59021783280;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae824b59021783280 && $this->initializer593f9ae824b59021783280->__invoke($this->valueHolder593f9ae824b26841302498, $this, 'initializeProxy', array(), $this->initializer593f9ae824b59021783280);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae824b26841302498;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae824b26841302498;
    }


}

class SyliusBundleUserBundleProviderUsernameProvider_0000000042552303000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\UsernameProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae825cb9780665055 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae825cdb876681726 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae825c79860517706 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae825cdb876681726);

        return $this->valueHolder593f9ae825cb9780665055->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae825cdb876681726);

        return $this->valueHolder593f9ae825cb9780665055->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae825cdb876681726);

        return $this->valueHolder593f9ae825cb9780665055->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae825cdb876681726 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, '__get', array('name' => $name), $this->initializer593f9ae825cdb876681726);

        if (isset(self::$publicProperties593f9ae825c79860517706[$name])) {
            return $this->valueHolder593f9ae825cb9780665055->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae825cb9780665055;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae825cb9780665055;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae825cdb876681726);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae825cb9780665055;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae825cb9780665055;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, '__isset', array('name' => $name), $this->initializer593f9ae825cdb876681726);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae825cb9780665055;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae825cb9780665055;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, '__unset', array('name' => $name), $this->initializer593f9ae825cdb876681726);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae825cb9780665055;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae825cb9780665055;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, '__clone', array(), $this->initializer593f9ae825cdb876681726);

        $this->valueHolder593f9ae825cb9780665055 = clone $this->valueHolder593f9ae825cb9780665055;
    }

    public function __sleep()
    {
        $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, '__sleep', array(), $this->initializer593f9ae825cdb876681726);

        return array('valueHolder593f9ae825cb9780665055');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae825cdb876681726 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae825cdb876681726;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae825cdb876681726 && $this->initializer593f9ae825cdb876681726->__invoke($this->valueHolder593f9ae825cb9780665055, $this, 'initializeProxy', array(), $this->initializer593f9ae825cdb876681726);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae825cb9780665055;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae825cb9780665055;
    }


}

class SyliusBundleUserBundleProviderUsernameOrEmailProvider_000000004255233c000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae826cd3289705269 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae826cf4555495345 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae826c95878699972 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae826cf4555495345);

        return $this->valueHolder593f9ae826cd3289705269->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae826cf4555495345);

        return $this->valueHolder593f9ae826cd3289705269->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae826cf4555495345);

        return $this->valueHolder593f9ae826cd3289705269->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae826cf4555495345 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, '__get', array('name' => $name), $this->initializer593f9ae826cf4555495345);

        if (isset(self::$publicProperties593f9ae826c95878699972[$name])) {
            return $this->valueHolder593f9ae826cd3289705269->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae826cd3289705269;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae826cd3289705269;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae826cf4555495345);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae826cd3289705269;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae826cd3289705269;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, '__isset', array('name' => $name), $this->initializer593f9ae826cf4555495345);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae826cd3289705269;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae826cd3289705269;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, '__unset', array('name' => $name), $this->initializer593f9ae826cf4555495345);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae826cd3289705269;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae826cd3289705269;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, '__clone', array(), $this->initializer593f9ae826cf4555495345);

        $this->valueHolder593f9ae826cd3289705269 = clone $this->valueHolder593f9ae826cd3289705269;
    }

    public function __sleep()
    {
        $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, '__sleep', array(), $this->initializer593f9ae826cf4555495345);

        return array('valueHolder593f9ae826cd3289705269');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae826cf4555495345 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae826cf4555495345;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae826cf4555495345 && $this->initializer593f9ae826cf4555495345->__invoke($this->valueHolder593f9ae826cd3289705269, $this, 'initializeProxy', array(), $this->initializer593f9ae826cf4555495345);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae826cd3289705269;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae826cd3289705269;
    }


}

class SyliusBundleUserBundleProviderEmailProvider_000000004255233f000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\EmailProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae827cf6696251457 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae827d18557901680 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae827cb7634545012 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae827d18557901680);

        return $this->valueHolder593f9ae827cf6696251457->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae827d18557901680);

        return $this->valueHolder593f9ae827cf6696251457->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae827d18557901680);

        return $this->valueHolder593f9ae827cf6696251457->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae827d18557901680 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, '__get', array('name' => $name), $this->initializer593f9ae827d18557901680);

        if (isset(self::$publicProperties593f9ae827cb7634545012[$name])) {
            return $this->valueHolder593f9ae827cf6696251457->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae827cf6696251457;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae827cf6696251457;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae827d18557901680);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae827cf6696251457;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae827cf6696251457;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, '__isset', array('name' => $name), $this->initializer593f9ae827d18557901680);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae827cf6696251457;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae827cf6696251457;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, '__unset', array('name' => $name), $this->initializer593f9ae827d18557901680);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae827cf6696251457;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae827cf6696251457;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, '__clone', array(), $this->initializer593f9ae827d18557901680);

        $this->valueHolder593f9ae827cf6696251457 = clone $this->valueHolder593f9ae827cf6696251457;
    }

    public function __sleep()
    {
        $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, '__sleep', array(), $this->initializer593f9ae827d18557901680);

        return array('valueHolder593f9ae827cf6696251457');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae827d18557901680 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae827d18557901680;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae827d18557901680 && $this->initializer593f9ae827d18557901680->__invoke($this->valueHolder593f9ae827cf6696251457, $this, 'initializeProxy', array(), $this->initializer593f9ae827d18557901680);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae827cf6696251457;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae827cf6696251457;
    }


}

class SyliusBundleUserBundleProviderUsernameProvider_000000004255233e000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\UsernameProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae828d63698823114 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae828d97795964398 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae828d07888633072 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae828d97795964398);

        return $this->valueHolder593f9ae828d63698823114->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae828d97795964398);

        return $this->valueHolder593f9ae828d63698823114->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae828d97795964398);

        return $this->valueHolder593f9ae828d63698823114->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae828d97795964398 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, '__get', array('name' => $name), $this->initializer593f9ae828d97795964398);

        if (isset(self::$publicProperties593f9ae828d07888633072[$name])) {
            return $this->valueHolder593f9ae828d63698823114->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae828d63698823114;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae828d63698823114;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae828d97795964398);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae828d63698823114;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae828d63698823114;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, '__isset', array('name' => $name), $this->initializer593f9ae828d97795964398);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae828d63698823114;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae828d63698823114;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, '__unset', array('name' => $name), $this->initializer593f9ae828d97795964398);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae828d63698823114;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae828d63698823114;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, '__clone', array(), $this->initializer593f9ae828d97795964398);

        $this->valueHolder593f9ae828d63698823114 = clone $this->valueHolder593f9ae828d63698823114;
    }

    public function __sleep()
    {
        $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, '__sleep', array(), $this->initializer593f9ae828d97795964398);

        return array('valueHolder593f9ae828d63698823114');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae828d97795964398 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae828d97795964398;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae828d97795964398 && $this->initializer593f9ae828d97795964398->__invoke($this->valueHolder593f9ae828d63698823114, $this, 'initializeProxy', array(), $this->initializer593f9ae828d97795964398);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae828d63698823114;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae828d63698823114;
    }


}

class SyliusBundleUserBundleProviderUsernameOrEmailProvider_0000000042552339000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae829fc1328425899 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae829fe3068676705 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae829f80420002282 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae829fe3068676705);

        return $this->valueHolder593f9ae829fc1328425899->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae829fe3068676705);

        return $this->valueHolder593f9ae829fc1328425899->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae829fe3068676705);

        return $this->valueHolder593f9ae829fc1328425899->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae829fe3068676705 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, '__get', array('name' => $name), $this->initializer593f9ae829fe3068676705);

        if (isset(self::$publicProperties593f9ae829f80420002282[$name])) {
            return $this->valueHolder593f9ae829fc1328425899->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae829fc1328425899;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae829fc1328425899;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae829fe3068676705);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae829fc1328425899;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae829fc1328425899;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, '__isset', array('name' => $name), $this->initializer593f9ae829fe3068676705);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae829fc1328425899;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae829fc1328425899;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, '__unset', array('name' => $name), $this->initializer593f9ae829fe3068676705);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae829fc1328425899;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae829fc1328425899;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, '__clone', array(), $this->initializer593f9ae829fe3068676705);

        $this->valueHolder593f9ae829fc1328425899 = clone $this->valueHolder593f9ae829fc1328425899;
    }

    public function __sleep()
    {
        $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, '__sleep', array(), $this->initializer593f9ae829fe3068676705);

        return array('valueHolder593f9ae829fc1328425899');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae829fe3068676705 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae829fe3068676705;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae829fe3068676705 && $this->initializer593f9ae829fe3068676705->__invoke($this->valueHolder593f9ae829fc1328425899, $this, 'initializeProxy', array(), $this->initializer593f9ae829fe3068676705);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae829fc1328425899;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae829fc1328425899;
    }


}

class SyliusBundleUserBundleProviderEmailProvider_0000000042552338000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\EmailProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae82b273202648348 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae82b296952780351 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae82b22e327314047 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae82b296952780351);

        return $this->valueHolder593f9ae82b273202648348->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae82b296952780351);

        return $this->valueHolder593f9ae82b273202648348->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae82b296952780351);

        return $this->valueHolder593f9ae82b273202648348->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae82b296952780351 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, '__get', array('name' => $name), $this->initializer593f9ae82b296952780351);

        if (isset(self::$publicProperties593f9ae82b22e327314047[$name])) {
            return $this->valueHolder593f9ae82b273202648348->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82b273202648348;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82b273202648348;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae82b296952780351);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82b273202648348;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82b273202648348;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, '__isset', array('name' => $name), $this->initializer593f9ae82b296952780351);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82b273202648348;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82b273202648348;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, '__unset', array('name' => $name), $this->initializer593f9ae82b296952780351);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82b273202648348;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82b273202648348;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, '__clone', array(), $this->initializer593f9ae82b296952780351);

        $this->valueHolder593f9ae82b273202648348 = clone $this->valueHolder593f9ae82b273202648348;
    }

    public function __sleep()
    {
        $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, '__sleep', array(), $this->initializer593f9ae82b296952780351);

        return array('valueHolder593f9ae82b273202648348');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae82b296952780351 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae82b296952780351;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae82b296952780351 && $this->initializer593f9ae82b296952780351->__invoke($this->valueHolder593f9ae82b273202648348, $this, 'initializeProxy', array(), $this->initializer593f9ae82b296952780351);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae82b273202648348;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae82b273202648348;
    }


}

class SyliusBundleUserBundleProviderUsernameProvider_000000004255233b000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\UsernameProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae82c2af438196540 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae82c2d0409885495 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae82c271490999509 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae82c2d0409885495);

        return $this->valueHolder593f9ae82c2af438196540->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae82c2d0409885495);

        return $this->valueHolder593f9ae82c2af438196540->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae82c2d0409885495);

        return $this->valueHolder593f9ae82c2af438196540->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae82c2d0409885495 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, '__get', array('name' => $name), $this->initializer593f9ae82c2d0409885495);

        if (isset(self::$publicProperties593f9ae82c271490999509[$name])) {
            return $this->valueHolder593f9ae82c2af438196540->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82c2af438196540;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82c2af438196540;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae82c2d0409885495);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82c2af438196540;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82c2af438196540;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, '__isset', array('name' => $name), $this->initializer593f9ae82c2d0409885495);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82c2af438196540;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82c2af438196540;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, '__unset', array('name' => $name), $this->initializer593f9ae82c2d0409885495);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82c2af438196540;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82c2af438196540;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, '__clone', array(), $this->initializer593f9ae82c2d0409885495);

        $this->valueHolder593f9ae82c2af438196540 = clone $this->valueHolder593f9ae82c2af438196540;
    }

    public function __sleep()
    {
        $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, '__sleep', array(), $this->initializer593f9ae82c2d0409885495);

        return array('valueHolder593f9ae82c2af438196540');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae82c2d0409885495 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae82c2d0409885495;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae82c2d0409885495 && $this->initializer593f9ae82c2d0409885495->__invoke($this->valueHolder593f9ae82c2af438196540, $this, 'initializeProxy', array(), $this->initializer593f9ae82c2d0409885495);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae82c2af438196540;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae82c2af438196540;
    }


}

class SyliusBundleUserBundleProviderUsernameOrEmailProvider_000000004255233a000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\UserBundle\Provider\UsernameOrEmailProvider implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae82d3a7860088238 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae82d3c9399593599 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae82d367598718514 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function loadUserByUsername($username)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, 'loadUserByUsername', array('username' => $username), $this->initializer593f9ae82d3c9399593599);

        return $this->valueHolder593f9ae82d3a7860088238->loadUserByUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshUser(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, 'refreshUser', array('user' => $user), $this->initializer593f9ae82d3c9399593599);

        return $this->valueHolder593f9ae82d3a7860088238->refreshUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function supportsClass($class)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, 'supportsClass', array('class' => $class), $this->initializer593f9ae82d3c9399593599);

        return $this->valueHolder593f9ae82d3a7860088238->supportsClass($class);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae82d3c9399593599 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, '__get', array('name' => $name), $this->initializer593f9ae82d3c9399593599);

        if (isset(self::$publicProperties593f9ae82d367598718514[$name])) {
            return $this->valueHolder593f9ae82d3a7860088238->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82d3a7860088238;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82d3a7860088238;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae82d3c9399593599);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82d3a7860088238;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82d3a7860088238;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, '__isset', array('name' => $name), $this->initializer593f9ae82d3c9399593599);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82d3a7860088238;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82d3a7860088238;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, '__unset', array('name' => $name), $this->initializer593f9ae82d3c9399593599);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82d3a7860088238;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82d3a7860088238;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, '__clone', array(), $this->initializer593f9ae82d3c9399593599);

        $this->valueHolder593f9ae82d3a7860088238 = clone $this->valueHolder593f9ae82d3a7860088238;
    }

    public function __sleep()
    {
        $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, '__sleep', array(), $this->initializer593f9ae82d3c9399593599);

        return array('valueHolder593f9ae82d3a7860088238');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae82d3c9399593599 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae82d3c9399593599;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae82d3c9399593599 && $this->initializer593f9ae82d3c9399593599->__invoke($this->valueHolder593f9ae82d3a7860088238, $this, 'initializeProxy', array(), $this->initializer593f9ae82d3c9399593599);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae82d3a7860088238;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae82d3a7860088238;
    }


}

class SyliusComponentCoreContextShopperContext_000000004255328b000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Component\Core\Context\ShopperContext implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae82e4d4573320587 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae82e4f6996468785 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae82e494238999829 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, 'getChannel', array(), $this->initializer593f9ae82e4f6996468785);

        return $this->valueHolder593f9ae82e4d4573320587->getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencyCode()
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, 'getCurrencyCode', array(), $this->initializer593f9ae82e4f6996468785);

        return $this->valueHolder593f9ae82e4d4573320587->getCurrencyCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocaleCode()
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, 'getLocaleCode', array(), $this->initializer593f9ae82e4f6996468785);

        return $this->valueHolder593f9ae82e4d4573320587->getLocaleCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, 'getCustomer', array(), $this->initializer593f9ae82e4f6996468785);

        return $this->valueHolder593f9ae82e4d4573320587->getCustomer();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae82e4f6996468785 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, '__get', array('name' => $name), $this->initializer593f9ae82e4f6996468785);

        if (isset(self::$publicProperties593f9ae82e494238999829[$name])) {
            return $this->valueHolder593f9ae82e4d4573320587->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82e4d4573320587;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82e4d4573320587;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae82e4f6996468785);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82e4d4573320587;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82e4d4573320587;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, '__isset', array('name' => $name), $this->initializer593f9ae82e4f6996468785);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82e4d4573320587;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82e4d4573320587;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, '__unset', array('name' => $name), $this->initializer593f9ae82e4f6996468785);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82e4d4573320587;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82e4d4573320587;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, '__clone', array(), $this->initializer593f9ae82e4f6996468785);

        $this->valueHolder593f9ae82e4d4573320587 = clone $this->valueHolder593f9ae82e4d4573320587;
    }

    public function __sleep()
    {
        $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, '__sleep', array(), $this->initializer593f9ae82e4f6996468785);

        return array('valueHolder593f9ae82e4d4573320587');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae82e4f6996468785 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae82e4f6996468785;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae82e4f6996468785 && $this->initializer593f9ae82e4f6996468785->__invoke($this->valueHolder593f9ae82e4d4573320587, $this, 'initializeProxy', array(), $this->initializer593f9ae82e4f6996468785);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae82e4d4573320587;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae82e4d4573320587;
    }


}

class SyliusBundleCoreBundleTemplatingHelperPriceHelper_00000000425534f7000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\CoreBundle\Templating\Helper\PriceHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae82f445929696911 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae82f467755138086 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae82f408354423902 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getPrice(\Sylius\Component\Core\Model\ProductVariantInterface $productVariant, array $context)
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, 'getPrice', array('productVariant' => $productVariant, 'context' => $context), $this->initializer593f9ae82f467755138086);

        return $this->valueHolder593f9ae82f445929696911->getPrice($productVariant, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, 'getName', array(), $this->initializer593f9ae82f467755138086);

        return $this->valueHolder593f9ae82f445929696911->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, 'setCharset', array('charset' => $charset), $this->initializer593f9ae82f467755138086);

        return $this->valueHolder593f9ae82f445929696911->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, 'getCharset', array(), $this->initializer593f9ae82f467755138086);

        return $this->valueHolder593f9ae82f445929696911->getCharset();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae82f467755138086 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, '__get', array('name' => $name), $this->initializer593f9ae82f467755138086);

        if (isset(self::$publicProperties593f9ae82f408354423902[$name])) {
            return $this->valueHolder593f9ae82f445929696911->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82f445929696911;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82f445929696911;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae82f467755138086);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82f445929696911;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82f445929696911;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, '__isset', array('name' => $name), $this->initializer593f9ae82f467755138086);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82f445929696911;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82f445929696911;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, '__unset', array('name' => $name), $this->initializer593f9ae82f467755138086);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae82f445929696911;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae82f445929696911;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, '__clone', array(), $this->initializer593f9ae82f467755138086);

        $this->valueHolder593f9ae82f445929696911 = clone $this->valueHolder593f9ae82f445929696911;
    }

    public function __sleep()
    {
        $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, '__sleep', array(), $this->initializer593f9ae82f467755138086);

        return array('valueHolder593f9ae82f445929696911');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae82f467755138086 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae82f467755138086;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae82f467755138086 && $this->initializer593f9ae82f467755138086->__invoke($this->valueHolder593f9ae82f445929696911, $this, 'initializeProxy', array(), $this->initializer593f9ae82f467755138086);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae82f445929696911;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae82f445929696911;
    }


}

class SyliusBundleCoreBundleTemplatingHelperCheckoutStepsHelper_00000000425534f3000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\CoreBundle\Templating\Helper\CheckoutStepsHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae8306b3780604270 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae8306d4108082906 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae830675500925143 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function isShippingRequired(\Sylius\Component\Core\Model\OrderInterface $order)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, 'isShippingRequired', array('order' => $order), $this->initializer593f9ae8306d4108082906);

        return $this->valueHolder593f9ae8306b3780604270->isShippingRequired($order);
    }

    /**
     * {@inheritDoc}
     */
    public function isPaymentRequired(\Sylius\Component\Core\Model\OrderInterface $order)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, 'isPaymentRequired', array('order' => $order), $this->initializer593f9ae8306d4108082906);

        return $this->valueHolder593f9ae8306b3780604270->isPaymentRequired($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, 'getName', array(), $this->initializer593f9ae8306d4108082906);

        return $this->valueHolder593f9ae8306b3780604270->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, 'setCharset', array('charset' => $charset), $this->initializer593f9ae8306d4108082906);

        return $this->valueHolder593f9ae8306b3780604270->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, 'getCharset', array(), $this->initializer593f9ae8306d4108082906);

        return $this->valueHolder593f9ae8306b3780604270->getCharset();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae8306d4108082906 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, '__get', array('name' => $name), $this->initializer593f9ae8306d4108082906);

        if (isset(self::$publicProperties593f9ae830675500925143[$name])) {
            return $this->valueHolder593f9ae8306b3780604270->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8306b3780604270;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8306b3780604270;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae8306d4108082906);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8306b3780604270;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8306b3780604270;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, '__isset', array('name' => $name), $this->initializer593f9ae8306d4108082906);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8306b3780604270;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8306b3780604270;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, '__unset', array('name' => $name), $this->initializer593f9ae8306d4108082906);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8306b3780604270;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8306b3780604270;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, '__clone', array(), $this->initializer593f9ae8306d4108082906);

        $this->valueHolder593f9ae8306b3780604270 = clone $this->valueHolder593f9ae8306b3780604270;
    }

    public function __sleep()
    {
        $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, '__sleep', array(), $this->initializer593f9ae8306d4108082906);

        return array('valueHolder593f9ae8306b3780604270');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae8306d4108082906 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae8306d4108082906;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae8306d4108082906 && $this->initializer593f9ae8306d4108082906->__invoke($this->valueHolder593f9ae8306b3780604270, $this, 'initializeProxy', array(), $this->initializer593f9ae8306d4108082906);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae8306b3780604270;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae8306b3780604270;
    }


}

class SyliusBundleGridBundleTemplatingHelperGridHelper_00000000425524ba000000006249aceee5402f250da41f565fbc51797d001de6 extends \Sylius\Bundle\GridBundle\Templating\Helper\GridHelper implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae831fa4213983539 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae831fc8615182736 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae831f63290022266 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function renderGrid(\Sylius\Component\Grid\View\GridView $gridView, $template = null)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'renderGrid', array('gridView' => $gridView, 'template' => $template), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->renderGrid($gridView, $template);
    }

    /**
     * {@inheritDoc}
     */
    public function renderField(\Sylius\Component\Grid\View\GridView $gridView, \Sylius\Component\Grid\Definition\Field $field, $data)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'renderField', array('gridView' => $gridView, 'field' => $field, 'data' => $data), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->renderField($gridView, $field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function renderAction(\Sylius\Component\Grid\View\GridView $gridView, \Sylius\Component\Grid\Definition\Action $action, $data = null)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'renderAction', array('gridView' => $gridView, 'action' => $action, 'data' => $data), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->renderAction($gridView, $action, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function renderFilter(\Sylius\Component\Grid\View\GridView $gridView, \Sylius\Component\Grid\Definition\Filter $filter)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'renderFilter', array('gridView' => $gridView, 'filter' => $filter), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->renderFilter($gridView, $filter);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'getName', array(), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharset($charset)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'setCharset', array('charset' => $charset), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->setCharset($charset);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharset()
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'getCharset', array(), $this->initializer593f9ae831fc8615182736);

        return $this->valueHolder593f9ae831fa4213983539->getCharset();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae831fc8615182736 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, '__get', array('name' => $name), $this->initializer593f9ae831fc8615182736);

        if (isset(self::$publicProperties593f9ae831f63290022266[$name])) {
            return $this->valueHolder593f9ae831fa4213983539->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae831fa4213983539;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae831fa4213983539;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae831fc8615182736);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae831fa4213983539;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae831fa4213983539;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, '__isset', array('name' => $name), $this->initializer593f9ae831fc8615182736);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae831fa4213983539;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae831fa4213983539;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, '__unset', array('name' => $name), $this->initializer593f9ae831fc8615182736);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae831fa4213983539;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae831fa4213983539;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, '__clone', array(), $this->initializer593f9ae831fc8615182736);

        $this->valueHolder593f9ae831fa4213983539 = clone $this->valueHolder593f9ae831fa4213983539;
    }

    public function __sleep()
    {
        $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, '__sleep', array(), $this->initializer593f9ae831fc8615182736);

        return array('valueHolder593f9ae831fa4213983539');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae831fc8615182736 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae831fc8615182736;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae831fc8615182736 && $this->initializer593f9ae831fc8615182736->__invoke($this->valueHolder593f9ae831fa4213983539, $this, 'initializeProxy', array(), $this->initializer593f9ae831fc8615182736);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae831fa4213983539;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae831fa4213983539;
    }


}

class DoctrineORMEntityManager_000000004255232f000000006249aceee5402f250da41f565fbc51797d001de6 extends \Doctrine\ORM\EntityManager implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae8345eb715905684 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae83462d163732447 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae8345a6800416493 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function getConnection()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getConnection', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetadataFactory()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getMetadataFactory', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getMetadataFactory();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpressionBuilder()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getExpressionBuilder', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getExpressionBuilder();
    }

    /**
     * {@inheritDoc}
     */
    public function beginTransaction()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'beginTransaction', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->beginTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function getCache()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getCache', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getCache();
    }

    /**
     * {@inheritDoc}
     */
    public function transactional($func)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'transactional', array('func' => $func), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->transactional($func);
    }

    /**
     * {@inheritDoc}
     */
    public function commit()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'commit', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->commit();
    }

    /**
     * {@inheritDoc}
     */
    public function rollback()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'rollback', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->rollback();
    }

    /**
     * {@inheritDoc}
     */
    public function getClassMetadata($className)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getClassMetadata', array('className' => $className), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getClassMetadata($className);
    }

    /**
     * {@inheritDoc}
     */
    public function createQuery($dql = '')
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'createQuery', array('dql' => $dql), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->createQuery($dql);
    }

    /**
     * {@inheritDoc}
     */
    public function createNamedQuery($name)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'createNamedQuery', array('name' => $name), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->createNamedQuery($name);
    }

    /**
     * {@inheritDoc}
     */
    public function createNativeQuery($sql, \Doctrine\ORM\Query\ResultSetMapping $rsm)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'createNativeQuery', array('sql' => $sql, 'rsm' => $rsm), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->createNativeQuery($sql, $rsm);
    }

    /**
     * {@inheritDoc}
     */
    public function createNamedNativeQuery($name)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'createNamedNativeQuery', array('name' => $name), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->createNamedNativeQuery($name);
    }

    /**
     * {@inheritDoc}
     */
    public function createQueryBuilder()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'createQueryBuilder', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->createQueryBuilder();
    }

    /**
     * {@inheritDoc}
     */
    public function flush($entity = null)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'flush', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->flush($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function find($entityName, $id, $lockMode = null, $lockVersion = null)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'find', array('entityName' => $entityName, 'id' => $id, 'lockMode' => $lockMode, 'lockVersion' => $lockVersion), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->find($entityName, $id, $lockMode, $lockVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference($entityName, $id)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getReference', array('entityName' => $entityName, 'id' => $id), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getReference($entityName, $id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartialReference($entityName, $identifier)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getPartialReference', array('entityName' => $entityName, 'identifier' => $identifier), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getPartialReference($entityName, $identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function clear($entityName = null)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'clear', array('entityName' => $entityName), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->clear($entityName);
    }

    /**
     * {@inheritDoc}
     */
    public function close()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'close', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->close();
    }

    /**
     * {@inheritDoc}
     */
    public function persist($entity)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'persist', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->persist($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function remove($entity)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'remove', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->remove($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function refresh($entity)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'refresh', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->refresh($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function detach($entity)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'detach', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->detach($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function merge($entity)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'merge', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->merge($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function copy($entity, $deep = false)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'copy', array('entity' => $entity, 'deep' => $deep), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->copy($entity, $deep);
    }

    /**
     * {@inheritDoc}
     */
    public function lock($entity, $lockMode, $lockVersion = null)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'lock', array('entity' => $entity, 'lockMode' => $lockMode, 'lockVersion' => $lockVersion), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->lock($entity, $lockMode, $lockVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository($entityName)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getRepository', array('entityName' => $entityName), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getRepository($entityName);
    }

    /**
     * {@inheritDoc}
     */
    public function contains($entity)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'contains', array('entity' => $entity), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->contains($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventManager()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getEventManager', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getEventManager();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfiguration()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getConfiguration', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getConfiguration();
    }

    /**
     * {@inheritDoc}
     */
    public function isOpen()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'isOpen', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->isOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitOfWork()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getUnitOfWork', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getUnitOfWork();
    }

    /**
     * {@inheritDoc}
     */
    public function getHydrator($hydrationMode)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getHydrator', array('hydrationMode' => $hydrationMode), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getHydrator($hydrationMode);
    }

    /**
     * {@inheritDoc}
     */
    public function newHydrator($hydrationMode)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'newHydrator', array('hydrationMode' => $hydrationMode), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->newHydrator($hydrationMode);
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyFactory()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getProxyFactory', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getProxyFactory();
    }

    /**
     * {@inheritDoc}
     */
    public function initializeObject($obj)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'initializeObject', array('obj' => $obj), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->initializeObject($obj);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilters()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'getFilters', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->getFilters();
    }

    /**
     * {@inheritDoc}
     */
    public function isFiltersStateClean()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'isFiltersStateClean', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->isFiltersStateClean();
    }

    /**
     * {@inheritDoc}
     */
    public function hasFilters()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'hasFilters', array(), $this->initializer593f9ae83462d163732447);

        return $this->valueHolder593f9ae8345eb715905684->hasFilters();
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae83462d163732447 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, '__get', array('name' => $name), $this->initializer593f9ae83462d163732447);

        if (isset(self::$publicProperties593f9ae8345a6800416493[$name])) {
            return $this->valueHolder593f9ae8345eb715905684->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8345eb715905684;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8345eb715905684;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae83462d163732447);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8345eb715905684;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8345eb715905684;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, '__isset', array('name' => $name), $this->initializer593f9ae83462d163732447);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8345eb715905684;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8345eb715905684;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, '__unset', array('name' => $name), $this->initializer593f9ae83462d163732447);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8345eb715905684;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8345eb715905684;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, '__clone', array(), $this->initializer593f9ae83462d163732447);

        $this->valueHolder593f9ae8345eb715905684 = clone $this->valueHolder593f9ae8345eb715905684;
    }

    public function __sleep()
    {
        $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, '__sleep', array(), $this->initializer593f9ae83462d163732447);

        return array('valueHolder593f9ae8345eb715905684');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae83462d163732447 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae83462d163732447;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae83462d163732447 && $this->initializer593f9ae83462d163732447->__invoke($this->valueHolder593f9ae8345eb715905684, $this, 'initializeProxy', array(), $this->initializer593f9ae83462d163732447);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae8345eb715905684;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae8345eb715905684;
    }


}

class SymfonyComponentTranslationLoaderPhpFileLoader_00000000425536b8000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\PhpFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae84091f046544138 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae840941990788427 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae8408dc366875276 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae840941990788427);

        return $this->valueHolder593f9ae84091f046544138->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae840941990788427 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, '__get', array('name' => $name), $this->initializer593f9ae840941990788427);

        if (isset(self::$publicProperties593f9ae8408dc366875276[$name])) {
            return $this->valueHolder593f9ae84091f046544138->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae84091f046544138;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae84091f046544138;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae840941990788427);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae84091f046544138;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae84091f046544138;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, '__isset', array('name' => $name), $this->initializer593f9ae840941990788427);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae84091f046544138;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae84091f046544138;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, '__unset', array('name' => $name), $this->initializer593f9ae840941990788427);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae84091f046544138;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae84091f046544138;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, '__clone', array(), $this->initializer593f9ae840941990788427);

        $this->valueHolder593f9ae84091f046544138 = clone $this->valueHolder593f9ae84091f046544138;
    }

    public function __sleep()
    {
        $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, '__sleep', array(), $this->initializer593f9ae840941990788427);

        return array('valueHolder593f9ae84091f046544138');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae840941990788427 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae840941990788427;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae840941990788427 && $this->initializer593f9ae840941990788427->__invoke($this->valueHolder593f9ae84091f046544138, $this, 'initializeProxy', array(), $this->initializer593f9ae840941990788427);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae84091f046544138;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae84091f046544138;
    }


}

class SymfonyComponentTranslationLoaderYamlFileLoader_00000000425536b7000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\YamlFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae841596800069198 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae8415ba376114482 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae841551585592115 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae8415ba376114482);

        return $this->valueHolder593f9ae841596800069198->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae8415ba376114482 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, '__get', array('name' => $name), $this->initializer593f9ae8415ba376114482);

        if (isset(self::$publicProperties593f9ae841551585592115[$name])) {
            return $this->valueHolder593f9ae841596800069198->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae841596800069198;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae841596800069198;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae8415ba376114482);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae841596800069198;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae841596800069198;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, '__isset', array('name' => $name), $this->initializer593f9ae8415ba376114482);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae841596800069198;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae841596800069198;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, '__unset', array('name' => $name), $this->initializer593f9ae8415ba376114482);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae841596800069198;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae841596800069198;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, '__clone', array(), $this->initializer593f9ae8415ba376114482);

        $this->valueHolder593f9ae841596800069198 = clone $this->valueHolder593f9ae841596800069198;
    }

    public function __sleep()
    {
        $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, '__sleep', array(), $this->initializer593f9ae8415ba376114482);

        return array('valueHolder593f9ae841596800069198');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae8415ba376114482 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae8415ba376114482;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae8415ba376114482 && $this->initializer593f9ae8415ba376114482->__invoke($this->valueHolder593f9ae841596800069198, $this, 'initializeProxy', array(), $this->initializer593f9ae8415ba376114482);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae841596800069198;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae841596800069198;
    }


}

class SymfonyComponentTranslationLoaderXliffFileLoader_00000000425536b6000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\XliffFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae842277108559290 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae842299337181518 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae842235082504388 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae842299337181518);

        return $this->valueHolder593f9ae842277108559290->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae842299337181518 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, '__get', array('name' => $name), $this->initializer593f9ae842299337181518);

        if (isset(self::$publicProperties593f9ae842235082504388[$name])) {
            return $this->valueHolder593f9ae842277108559290->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842277108559290;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842277108559290;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae842299337181518);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842277108559290;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842277108559290;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, '__isset', array('name' => $name), $this->initializer593f9ae842299337181518);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842277108559290;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842277108559290;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, '__unset', array('name' => $name), $this->initializer593f9ae842299337181518);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842277108559290;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842277108559290;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, '__clone', array(), $this->initializer593f9ae842299337181518);

        $this->valueHolder593f9ae842277108559290 = clone $this->valueHolder593f9ae842277108559290;
    }

    public function __sleep()
    {
        $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, '__sleep', array(), $this->initializer593f9ae842299337181518);

        return array('valueHolder593f9ae842277108559290');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae842299337181518 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae842299337181518;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae842299337181518 && $this->initializer593f9ae842299337181518->__invoke($this->valueHolder593f9ae842277108559290, $this, 'initializeProxy', array(), $this->initializer593f9ae842299337181518);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae842277108559290;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae842277108559290;
    }


}

class SymfonyComponentTranslationLoaderPoFileLoader_00000000425536b4000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\PoFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae842d40578281090 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae842d63272006879 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae842d03411397000 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae842d63272006879);

        return $this->valueHolder593f9ae842d40578281090->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae842d63272006879 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, '__get', array('name' => $name), $this->initializer593f9ae842d63272006879);

        if (isset(self::$publicProperties593f9ae842d03411397000[$name])) {
            return $this->valueHolder593f9ae842d40578281090->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842d40578281090;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842d40578281090;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae842d63272006879);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842d40578281090;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842d40578281090;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, '__isset', array('name' => $name), $this->initializer593f9ae842d63272006879);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842d40578281090;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842d40578281090;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, '__unset', array('name' => $name), $this->initializer593f9ae842d63272006879);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae842d40578281090;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae842d40578281090;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, '__clone', array(), $this->initializer593f9ae842d63272006879);

        $this->valueHolder593f9ae842d40578281090 = clone $this->valueHolder593f9ae842d40578281090;
    }

    public function __sleep()
    {
        $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, '__sleep', array(), $this->initializer593f9ae842d63272006879);

        return array('valueHolder593f9ae842d40578281090');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae842d63272006879 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae842d63272006879;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae842d63272006879 && $this->initializer593f9ae842d63272006879->__invoke($this->valueHolder593f9ae842d40578281090, $this, 'initializeProxy', array(), $this->initializer593f9ae842d63272006879);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae842d40578281090;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae842d40578281090;
    }


}

class SymfonyComponentTranslationLoaderMoFileLoader_00000000425536b0000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\MoFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae8438c5820171268 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae8438e9853944647 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae843888483192896 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae8438e9853944647);

        return $this->valueHolder593f9ae8438c5820171268->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae8438e9853944647 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, '__get', array('name' => $name), $this->initializer593f9ae8438e9853944647);

        if (isset(self::$publicProperties593f9ae843888483192896[$name])) {
            return $this->valueHolder593f9ae8438c5820171268->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8438c5820171268;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8438c5820171268;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae8438e9853944647);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8438c5820171268;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8438c5820171268;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, '__isset', array('name' => $name), $this->initializer593f9ae8438e9853944647);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8438c5820171268;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8438c5820171268;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, '__unset', array('name' => $name), $this->initializer593f9ae8438e9853944647);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8438c5820171268;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8438c5820171268;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, '__clone', array(), $this->initializer593f9ae8438e9853944647);

        $this->valueHolder593f9ae8438c5820171268 = clone $this->valueHolder593f9ae8438c5820171268;
    }

    public function __sleep()
    {
        $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, '__sleep', array(), $this->initializer593f9ae8438e9853944647);

        return array('valueHolder593f9ae8438c5820171268');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae8438e9853944647 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae8438e9853944647;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae8438e9853944647 && $this->initializer593f9ae8438e9853944647->__invoke($this->valueHolder593f9ae8438c5820171268, $this, 'initializeProxy', array(), $this->initializer593f9ae8438e9853944647);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae8438c5820171268;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae8438c5820171268;
    }


}

class SymfonyComponentTranslationLoaderQtFileLoader_00000000425536b3000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\QtFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae844416875336745 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae844438163362638 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae8443d9131585156 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae844438163362638);

        return $this->valueHolder593f9ae844416875336745->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae844438163362638 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, '__get', array('name' => $name), $this->initializer593f9ae844438163362638);

        if (isset(self::$publicProperties593f9ae8443d9131585156[$name])) {
            return $this->valueHolder593f9ae844416875336745->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae844416875336745;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae844416875336745;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae844438163362638);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae844416875336745;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae844416875336745;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, '__isset', array('name' => $name), $this->initializer593f9ae844438163362638);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae844416875336745;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae844416875336745;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, '__unset', array('name' => $name), $this->initializer593f9ae844438163362638);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae844416875336745;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae844416875336745;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, '__clone', array(), $this->initializer593f9ae844438163362638);

        $this->valueHolder593f9ae844416875336745 = clone $this->valueHolder593f9ae844416875336745;
    }

    public function __sleep()
    {
        $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, '__sleep', array(), $this->initializer593f9ae844438163362638);

        return array('valueHolder593f9ae844416875336745');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae844438163362638 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae844438163362638;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae844438163362638 && $this->initializer593f9ae844438163362638->__invoke($this->valueHolder593f9ae844416875336745, $this, 'initializeProxy', array(), $this->initializer593f9ae844438163362638);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae844416875336745;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae844416875336745;
    }


}

class SymfonyComponentTranslationLoaderCsvFileLoader_00000000425536b2000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\CsvFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae8451e8501381547 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae84520a889839817 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae8451aa162895078 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function setCsvControl($delimiter = ';', $enclosure = '"', $escape = '\\')
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, 'setCsvControl', array('delimiter' => $delimiter, 'enclosure' => $enclosure, 'escape' => $escape), $this->initializer593f9ae84520a889839817);

        return $this->valueHolder593f9ae8451e8501381547->setCsvControl($delimiter, $enclosure, $escape);
    }

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae84520a889839817);

        return $this->valueHolder593f9ae8451e8501381547->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae84520a889839817 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, '__get', array('name' => $name), $this->initializer593f9ae84520a889839817);

        if (isset(self::$publicProperties593f9ae8451aa162895078[$name])) {
            return $this->valueHolder593f9ae8451e8501381547->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8451e8501381547;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8451e8501381547;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae84520a889839817);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8451e8501381547;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8451e8501381547;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, '__isset', array('name' => $name), $this->initializer593f9ae84520a889839817);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8451e8501381547;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8451e8501381547;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, '__unset', array('name' => $name), $this->initializer593f9ae84520a889839817);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8451e8501381547;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8451e8501381547;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, '__clone', array(), $this->initializer593f9ae84520a889839817);

        $this->valueHolder593f9ae8451e8501381547 = clone $this->valueHolder593f9ae8451e8501381547;
    }

    public function __sleep()
    {
        $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, '__sleep', array(), $this->initializer593f9ae84520a889839817);

        return array('valueHolder593f9ae8451e8501381547');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae84520a889839817 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae84520a889839817;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae84520a889839817 && $this->initializer593f9ae84520a889839817->__invoke($this->valueHolder593f9ae8451e8501381547, $this, 'initializeProxy', array(), $this->initializer593f9ae84520a889839817);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae8451e8501381547;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae8451e8501381547;
    }


}

class SymfonyComponentTranslationLoaderIcuResFileLoader_00000000425536ad000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\IcuResFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae846569009171528 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae84658c036225076 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae84651f411104376 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae84658c036225076);

        return $this->valueHolder593f9ae846569009171528->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae84658c036225076 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, '__get', array('name' => $name), $this->initializer593f9ae84658c036225076);

        if (isset(self::$publicProperties593f9ae84651f411104376[$name])) {
            return $this->valueHolder593f9ae846569009171528->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae846569009171528;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae846569009171528;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae84658c036225076);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae846569009171528;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae846569009171528;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, '__isset', array('name' => $name), $this->initializer593f9ae84658c036225076);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae846569009171528;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae846569009171528;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, '__unset', array('name' => $name), $this->initializer593f9ae84658c036225076);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae846569009171528;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae846569009171528;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, '__clone', array(), $this->initializer593f9ae84658c036225076);

        $this->valueHolder593f9ae846569009171528 = clone $this->valueHolder593f9ae846569009171528;
    }

    public function __sleep()
    {
        $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, '__sleep', array(), $this->initializer593f9ae84658c036225076);

        return array('valueHolder593f9ae846569009171528');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae84658c036225076 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae84658c036225076;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae84658c036225076 && $this->initializer593f9ae84658c036225076->__invoke($this->valueHolder593f9ae846569009171528, $this, 'initializeProxy', array(), $this->initializer593f9ae84658c036225076);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae846569009171528;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae846569009171528;
    }


}

class SymfonyComponentTranslationLoaderIcuDatFileLoader_00000000425536ac000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\IcuDatFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae8471d4060540498 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae8471f5862009688 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae847196097975720 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae8471f5862009688);

        return $this->valueHolder593f9ae8471d4060540498->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae8471f5862009688 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, '__get', array('name' => $name), $this->initializer593f9ae8471f5862009688);

        if (isset(self::$publicProperties593f9ae847196097975720[$name])) {
            return $this->valueHolder593f9ae8471d4060540498->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8471d4060540498;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8471d4060540498;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae8471f5862009688);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8471d4060540498;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8471d4060540498;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, '__isset', array('name' => $name), $this->initializer593f9ae8471f5862009688);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8471d4060540498;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8471d4060540498;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, '__unset', array('name' => $name), $this->initializer593f9ae8471f5862009688);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8471d4060540498;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8471d4060540498;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, '__clone', array(), $this->initializer593f9ae8471f5862009688);

        $this->valueHolder593f9ae8471d4060540498 = clone $this->valueHolder593f9ae8471d4060540498;
    }

    public function __sleep()
    {
        $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, '__sleep', array(), $this->initializer593f9ae8471f5862009688);

        return array('valueHolder593f9ae8471d4060540498');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae8471f5862009688 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae8471f5862009688;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae8471f5862009688 && $this->initializer593f9ae8471f5862009688->__invoke($this->valueHolder593f9ae8471d4060540498, $this, 'initializeProxy', array(), $this->initializer593f9ae8471f5862009688);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae8471d4060540498;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae8471d4060540498;
    }


}

class SymfonyComponentTranslationLoaderIniFileLoader_00000000425536af000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\IniFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae847e1b665133923 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae847e3d061639946 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae847dde469455666 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae847e3d061639946);

        return $this->valueHolder593f9ae847e1b665133923->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae847e3d061639946 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, '__get', array('name' => $name), $this->initializer593f9ae847e3d061639946);

        if (isset(self::$publicProperties593f9ae847dde469455666[$name])) {
            return $this->valueHolder593f9ae847e1b665133923->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae847e1b665133923;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae847e1b665133923;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae847e3d061639946);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae847e1b665133923;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae847e1b665133923;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, '__isset', array('name' => $name), $this->initializer593f9ae847e3d061639946);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae847e1b665133923;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae847e1b665133923;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, '__unset', array('name' => $name), $this->initializer593f9ae847e3d061639946);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae847e1b665133923;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae847e1b665133923;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, '__clone', array(), $this->initializer593f9ae847e3d061639946);

        $this->valueHolder593f9ae847e1b665133923 = clone $this->valueHolder593f9ae847e1b665133923;
    }

    public function __sleep()
    {
        $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, '__sleep', array(), $this->initializer593f9ae847e3d061639946);

        return array('valueHolder593f9ae847e1b665133923');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae847e3d061639946 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae847e3d061639946;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae847e3d061639946 && $this->initializer593f9ae847e3d061639946->__invoke($this->valueHolder593f9ae847e1b665133923, $this, 'initializeProxy', array(), $this->initializer593f9ae847e3d061639946);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae847e1b665133923;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae847e1b665133923;
    }


}

class SymfonyComponentTranslationLoaderJsonFileLoader_00000000425536ae000000006249aceee5402f250da41f565fbc51797d001de6 extends \Symfony\Component\Translation\Loader\JsonFileLoader implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae8489a5863189877 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae8489c7628722337 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae848968452843438 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function load($resource, $locale, $domain = 'messages')
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, 'load', array('resource' => $resource, 'locale' => $locale, 'domain' => $domain), $this->initializer593f9ae8489c7628722337);

        return $this->valueHolder593f9ae8489a5863189877->load($resource, $locale, $domain);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae8489c7628722337 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, '__get', array('name' => $name), $this->initializer593f9ae8489c7628722337);

        if (isset(self::$publicProperties593f9ae848968452843438[$name])) {
            return $this->valueHolder593f9ae8489a5863189877->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8489a5863189877;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8489a5863189877;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae8489c7628722337);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8489a5863189877;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8489a5863189877;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, '__isset', array('name' => $name), $this->initializer593f9ae8489c7628722337);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8489a5863189877;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8489a5863189877;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, '__unset', array('name' => $name), $this->initializer593f9ae8489c7628722337);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae8489a5863189877;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae8489a5863189877;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, '__clone', array(), $this->initializer593f9ae8489c7628722337);

        $this->valueHolder593f9ae8489a5863189877 = clone $this->valueHolder593f9ae8489a5863189877;
    }

    public function __sleep()
    {
        $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, '__sleep', array(), $this->initializer593f9ae8489c7628722337);

        return array('valueHolder593f9ae8489a5863189877');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae8489c7628722337 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae8489c7628722337;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae8489c7628722337 && $this->initializer593f9ae8489c7628722337->__invoke($this->valueHolder593f9ae8489a5863189877, $this, 'initializeProxy', array(), $this->initializer593f9ae8489c7628722337);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae8489a5863189877;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae8489a5863189877;
    }


}

class FOSRestBundleSerializerJMSSerializerAdapter_00000000425527a7000000006249aceee5402f250da41f565fbc51797d001de6 extends \FOS\RestBundle\Serializer\JMSSerializerAdapter implements \ProxyManager\Proxy\VirtualProxyInterface
{

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $valueHolder593f9ae849518602046775 = null;

    /**
     * @var \Closure|null initializer responsible for generating the wrapped object
     */
    private $initializer593f9ae84953f827800580 = null;

    /**
     * @var bool[] map of public properties of the parent class
     */
    private static $publicProperties593f9ae8494cf725925500 = array(
        
    );

    /**
     * {@inheritDoc}
     */
    public function serialize($data, $format, \FOS\RestBundle\Context\Context $context)
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, 'serialize', array('data' => $data, 'format' => $format, 'context' => $context), $this->initializer593f9ae84953f827800580);

        return $this->valueHolder593f9ae849518602046775->serialize($data, $format, $context);
    }

    /**
     * {@inheritDoc}
     */
    public function deserialize($data, $type, $format, \FOS\RestBundle\Context\Context $context)
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, 'deserialize', array('data' => $data, 'type' => $type, 'format' => $format, 'context' => $context), $this->initializer593f9ae84953f827800580);

        return $this->valueHolder593f9ae849518602046775->deserialize($data, $type, $format, $context);
    }

    /**
     * @override constructor for lazy initialization
     *
     * @param \Closure|null $initializer
     */
    public function __construct($initializer)
    {
        $this->initializer593f9ae84953f827800580 = $initializer;
    }

    /**
     * @param string $name
     */
    public function & __get($name)
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, '__get', array('name' => $name), $this->initializer593f9ae84953f827800580);

        if (isset(self::$publicProperties593f9ae8494cf725925500[$name])) {
            return $this->valueHolder593f9ae849518602046775->$name;
        }

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae849518602046775;

            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae849518602046775;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     * @param mixed $value
     */
    public function __set($name, $value)
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer593f9ae84953f827800580);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae849518602046775;

            return $targetObject->$name = $value;;
            return;
        }

        $targetObject = $this->valueHolder593f9ae849518602046775;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __isset($name)
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, '__isset', array('name' => $name), $this->initializer593f9ae84953f827800580);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae849518602046775;

            return isset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae849518602046775;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    /**
     * @param string $name
     */
    public function __unset($name)
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, '__unset', array('name' => $name), $this->initializer593f9ae84953f827800580);

        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));

        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder593f9ae849518602046775;

            unset($targetObject->$name);;
            return;
        }

        $targetObject = $this->valueHolder593f9ae849518602046775;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();

        return $returnValue;
    }

    public function __clone()
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, '__clone', array(), $this->initializer593f9ae84953f827800580);

        $this->valueHolder593f9ae849518602046775 = clone $this->valueHolder593f9ae849518602046775;
    }

    public function __sleep()
    {
        $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, '__sleep', array(), $this->initializer593f9ae84953f827800580);

        return array('valueHolder593f9ae849518602046775');
    }

    public function __wakeup()
    {
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer593f9ae84953f827800580 = $initializer;
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyInitializer()
    {
        return $this->initializer593f9ae84953f827800580;
    }

    /**
     * {@inheritDoc}
     */
    public function initializeProxy()
    {
        return $this->initializer593f9ae84953f827800580 && $this->initializer593f9ae84953f827800580->__invoke($this->valueHolder593f9ae849518602046775, $this, 'initializeProxy', array(), $this->initializer593f9ae84953f827800580);
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder593f9ae849518602046775;
    }

    /**
     * {@inheritDoc}
     */
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder593f9ae849518602046775;
    }


}
